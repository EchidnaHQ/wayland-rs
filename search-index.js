var searchIndex={};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","i":[[3,"DispatchData","wayland_client","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[3,"UserData","","A wrapper for user data, able to store any type, and…",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,[[]]],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,null],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",1,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[10,"from_raw","","Construct a message from its raw representation",1,[[["message"]],["result"]]],[10,"into_raw","","Turn this message into its raw representation",1,[[["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,[[["u32"]],["result"]]],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"AnonymousObject","","Anonymous interface",null,null],[3,"Display","","A connection to a wayland server",null,null],[3,"ProtocolError","","A protocol error",null,null],[12,"code","","The error code associated with the error",2,null],[12,"object_id","","The id of the object that caused the error",2,null],[12,"object_interface","","The interface of the object that caused the error",2,null],[12,"message","","The message sent by the server describing the error",2,null],[3,"EventQueue","","An event queue for protocol messages",null,null],[3,"QueueToken","","A token representing this event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[3,"GlobalManager","","An utility to manage global objects",null,null],[3,"Attached","","A handle to a proxy that has been attached to an event queue",null,null],[3,"Main","","A main handle to a proxy",null,null],[3,"Proxy","","An handle to a wayland proxy",null,null],[3,"RawEvent","","An generic event",null,null],[12,"interface","","Interface of the associated object",3,null],[12,"opcode","","Opcode of the event",3,null],[12,"name","","Name of the event",3,null],[12,"args","","Arguments of the message",3,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to…",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and…",4,null],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",4,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of…",4,null],[13,"InvalidName","","The provided socket name is invalid",4,null],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",4,null],[4,"GlobalError","","An error that occurred trying to bind a global",null,null],[13,"Missing","","The requested global was missing",5,null],[13,"VersionTooLow","","The global advertised by the server has a lower version…",5,null],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",null,null],[13,"New","","A new global was created",6,null],[12,"id","wayland_client::GlobalEvent","Id of the new global",6,null],[12,"interface","","Interface of the new global",6,null],[12,"version","","Maximum supported version of the new global",6,null],[13,"Removed","wayland_client","A global was removed",6,null],[12,"id","wayland_client::GlobalEvent","Id of the removed global",6,null],[12,"interface","","Interface of the removed global",6,null],[4,"ProxyMap","wayland_client","This type only exists for type-level compatibility with…",null,null],[4,"Argument","","Enum of possible argument in an event",null,null],[13,"Int","","i32",7,null],[13,"Uint","","u32",7,null],[13,"Float","","float",7,null],[13,"Str","","CString",7,null],[13,"Object","","id of a wayland object",7,null],[13,"NewId","","id of a newly created wayland object",7,null],[13,"Array","","Vec",7,null],[13,"Fd","","RawFd",7,null],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents…",8,[[],[["connecterror"],["display"],["result",["display","connecterror"]]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given…",8,[[["into",["osstring"]],["osstring"]],[["connecterror"],["display"],["result",["display","connecterror"]]]]],[11,"from_fd","","Attempt to use an already connected unix socket on given…",8,[[["rawfd"]],[["connecterror"],["display"],["result",["display","connecterror"]]]]],[11,"flush","","Non-blocking write to the server",8,[[["self"]],["result"]]],[11,"create_event_queue","","Create a new event queue associated with this wayland…",8,[[["self"]],["eventqueue"]]],[11,"protocol_error","","Retrieve the last protocol error if any occured",8,[[["self"]],[["protocolerror"],["option",["protocolerror"]]]]],[11,"get_connection_fd","","Retrieve the file descriptor associated with the wayland…",8,[[["self"]],["rawfd"]]],[11,"from_external_display","","Create a Display and from an external display",8,[[],["display"]]],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",8,[[["self"]]]],[11,"dispatch","","Dispatches events from the internal buffer.",9,[[["self"],["t"],["f"]],[["result",["u32"]],["u32"]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",9,[[["self"],["t"],["f"]],[["result",["u32"]],["u32"]]]],[11,"sync_roundtrip","","Synchronous roundtrip",9,[[["self"],["t"],["f"]],[["result",["u32"]],["u32"]]]],[11,"token","","Create a new token associated with this event queue",9,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an concurrent read",9,[[["self"]],[["option",["readeventsguard"]],["readeventsguard"]]]],[11,"display","","Access the `Display` of the connection",9,[[["self"]],["display"]]],[11,"read_events","","Read events",10,[[],["result"]]],[11,"cancel","","Cancel the read",10,[[]]],[11,"new","","Create a global manager handling a registry",11,[[["attached"]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",11,[[["f"],["attached"]],["globalmanager"]]],[11,"instantiate_exact","","Instantiate a global with a specific version",11,[[["u32"],["self"]],[["globalerror"],["main"],["result",["main","globalerror"]]]]],[11,"instantiate_range","","Instantiate a global from a version range",11,[[["u32"],["self"]],[["globalerror"],["main"],["result",["main","globalerror"]]]]],[11,"list","","Retrieve the list of currently known globals",11,[[["self"]],["vec"]]],[11,"send","","Send a request creating an object through this object",12,[[["u32"],["option",["u32"]],["self"]],[["option",["main"]],["main"]]]],[11,"is_alive","","Check if the object associated with this proxy is still…",12,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object…",12,[[["self"]],["u32"]]],[11,"id","","Retrieve the object id of this wayland object",12,[[["self"]],["u32"]]],[11,"user_data","","Access the UserData associated to this object",12,[[["self"]],["userdata"]]],[11,"equals","","Check if the other proxy refers to the same underlying…",12,[[["self"],["proxy"]],["bool"]]],[11,"attach","","Attach this proxy to the event queue represented by this…",12,[[["self"],["queuetoken"]],["attached"]]],[11,"anonymize","","Erase the actual type of this proxy",12,[[],[["proxy",["anonymousobject"]],["anonymousobject"]]]],[11,"deanonymize","","Attempt to recover the typed variant of an anonymous proxy",12,[[],[["result",["proxy"]],["proxy"]]]],[11,"detach","","Create a non-attached handle from this one",13,[[["self"]],["i"]]],[11,"assign","","Assign this object to given filter",14,[[["filter"],["self"]]]],[11,"quick_assign","","Shorthand for assigning a closure to an object",14,[[["self"],["f"]]]],[11,"deanonymize","","Attempt to recover the typed variant of an anonymous proxy",14,[[],[["result",["main"]],["main"]]]],[11,"from_c_ptr","","Create a `Main` instance from a C pointer",14,[[],["main"]]],[11,"is_external","","Check whether this proxy is managed by the library or not",12,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",12,[[["self"]]]],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",12,[[],["proxy"]]],[11,"get","","Unusable method only existing for type-level compatibility",15,[[["self"],["u32"]],[["proxy"],["option",["proxy"]]]]],[11,"get_new","","Unusable method only existing for type-level compatibility",15,[[["self"],["u32"]],[["main"],["option",["main"]]]]],[0,"sys","","C-associated types",null,null],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",null,null],[4,"wl_proxy","wayland_client::sys::client","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"wl_display_connect_to_fd","","",null,[[["i32"]]]],[5,"wl_display_connect","","",null,[[]]],[5,"wl_display_disconnect","","",null,[[]]],[5,"wl_display_get_fd","","",null,[[],["i32"]]],[5,"wl_display_roundtrip","","",null,[[],["i32"]]],[5,"wl_display_read_events","","",null,[[],["i32"]]],[5,"wl_display_prepare_read","","",null,[[],["i32"]]],[5,"wl_display_cancel_read","","",null,[[]]],[5,"wl_display_dispatch","","",null,[[],["i32"]]],[5,"wl_display_dispatch_pending","","",null,[[],["i32"]]],[5,"wl_display_get_error","","",null,[[],["i32"]]],[5,"wl_display_get_protocol_error","","",null,[[],["u32"]]],[5,"wl_display_flush","","",null,[[],["i32"]]],[5,"wl_event_queue_destroy","","",null,[[]]],[5,"wl_display_create_queue","","",null,[[]]],[5,"wl_display_roundtrip_queue","","",null,[[],["i32"]]],[5,"wl_display_prepare_read_queue","","",null,[[],["i32"]]],[5,"wl_display_dispatch_queue","","",null,[[],["i32"]]],[5,"wl_display_dispatch_queue_pending","","",null,[[],["i32"]]],[5,"wl_proxy_create","","",null,[[]]],[5,"wl_proxy_destroy","","",null,[[]]],[5,"wl_proxy_add_listener","","",null,[[],["i32"]]],[5,"wl_proxy_get_listener","","",null,[[]]],[5,"wl_proxy_add_dispatcher","","",null,[[],["i32"]]],[5,"wl_proxy_marshal_array_constructor","","",null,[[["u32"]]]],[5,"wl_proxy_marshal_array_constructor_versioned","","",null,[[["u32"]]]],[5,"wl_proxy_marshal_array","","",null,[[["u32"]]]],[5,"wl_proxy_set_user_data","","",null,[[]]],[5,"wl_proxy_get_user_data","","",null,[[]]],[5,"wl_proxy_get_id","","",null,[[],["u32"]]],[5,"wl_proxy_get_class","","",null,[[]]],[5,"wl_proxy_set_queue","","",null,[[]]],[5,"wl_proxy_get_version","","",null,[[],["u32"]]],[5,"wl_proxy_create_wrapper","","",null,[[]]],[5,"wl_proxy_wrapper_destroy","","",null,[[]]],[5,"wl_log_set_handler_client","","",null,[[]]],[5,"wl_list_init","","",null,[[]]],[5,"wl_list_insert","","",null,[[]]],[5,"wl_list_remove","","",null,[[]]],[5,"wl_list_length","","",null,[[],["i32"]]],[5,"wl_list_empty","","",null,[[],["i32"]]],[5,"wl_list_insert_list","","",null,[[]]],[5,"wl_array_init","","",null,[[]]],[5,"wl_array_release","","",null,[[]]],[5,"wl_array_add","","",null,[[["usize"]]]],[5,"wl_array_copy","","",null,[[]]],[5,"wl_proxy_marshal_constructor","","",null,[[["u32"]]]],[5,"wl_proxy_marshal_constructor_versioned","","",null,[[["u32"]]]],[5,"wl_proxy_marshal","","",null,[[["u32"]]]],[5,"is_lib_available","","",null,[[],["bool"]]],[0,"common","wayland_client::sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_client::sys::common","",null,null],[12,"name","","",16,null],[12,"signature","","",16,null],[12,"types","","",16,null],[3,"wl_interface","","",null,null],[12,"name","","",17,null],[12,"version","","",17,null],[12,"request_count","","",17,null],[12,"requests","","",17,null],[12,"event_count","","",17,null],[12,"events","","",17,null],[3,"wl_list","","",null,null],[12,"prev","","",18,null],[12,"next","","",18,null],[3,"wl_array","","",null,null],[12,"size","","",19,null],[12,"alloc","","",19,null],[12,"data","","",19,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",null,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",null,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",null,[[["i32"]],["i32"]]],[19,"wl_argument","","",null,null],[12,"i","","",20,null],[12,"u","","",20,null],[12,"f","","",20,null],[12,"s","","",20,null],[12,"o","","",20,null],[12,"n","","",20,null],[12,"a","","",20,null],[12,"h","","",20,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"protocol","wayland_client","",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","server couldn't find object",21,null],[13,"InvalidMethod","","method doesn't exist on the specified interface",21,null],[13,"NoMemory","","server is out of memory",21,null],[4,"Request","","",null,null],[13,"Sync","","asynchronous roundtrip",22,null],[13,"GetRegistry","","get global registry object",22,null],[4,"Event","","",null,null],[13,"Error","","fatal error event",23,null],[12,"object_id","wayland_client::protocol::wl_display::Event","",23,null],[12,"code","","",23,null],[12,"message","","",23,null],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",23,null],[12,"id","wayland_client::protocol::wl_display::Event","",23,null],[7,"wl_display_requests","wayland_client::protocol::wl_display","C-representation of the messages of this interface, for…",null,null],[7,"wl_display_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_display_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_REGISTRY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ERROR_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DELETE_ID_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",21,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",21,[[["self"]],["u32"]]],[11,"sync","","asynchronous roundtrip",24,[[["self"]],[["main",["wlcallback"]],["wlcallback"]]]],[11,"get_registry","","get global registry object",24,[[["self"]],[["wlregistry"],["main",["wlregistry"]]]]],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[4,"Request","","",null,null],[13,"Bind","","bind an object to the display",25,null],[12,"name","wayland_client::protocol::wl_registry::Request","",25,null],[12,"id","","",25,null],[4,"Event","wayland_client::protocol::wl_registry","",null,null],[13,"Global","","announce global object",26,null],[12,"name","wayland_client::protocol::wl_registry::Event","",26,null],[12,"interface","","",26,null],[12,"version","","",26,null],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",26,null],[12,"name","wayland_client::protocol::wl_registry::Event","",26,null],[7,"wl_registry_requests","wayland_client::protocol::wl_registry","C-representation of the messages of this interface, for…",null,null],[7,"wl_registry_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_registry_interface","","C representation of this interface, for interop",null,null],[17,"REQ_BIND_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GLOBAL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_GLOBAL_REMOVE_SINCE","","The minimal object version supporting this event",null,null],[11,"bind","","bind an object to the display",27,[[["u32"],["self"]],[["main"],["from",["proxy"]],["asref",["proxy"]],["proxy"],["interface"]]]],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",28,null],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",28,null],[7,"wl_callback_events","wayland_client::protocol::wl_callback","C-representation of the messages of this interface, for…",null,null],[7,"wl_callback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",29,null],[13,"CreateRegion","","create new region",29,null],[4,"Event","","",null,null],[7,"wl_compositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_compositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",null,null],[11,"create_surface","","create new surface",30,[[["self"]],[["wlsurface"],["main",["wlsurface"]]]]],[11,"create_region","","create new region",30,[[["self"]],[["main",["wlregion"]],["wlregion"]]]],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",31,null],[12,"offset","wayland_client::protocol::wl_shm_pool::Request","",31,null],[12,"width","","",31,null],[12,"height","","",31,null],[12,"stride","","",31,null],[12,"format","","",31,null],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",31,null],[13,"Resize","","change the size of the pool mapping",31,null],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",31,null],[4,"Event","wayland_client::protocol::wl_shm_pool","",null,null],[7,"wl_shm_pool_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_pool_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[11,"create_buffer","","create a buffer from the pool",32,[[["format"],["self"],["i32"]],[["wlbuffer"],["main",["wlbuffer"]]]]],[11,"destroy","","destroy the pool",32,[[["self"]]]],[11,"resize","","change the size of the pool mapping",32,[[["self"],["i32"]]]],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",33,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",33,null],[13,"InvalidFd","","mmapping the file descriptor failed",33,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",34,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",34,null],[13,"C8","","8-bit color index format, [7:0] C",34,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",34,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",34,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",34,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",34,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",34,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",34,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",34,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",34,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",34,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",34,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",34,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",34,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",34,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",34,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",34,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",34,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",34,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",34,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",34,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",34,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",34,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",34,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",34,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",34,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",34,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",34,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",34,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",34,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",34,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",34,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",34,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",34,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",34,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",34,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",34,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",34,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",34,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",34,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",34,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",34,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",34,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",34,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",34,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",34,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",34,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",34,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",34,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",34,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",34,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",34,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",34,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",34,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",34,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",34,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",34,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",35,null],[12,"fd","wayland_client::protocol::wl_shm::Request","",35,null],[12,"size","","",35,null],[4,"Event","wayland_client::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",36,null],[12,"format","wayland_client::protocol::wl_shm::Event","",36,null],[7,"wl_shm_requests","wayland_client::protocol::wl_shm","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_POOL_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",33,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",33,[[["self"]],["u32"]]],[11,"from_raw","","",34,[[["u32"]],[["format"],["option",["format"]]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"create_pool","","create a shm pool",37,[[["rawfd"],["self"],["i32"]],[["main",["wlshmpool"]],["wlshmpool"]]]],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",38,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",39,null],[7,"wl_buffer_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[11,"destroy","","destroy a buffer",40,[[["self"]]]],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",41,null],[13,"InvalidActionMask","","action mask contains invalid values",41,null],[13,"InvalidAction","","action argument has an invalid value",41,null],[13,"InvalidOffer","","offer doesn't accept this request",41,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",42,null],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",42,null],[12,"mime_type","","",42,null],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",42,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",42,null],[12,"fd","","",42,null],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",42,null],[13,"Finish","","the offer will no longer be used",42,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",42,null],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",42,null],[12,"preferred_action","","",42,null],[4,"Event","wayland_client::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",43,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",43,null],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",43,null],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",43,null],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",43,null],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",43,null],[7,"wl_data_offer_requests","wayland_client::protocol::wl_data_offer","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_ACCEPT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",41,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",41,[[["self"]],["u32"]]],[11,"accept","","accept one of the offered mime types",44,[[["u32"],["string"],["self"],["option",["string"]]]]],[11,"receive","","request that the data is transferred",44,[[["string"],["self"],["rawfd"]]]],[11,"destroy","","destroy data offer",44,[[["self"]]]],[11,"finish","","the offer will no longer be used",44,[[["self"]]]],[11,"set_actions","","set the available/preferred drag-and-drop actions",44,[[["u32"],["self"]]]],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",45,null],[13,"InvalidSource","","source doesn't accept this request",45,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",46,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",46,null],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",46,null],[13,"SetActions","","set the available drag-and-drop actions",46,null],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",46,null],[4,"Event","wayland_client::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",47,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",47,null],[13,"Send","wayland_client::protocol::wl_data_source","send the data",47,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",47,null],[12,"fd","","",47,null],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",47,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",47,null],[13,"DndFinished","","the drag-and-drop operation concluded",47,null],[13,"Action","","notify the selected action",47,null],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",47,null],[7,"wl_data_source_requests","wayland_client::protocol::wl_data_source","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",45,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",45,[[["self"]],["u32"]]],[11,"offer","","add an offered mime type",48,[[["string"],["self"]]]],[11,"destroy","","destroy the data source",48,[[["self"]]]],[11,"set_actions","","set the available drag-and-drop actions",48,[[["u32"],["self"]]]],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",49,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",50,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",50,null],[12,"origin","","",50,null],[12,"icon","","",50,null],[12,"serial","","",50,null],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",50,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",50,null],[12,"serial","","",50,null],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",50,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",51,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",51,null],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",51,null],[12,"serial","wayland_client::protocol::wl_data_device::Event","",51,null],[12,"surface","","",51,null],[12,"x","","",51,null],[12,"y","","",51,null],[12,"id","","",51,null],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",51,null],[13,"Motion","","drag-and-drop session motion",51,null],[12,"time","wayland_client::protocol::wl_data_device::Event","",51,null],[12,"x","","",51,null],[12,"y","","",51,null],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",51,null],[13,"Selection","","advertise new selection",51,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",51,null],[7,"wl_data_device_requests","wayland_client::protocol::wl_data_device","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_START_DRAG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",49,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[11,"start_drag","","start drag-and-drop operation",52,[[["wlsurface"],["u32"],["option",["wldatasource"]],["option",["wlsurface"]],["self"],["wldatasource"]]]],[11,"set_selection","","copy data to the selection",52,[[["u32"],["option",["wldatasource"]],["self"],["wldatasource"]]]],[11,"release","","destroy data device",52,[[["self"]]]],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",53,null],[13,"GetDataDevice","","create a new data device",53,null],[12,"seat","wayland_client::protocol::wl_data_device_manager::Request","",53,null],[4,"Event","wayland_client::protocol::wl_data_device_manager","",null,null],[7,"wl_data_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[18,"None","","no action",54,null],[18,"Copy","","copy action",54,null],[18,"Move","","move action",54,null],[18,"Ask","","ask action",54,null],[11,"empty","","Returns an empty set of flags",54,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",54,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",54,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",54,[[["u32"]],[["dndaction"],["option",["dndaction"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",54,[[["u32"]],["dndaction"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",54,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",54,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",54,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",54,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",54,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",54,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",54,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",54,[[["self"],["dndaction"],["bool"]]]],[11,"from_raw","","",54,[[["u32"]],[["dndaction"],["option",["dndaction"]]]]],[11,"to_raw","","",54,[[["self"]],["u32"]]],[11,"create_data_source","","create a new data source",55,[[["self"]],[["wldatasource"],["main",["wldatasource"]]]]],[11,"get_data_device","","create a new data device",55,[[["wlseat"],["self"]],[["wldatadevice"],["main",["wldatadevice"]]]]],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",56,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",57,null],[12,"surface","wayland_client::protocol::wl_shell::Request","",57,null],[4,"Event","wayland_client::protocol::wl_shell","",null,null],[7,"wl_shell_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",56,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",56,[[["self"]],["u32"]]],[11,"get_shell_surface","","create a shell surface from a surface",58,[[["self"],["wlsurface"]],[["wlshellsurface"],["main",["wlshellsurface"]]]]],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",59,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on…",59,null],[13,"Driver","","switch output mode to the smallest mode that can fit the…",59,null],[13,"Fill","","no upscaling, center on output and add black borders to…",59,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",60,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",60,null],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",60,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"serial","","",60,null],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",60,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"serial","","",60,null],[12,"edges","","",60,null],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",60,null],[13,"SetTransient","","make the surface a transient surface",60,null],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"x","","",60,null],[12,"y","","",60,null],[12,"flags","","",60,null],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",60,null],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"framerate","","",60,null],[12,"output","","",60,null],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",60,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"serial","","",60,null],[12,"parent","","",60,null],[12,"x","","",60,null],[12,"y","","",60,null],[12,"flags","","",60,null],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",60,null],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",60,null],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",60,null],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",60,null],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",60,null],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",60,null],[4,"Event","wayland_client::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",61,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",61,null],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",61,null],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",61,null],[12,"width","","",61,null],[12,"height","","",61,null],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",61,null],[7,"wl_shell_surface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[18,"None","","no edge",62,null],[18,"Top","","top edge",62,null],[18,"Bottom","","bottom edge",62,null],[18,"Left","","left edge",62,null],[18,"TopLeft","","top and left edges",62,null],[18,"BottomLeft","","bottom and left edges",62,null],[18,"Right","","right edge",62,null],[18,"TopRight","","top and right edges",62,null],[18,"BottomRight","","bottom and right edges",62,null],[11,"empty","","Returns an empty set of flags",62,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",62,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",62,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",62,[[["u32"]],[["resize"],["option",["resize"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",62,[[["u32"]],["resize"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",62,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",62,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",62,[[["resize"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",62,[[["resize"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",62,[[["resize"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",62,[[["resize"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",62,[[["resize"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",62,[[["resize"],["self"],["bool"]]]],[11,"from_raw","","",62,[[["u32"]],[["resize"],["option",["resize"]]]]],[11,"to_raw","","",62,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",63,null],[11,"empty","","Returns an empty set of flags",63,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",63,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",63,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",63,[[["u32"]],[["transient"],["option",["transient"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",63,[[["u32"]],["transient"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",63,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",63,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",63,[[["transient"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",63,[[["transient"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",63,[[["transient"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",63,[[["transient"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",63,[[["transient"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",63,[[["transient"],["self"],["bool"]]]],[11,"from_raw","","",63,[[["u32"]],[["transient"],["option",["transient"]]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"from_raw","","",59,[[["u32"]],[["fullscreenmethod"],["option",["fullscreenmethod"]]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"pong","","respond to a ping event",64,[[["u32"],["self"]]]],[11,"_move","","start an interactive move",64,[[["wlseat"],["self"],["u32"]]]],[11,"resize","","start an interactive resize",64,[[["resize"],["wlseat"],["u32"],["self"]]]],[11,"set_toplevel","","make the surface a toplevel surface",64,[[["self"]]]],[11,"set_transient","","make the surface a transient surface",64,[[["i32"],["transient"],["self"],["wlsurface"]]]],[11,"set_fullscreen","","make the surface a fullscreen surface",64,[[["u32"],["fullscreenmethod"],["option",["wloutput"]],["self"],["wloutput"]]]],[11,"set_popup","","make the surface a popup surface",64,[[["wlseat"],["u32"],["i32"],["transient"],["self"],["wlsurface"]]]],[11,"set_maximized","","make the surface a maximized surface",64,[[["option",["wloutput"]],["wloutput"],["self"]]]],[11,"set_title","","set surface title",64,[[["string"],["self"]]]],[11,"set_class","","set surface class",64,[[["string"],["self"]]]],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",65,null],[13,"InvalidTransform","","buffer transform value is invalid",65,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",66,null],[13,"Attach","","set the surface contents",66,null],[12,"buffer","wayland_client::protocol::wl_surface::Request","",66,null],[12,"x","","",66,null],[12,"y","","",66,null],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",66,null],[12,"x","wayland_client::protocol::wl_surface::Request","",66,null],[12,"y","","",66,null],[12,"width","","",66,null],[12,"height","","",66,null],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",66,null],[13,"SetOpaqueRegion","","set opaque region",66,null],[12,"region","wayland_client::protocol::wl_surface::Request","",66,null],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",66,null],[12,"region","wayland_client::protocol::wl_surface::Request","",66,null],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",66,null],[13,"SetBufferTransform","","sets the buffer transformation",66,null],[12,"transform","wayland_client::protocol::wl_surface::Request","",66,null],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",66,null],[12,"scale","wayland_client::protocol::wl_surface::Request","",66,null],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",66,null],[12,"x","wayland_client::protocol::wl_surface::Request","",66,null],[12,"y","","",66,null],[12,"width","","",66,null],[12,"height","","",66,null],[4,"Event","wayland_client::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",67,null],[12,"output","wayland_client::protocol::wl_surface::Event","",67,null],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",67,null],[12,"output","wayland_client::protocol::wl_surface::Event","",67,null],[7,"wl_surface_requests","wayland_client::protocol::wl_surface","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",65,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"destroy","","delete surface",68,[[["self"]]]],[11,"attach","","set the surface contents",68,[[["wlbuffer"],["i32"],["self"],["option",["wlbuffer"]]]]],[11,"damage","","mark part of the surface damaged",68,[[["self"],["i32"]]]],[11,"frame","","request a frame throttling hint",68,[[["self"]],[["main",["wlcallback"]],["wlcallback"]]]],[11,"set_opaque_region","","set opaque region",68,[[["option",["wlregion"]],["self"],["wlregion"]]]],[11,"set_input_region","","set input region",68,[[["option",["wlregion"]],["self"],["wlregion"]]]],[11,"commit","","commit pending surface state",68,[[["self"]]]],[11,"set_buffer_transform","","sets the buffer transformation",68,[[["self"],["transform"]]]],[11,"set_buffer_scale","","sets the buffer scaling factor",68,[[["self"],["i32"]]]],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",68,[[["self"],["i32"]]]],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",69,null],[13,"GetKeyboard","","return keyboard object",69,null],[13,"GetTouch","","return touch object",69,null],[13,"Release","","release the seat object",69,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",70,null],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",70,null],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",70,null],[12,"name","wayland_client::protocol::wl_seat::Event","",70,null],[7,"wl_seat_requests","wayland_client::protocol::wl_seat","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_POINTER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[18,"Pointer","","the seat has pointer devices",71,null],[18,"Keyboard","","the seat has one or more keyboards",71,null],[18,"Touch","","the seat has touch devices",71,null],[11,"empty","","Returns an empty set of flags",71,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",71,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",71,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",71,[[["u32"]],[["option",["capability"]],["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",71,[[["u32"]],["capability"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",71,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",71,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",71,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",71,[[["capability"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",71,[[["capability"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",71,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",71,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",71,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",71,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",71,[[["u32"]],[["capability"],["option",["capability"]]]]],[11,"to_raw","","",71,[[["self"]],["u32"]]],[11,"get_pointer","","return pointer object",72,[[["self"]],[["main",["wlpointer"]],["wlpointer"]]]],[11,"get_keyboard","","return keyboard object",72,[[["self"]],[["main",["wlkeyboard"]],["wlkeyboard"]]]],[11,"get_touch","","return touch object",72,[[["self"]],[["main",["wltouch"]],["wltouch"]]]],[11,"release","","release the seat object",72,[[["self"]]]],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",73,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",74,null],[13,"Pressed","","the button is pressed",74,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",75,null],[13,"HorizontalScroll","","horizontal axis",75,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel rotation",76,null],[13,"Finger","","finger on a touch surface",76,null],[13,"Continuous","","continuous coordinate space",76,null],[13,"WheelTilt","","a physical wheel tilt",76,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",77,null],[12,"serial","wayland_client::protocol::wl_pointer::Request","",77,null],[12,"surface","","",77,null],[12,"hotspot_x","","",77,null],[12,"hotspot_y","","",77,null],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",77,null],[4,"Event","","",null,null],[13,"Enter","","enter event",78,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"surface","","",78,null],[12,"surface_x","","",78,null],[12,"surface_y","","",78,null],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",78,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"surface","","",78,null],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",78,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"surface_x","","",78,null],[12,"surface_y","","",78,null],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",78,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"time","","",78,null],[12,"button","","",78,null],[12,"state","","",78,null],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",78,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"axis","","",78,null],[12,"value","","",78,null],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",78,null],[13,"AxisSource","","axis source event",78,null],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",78,null],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",78,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"axis","","",78,null],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",78,null],[12,"axis","wayland_client::protocol::wl_pointer::Event","",78,null],[12,"discrete","","",78,null],[7,"wl_pointer_requests","wayland_client::protocol::wl_pointer","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",73,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",73,[[["self"]],["u32"]]],[11,"from_raw","","",74,[[["u32"]],[["option",["buttonstate"]],["buttonstate"]]]],[11,"to_raw","","",74,[[["self"]],["u32"]]],[11,"from_raw","","",75,[[["u32"]],[["axis"],["option",["axis"]]]]],[11,"to_raw","","",75,[[["self"]],["u32"]]],[11,"from_raw","","",76,[[["u32"]],[["axissource"],["option",["axissource"]]]]],[11,"to_raw","","",76,[[["self"]],["u32"]]],[11,"set_cursor","","set the pointer surface",79,[[["u32"],["option",["wlsurface"]],["i32"],["self"],["wlsurface"]]]],[11,"release","","release the pointer object",79,[[["self"]]]],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",80,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",80,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",81,null],[13,"Pressed","","key is pressed",81,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",82,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",83,null],[12,"format","wayland_client::protocol::wl_keyboard::Event","",83,null],[12,"fd","","",83,null],[12,"size","","",83,null],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",83,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",83,null],[12,"surface","","",83,null],[12,"keys","","",83,null],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",83,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",83,null],[12,"surface","","",83,null],[13,"Key","wayland_client::protocol::wl_keyboard","key event",83,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",83,null],[12,"time","","",83,null],[12,"key","","",83,null],[12,"state","","",83,null],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",83,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",83,null],[12,"mods_depressed","","",83,null],[12,"mods_latched","","",83,null],[12,"mods_locked","","",83,null],[12,"group","","",83,null],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",83,null],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",83,null],[12,"delay","","",83,null],[7,"wl_keyboard_requests","wayland_client::protocol::wl_keyboard","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",80,[[["u32"]],[["keymapformat"],["option",["keymapformat"]]]]],[11,"to_raw","","",80,[[["self"]],["u32"]]],[11,"from_raw","","",81,[[["u32"]],[["keystate"],["option",["keystate"]]]]],[11,"to_raw","","",81,[[["self"]],["u32"]]],[11,"release","","release the keyboard object",84,[[["self"]]]],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",85,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",86,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",86,null],[12,"time","","",86,null],[12,"surface","","",86,null],[12,"id","","",86,null],[12,"x","","",86,null],[12,"y","","",86,null],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",86,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",86,null],[12,"time","","",86,null],[12,"id","","",86,null],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",86,null],[12,"time","wayland_client::protocol::wl_touch::Event","",86,null],[12,"id","","",86,null],[12,"x","","",86,null],[12,"y","","",86,null],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",86,null],[13,"Cancel","","touch session cancelled",86,null],[13,"Shape","","update shape of touch point",86,null],[12,"id","wayland_client::protocol::wl_touch::Event","",86,null],[12,"major","","",86,null],[12,"minor","","",86,null],[13,"Orientation","wayland_client::protocol::wl_touch","update orientation of touch point",86,null],[12,"id","wayland_client::protocol::wl_touch::Event","",86,null],[12,"orientation","","",86,null],[7,"wl_touch_requests","wayland_client::protocol::wl_touch","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",null,null],[11,"release","","release the touch object",87,[[["self"]]]],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"Mode","wayland_client::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",88,null],[13,"None","","no geometry",88,null],[13,"HorizontalRgb","","horizontal RGB",88,null],[13,"HorizontalBgr","","horizontal BGR",88,null],[13,"VerticalRgb","","vertical RGB",88,null],[13,"VerticalBgr","","vertical BGR",88,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",89,null],[13,"_90","","90 degrees counter-clockwise",89,null],[13,"_180","","180 degrees counter-clockwise",89,null],[13,"_270","","270 degrees counter-clockwise",89,null],[13,"Flipped","","180 degree flip around a vertical axis",89,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",89,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",89,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",89,null],[4,"Request","","",null,null],[13,"Release","","release the output object",90,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",91,null],[12,"x","wayland_client::protocol::wl_output::Event","",91,null],[12,"y","","",91,null],[12,"physical_width","","",91,null],[12,"physical_height","","",91,null],[12,"subpixel","","",91,null],[12,"make","","",91,null],[12,"model","","",91,null],[12,"transform","","",91,null],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",91,null],[12,"flags","wayland_client::protocol::wl_output::Event","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[12,"refresh","","",91,null],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",91,null],[13,"Scale","","output scaling properties",91,null],[12,"factor","wayland_client::protocol::wl_output::Event","",91,null],[7,"wl_output_requests","wayland_client::protocol::wl_output","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",88,[[["u32"]],[["option",["subpixel"]],["subpixel"]]]],[11,"to_raw","","",88,[[["self"]],["u32"]]],[11,"from_raw","","",89,[[["u32"]],[["option",["transform"]],["transform"]]]],[11,"to_raw","","",89,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",92,null],[18,"Preferred","","indicates this is the preferred mode",92,null],[11,"empty","","Returns an empty set of flags",92,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",92,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",92,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",92,[[["u32"]],[["mode"],["option",["mode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",92,[[["u32"]],["mode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",92,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",92,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",92,[[["mode"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",92,[[["mode"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",92,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",92,[[["self"],["mode"],["bool"]]]],[11,"from_raw","","",92,[[["u32"]],[["mode"],["option",["mode"]]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"release","","release the output object",93,[[["self"]]]],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",94,null],[13,"Add","","add rectangle to region",94,null],[12,"x","wayland_client::protocol::wl_region::Request","",94,null],[12,"y","","",94,null],[12,"width","","",94,null],[12,"height","","",94,null],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",94,null],[12,"x","wayland_client::protocol::wl_region::Request","",94,null],[12,"y","","",94,null],[12,"width","","",94,null],[12,"height","","",94,null],[4,"Event","wayland_client::protocol::wl_region","",null,null],[7,"wl_region_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_region_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",null,null],[11,"destroy","","destroy region",95,[[["self"]]]],[11,"add","","add rectangle to region",95,[[["self"],["i32"]]]],[11,"subtract","","subtract rectangle from region",95,[[["self"],["i32"]]]],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",96,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",97,null],[13,"GetSubsurface","","give a surface the role sub-surface",97,null],[12,"surface","wayland_client::protocol::wl_subcompositor::Request","",97,null],[12,"parent","","",97,null],[4,"Event","wayland_client::protocol::wl_subcompositor","",null,null],[7,"wl_subcompositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subcompositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",96,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",96,[[["self"]],["u32"]]],[11,"destroy","","unbind from the subcompositor interface",98,[[["self"]]]],[11,"get_subsurface","","give a surface the role sub-surface",98,[[["self"],["wlsurface"]],[["main",["wlsubsurface"]],["wlsubsurface"]]]],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",99,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",100,null],[13,"SetPosition","","reposition the sub-surface",100,null],[12,"x","wayland_client::protocol::wl_subsurface::Request","",100,null],[12,"y","","",100,null],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",100,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",100,null],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",100,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",100,null],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",100,null],[13,"SetDesync","","set sub-surface to desynchronized mode",100,null],[4,"Event","","",null,null],[7,"wl_subsurface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subsurface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",99,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",99,[[["self"]],["u32"]]],[11,"destroy","","remove sub-surface interface",101,[[["self"]]]],[11,"set_position","","reposition the sub-surface",101,[[["self"],["i32"]]]],[11,"place_above","","restack the sub-surface",101,[[["self"],["wlsurface"]]]],[11,"place_below","","restack the sub-surface",101,[[["self"],["wlsurface"]]]],[11,"set_sync","","set sub-surface to synchronized mode",101,[[["self"]]]],[11,"set_desync","","set sub-surface to desynchronized mode",101,[[["self"]]]],[8,"GlobalImplementor","wayland_client","A trait for implementation of the global advertisement",null,null],[10,"new_global","","A new global of given interface has been instantiated and…",102,[[["self"],["main"],["dispatchdata"]]]],[11,"error","","A global was advertised but its version was lower than the…",102,[[["self"],["u32"],["dispatchdata"]]]],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",null,null],[14,"event_enum","","Generate an enum joining several objects events",null,null],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",103,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",104,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",105,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"into_any_arc","","",105,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",106,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"into_any_arc","","",106,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"into_any","","",107,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",107,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"into_any_arc","","",107,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",8,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"into_any_arc","","",8,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",2,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any_arc","","",2,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",9,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any_arc","","",9,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"into_any","","",108,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",108,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"into_any_arc","","",108,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",10,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any_arc","","",10,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",11,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any_arc","","",11,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",13,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",14,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",12,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any_arc","","",12,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",3,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"into_any_arc","","",3,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",4,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"into_any_arc","","",4,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",5,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any_arc","","",5,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",6,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"into_any_arc","","",6,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",15,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any_arc","","",15,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",7,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"into_any_arc","","",7,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::sys::client","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"into_any","","",109,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",109,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",109,[[["self"]],["any"]]],[11,"as_any_mut","","",109,[[["self"]],["any"]]],[11,"into_any_arc","","",109,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"into_any","","",110,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",110,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",110,[[["self"]],["any"]]],[11,"as_any_mut","","",110,[[["self"]],["any"]]],[11,"into_any_arc","","",110,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"into_any","","",111,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",111,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",111,[[["self"]],["any"]]],[11,"as_any_mut","","",111,[[["self"]],["any"]]],[11,"into_any_arc","","",111,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::sys::common","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"into_any","","",16,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",16,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",17,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",18,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any_arc","","",18,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_any","","",19,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",19,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"into_any_arc","","",19,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",20,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_display","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",24,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any_arc","","",24,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",21,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any_arc","","",21,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",22,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"into_any_arc","","",22,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",23,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any_arc","","",23,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_registry","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",27,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any_arc","","",27,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",25,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any_arc","","",25,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",26,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any_arc","","",26,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_callback","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"into_any","","",112,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",112,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",112,[[["self"]],["any"]]],[11,"as_any_mut","","",112,[[["self"]],["any"]]],[11,"into_any_arc","","",112,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"into_any","","",113,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",113,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",113,[[["self"]],["any"]]],[11,"as_any_mut","","",113,[[["self"]],["any"]]],[11,"into_any_arc","","",113,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",28,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any_arc","","",28,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_compositor","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_any","","",30,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",30,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"into_any_arc","","",30,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",29,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any_arc","","",29,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"into_any","","",114,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",114,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",114,[[["self"]],["any"]]],[11,"as_any_mut","","",114,[[["self"]],["any"]]],[11,"into_any_arc","","",114,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_shm_pool","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",32,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any_arc","","",32,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",31,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any_arc","","",31,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"into_any","","",115,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",115,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",115,[[["self"]],["any"]]],[11,"as_any_mut","","",115,[[["self"]],["any"]]],[11,"into_any_arc","","",115,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_shm","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",37,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any_arc","","",37,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",33,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any_arc","","",33,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",34,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any_arc","","",34,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",35,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any_arc","","",35,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_any","","",36,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",36,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any_arc","","",36,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_buffer","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_any","","",40,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",40,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"into_any_arc","","",40,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",38,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"into_any_arc","","",38,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",39,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any_arc","","",39,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_data_offer","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",44,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"into_any_arc","","",44,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_any","","",41,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",41,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"into_any_arc","","",41,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_any","","",42,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",42,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"into_any_arc","","",42,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",43,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any_arc","","",43,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_data_source","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_any","","",48,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",48,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"into_any_arc","","",48,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_any","","",45,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",45,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"into_any_arc","","",45,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_any","","",46,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",46,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"into_any_arc","","",46,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",47,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"into_any_arc","","",47,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_data_device","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",52,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"into_any_arc","","",52,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",49,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"into_any_arc","","",49,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_any","","",50,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",50,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"into_any_arc","","",50,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",51,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"into_any_arc","","",51,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",54,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"into_any_arc","","",54,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_any","","",55,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",55,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",55,[[["self"]],["any"]]],[11,"as_any_mut","","",55,[[["self"]],["any"]]],[11,"into_any_arc","","",55,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",53,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"into_any_arc","","",53,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"into_any","","",116,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",116,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",116,[[["self"]],["any"]]],[11,"as_any_mut","","",116,[[["self"]],["any"]]],[11,"into_any_arc","","",116,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_shell","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",58,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"into_any_arc","","",58,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_any","","",56,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",56,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",56,[[["self"]],["any"]]],[11,"as_any_mut","","",56,[[["self"]],["any"]]],[11,"into_any_arc","","",56,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_any","","",57,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",57,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",57,[[["self"]],["any"]]],[11,"as_any_mut","","",57,[[["self"]],["any"]]],[11,"into_any_arc","","",57,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"into_any","","",117,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",117,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",117,[[["self"]],["any"]]],[11,"as_any_mut","","",117,[[["self"]],["any"]]],[11,"into_any_arc","","",117,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_shell_surface","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",62,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any_arc","","",62,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",63,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any_arc","","",63,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_any","","",64,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",64,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",64,[[["self"]],["any"]]],[11,"as_any_mut","","",64,[[["self"]],["any"]]],[11,"into_any_arc","","",64,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_any","","",59,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",59,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"into_any_arc","","",59,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_any","","",60,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",60,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"into_any_arc","","",60,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",61,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"into_any_arc","","",61,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_surface","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_any","","",68,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",68,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"into_any_arc","","",68,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_any","","",65,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",65,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"into_any_arc","","",65,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",66,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"into_any_arc","","",66,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",67,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"into_any_arc","","",67,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_seat","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",71,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any_arc","","",71,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_any","","",72,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",72,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"into_any_arc","","",72,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_any","","",69,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",69,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",69,[[["self"]],["any"]]],[11,"as_any_mut","","",69,[[["self"]],["any"]]],[11,"into_any_arc","","",69,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_any","","",70,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",70,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"into_any_arc","","",70,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_pointer","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",79,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"into_any_arc","","",79,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_any","","",73,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",73,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"into_any_arc","","",73,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_any","","",74,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",74,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"into_any_arc","","",74,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",75,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"into_any_arc","","",75,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_any","","",76,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",76,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",76,[[["self"]],["any"]]],[11,"as_any_mut","","",76,[[["self"]],["any"]]],[11,"into_any_arc","","",76,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_any","","",77,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",77,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"into_any_arc","","",77,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",78,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"into_any_arc","","",78,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_keyboard","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",84,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"into_any_arc","","",84,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_any","","",80,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",80,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"into_any_arc","","",80,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",81,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any_arc","","",81,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",82,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"into_any_arc","","",82,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_any","","",83,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",83,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"into_any_arc","","",83,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_touch","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",87,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"into_any_arc","","",87,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",85,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"into_any_arc","","",85,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",86,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"into_any_arc","","",86,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_output","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_any","","",92,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",92,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"into_any_arc","","",92,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_any","","",93,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",93,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"into_any_arc","","",93,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",88,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"into_any_arc","","",88,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",89,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"into_any_arc","","",89,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_any","","",90,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",90,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"into_any_arc","","",90,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",91,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"into_any_arc","","",91,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_region","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_any","","",95,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",95,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",95,[[["self"]],["any"]]],[11,"as_any_mut","","",95,[[["self"]],["any"]]],[11,"into_any_arc","","",95,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",94,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"into_any_arc","","",94,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"into_any","","",118,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",118,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",118,[[["self"]],["any"]]],[11,"as_any_mut","","",118,[[["self"]],["any"]]],[11,"into_any_arc","","",118,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_subcompositor","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_any","","",98,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",98,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"into_any_arc","","",98,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",96,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"into_any_arc","","",96,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",97,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"into_any_arc","","",97,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"into_any","","",119,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",119,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",119,[[["self"]],["any"]]],[11,"as_any_mut","","",119,[[["self"]],["any"]]],[11,"into_any_arc","","",119,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_client::protocol::wl_subsurface","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",101,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any_arc","","",101,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_any","","",99,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",99,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",99,[[["self"]],["any"]]],[11,"as_any_mut","","",99,[[["self"]],["any"]]],[11,"into_any_arc","","",99,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",100,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"into_any_arc","","",100,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"into_any","","",120,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",120,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",120,[[["self"]],["any"]]],[11,"as_any_mut","","",120,[[["self"]],["any"]]],[11,"into_any_arc","","",120,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"clone","wayland_client","",104,[[["self"]],["filter"]]],[11,"is_destructor","","",106,[[["self"]],["bool"]]],[11,"opcode","","",106,[[["self"]],["u16"]]],[11,"since","","",106,[[["self"]],["u32"]]],[11,"child","","",106,[[["u16"],["u32"],["m"]],[["option",["object"]],["object"]]]],[11,"from_raw","","",106,[[["message"]],[["result",["nomessage"]],["nomessage"]]]],[11,"into_raw","","",106,[[["u32"]],["message"]]],[11,"from_raw_c","","",106,[[["u32"]],[["result",["nomessage"]],["nomessage"]]]],[11,"as_raw_c_in","","",106,[[["f"]],["t"]]],[11,"drop","","",105,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"as_ref","wayland_client::protocol::wl_display","",24,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_registry","",27,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_callback","",112,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_compositor","",30,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shm_pool","",32,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shm","",37,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_buffer","",40,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_offer","",44,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_source","",48,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_device","",52,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_device_manager","",55,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shell","",58,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shell_surface","",64,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_surface","",68,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_seat","",72,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_pointer","",79,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_keyboard","",84,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_touch","",87,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_output","",93,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_region","",95,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_subcompositor","",98,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_subsurface","",101,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client","",107,[[["self"]],["proxy"]]],[11,"from","wayland_client::protocol::wl_display","",24,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wldisplay"]],["self"]]],[11,"from","wayland_client::protocol::wl_registry","",27,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlregistry"]],["self"]]],[11,"from","wayland_client::protocol::wl_callback","",112,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlcallback"]],["self"]]],[11,"from","wayland_client::protocol::wl_compositor","",30,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlcompositor"]],["self"]]],[11,"from","wayland_client::protocol::wl_shm_pool","",32,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlshmpool"]],["self"]]],[11,"from","wayland_client::protocol::wl_shm","",37,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlshm"]],["self"]]],[11,"from","wayland_client::protocol::wl_buffer","",40,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlbuffer"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_offer","",44,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wldataoffer"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_source","",48,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wldatasource"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_device","",52,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wldatadevice"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",55,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wldatadevicemanager"]],["self"]]],[11,"from","wayland_client::protocol::wl_shell","",58,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlshell"]],["self"]]],[11,"from","wayland_client::protocol::wl_shell_surface","",64,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlshellsurface"]],["self"]]],[11,"from","wayland_client::protocol::wl_surface","",68,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlsurface"]],["self"]]],[11,"from","wayland_client::protocol::wl_seat","",72,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlseat"]],["self"]]],[11,"from","wayland_client::protocol::wl_pointer","",79,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlpointer"]],["self"]]],[11,"from","wayland_client::protocol::wl_keyboard","",84,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlkeyboard"]],["self"]]],[11,"from","wayland_client::protocol::wl_touch","",87,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wltouch"]],["self"]]],[11,"from","wayland_client::protocol::wl_output","",93,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wloutput"]],["self"]]],[11,"from","wayland_client::protocol::wl_region","",95,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlregion"]],["self"]]],[11,"from","wayland_client::protocol::wl_subcompositor","",98,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlsubcompositor"]],["self"]]],[11,"from","wayland_client::protocol::wl_subsurface","",101,[[["proxy"]],["self"]]],[11,"from","wayland_client","",12,[[["wlsubsurface"]],["self"]]],[11,"from","","",107,[[["proxy"]],["self"]]],[11,"from","","",12,[[["anonymousobject"]],["self"]]],[11,"extend","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["intoiterator"]]]],[11,"extend","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["intoiterator"]]]],[11,"extend","","",63,[[["self"],["intoiterator"]]]],[11,"extend","wayland_client::protocol::wl_seat","",71,[[["self"],["intoiterator"]]]],[11,"extend","wayland_client::protocol::wl_output","",92,[[["intoiterator"],["self"]]]],[11,"clone","wayland_client","",2,[[["self"]],["protocolerror"]]],[11,"clone","","",8,[[["self"]],["display"]]],[11,"clone","","",11,[[["self"]],["globalmanager"]]],[11,"clone","","",12,[[["self"]],["proxy"]]],[11,"clone","","",13,[[["self"]],["attached"]]],[11,"clone","","",14,[[["self"]],["main"]]],[11,"clone","wayland_client::protocol::wl_display","",21,[[["self"]],["error"]]],[11,"clone","","",24,[[["self"]],["wldisplay"]]],[11,"clone","wayland_client::protocol::wl_registry","",27,[[["self"]],["wlregistry"]]],[11,"clone","wayland_client::protocol::wl_callback","",112,[[["self"]],["wlcallback"]]],[11,"clone","wayland_client::protocol::wl_compositor","",30,[[["self"]],["wlcompositor"]]],[11,"clone","wayland_client::protocol::wl_shm_pool","",32,[[["self"]],["wlshmpool"]]],[11,"clone","wayland_client::protocol::wl_shm","",33,[[["self"]],["error"]]],[11,"clone","","",34,[[["self"]],["format"]]],[11,"clone","","",37,[[["self"]],["wlshm"]]],[11,"clone","wayland_client::protocol::wl_buffer","",40,[[["self"]],["wlbuffer"]]],[11,"clone","wayland_client::protocol::wl_data_offer","",41,[[["self"]],["error"]]],[11,"clone","","",44,[[["self"]],["wldataoffer"]]],[11,"clone","wayland_client::protocol::wl_data_source","",45,[[["self"]],["error"]]],[11,"clone","","",48,[[["self"]],["wldatasource"]]],[11,"clone","wayland_client::protocol::wl_data_device","",49,[[["self"]],["error"]]],[11,"clone","","",52,[[["self"]],["wldatadevice"]]],[11,"clone","wayland_client::protocol::wl_data_device_manager","",54,[[["self"]],["dndaction"]]],[11,"clone","","",55,[[["self"]],["wldatadevicemanager"]]],[11,"clone","wayland_client::protocol::wl_shell","",56,[[["self"]],["error"]]],[11,"clone","","",58,[[["self"]],["wlshell"]]],[11,"clone","wayland_client::protocol::wl_shell_surface","",62,[[["self"]],["resize"]]],[11,"clone","","",63,[[["self"]],["transient"]]],[11,"clone","","",59,[[["self"]],["fullscreenmethod"]]],[11,"clone","","",64,[[["self"]],["wlshellsurface"]]],[11,"clone","wayland_client::protocol::wl_surface","",65,[[["self"]],["error"]]],[11,"clone","","",68,[[["self"]],["wlsurface"]]],[11,"clone","wayland_client::protocol::wl_seat","",71,[[["self"]],["capability"]]],[11,"clone","","",72,[[["self"]],["wlseat"]]],[11,"clone","wayland_client::protocol::wl_pointer","",73,[[["self"]],["error"]]],[11,"clone","","",74,[[["self"]],["buttonstate"]]],[11,"clone","","",75,[[["self"]],["axis"]]],[11,"clone","","",76,[[["self"]],["axissource"]]],[11,"clone","","",79,[[["self"]],["wlpointer"]]],[11,"clone","wayland_client::protocol::wl_keyboard","",80,[[["self"]],["keymapformat"]]],[11,"clone","","",81,[[["self"]],["keystate"]]],[11,"clone","","",84,[[["self"]],["wlkeyboard"]]],[11,"clone","wayland_client::protocol::wl_touch","",87,[[["self"]],["wltouch"]]],[11,"clone","wayland_client::protocol::wl_output","",88,[[["self"]],["subpixel"]]],[11,"clone","","",89,[[["self"]],["transform"]]],[11,"clone","","",92,[[["self"]],["mode"]]],[11,"clone","","",93,[[["self"]],["wloutput"]]],[11,"clone","wayland_client::protocol::wl_region","",95,[[["self"]],["wlregion"]]],[11,"clone","wayland_client::protocol::wl_subcompositor","",96,[[["self"]],["error"]]],[11,"clone","","",98,[[["self"]],["wlsubcompositor"]]],[11,"clone","wayland_client::protocol::wl_subsurface","",99,[[["self"]],["error"]]],[11,"clone","","",101,[[["self"]],["wlsubsurface"]]],[11,"clone","wayland_client","",107,[[["self"]],["anonymousobject"]]],[11,"cmp","wayland_client::protocol::wl_data_device_manager","",54,[[["dndaction"],["self"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["resize"]],["ordering"]]],[11,"cmp","","",63,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_seat","",71,[[["self"],["capability"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_output","",92,[[["mode"],["self"]],["ordering"]]],[11,"eq","wayland_client","",5,[[["globalerror"],["self"]],["bool"]]],[11,"ne","","",5,[[["globalerror"],["self"]],["bool"]]],[11,"eq","","",12,[[["self"],["proxy"]],["bool"]]],[11,"eq","","",13,[[["attached"],["self"]],["bool"]]],[11,"ne","","",13,[[["attached"],["self"]],["bool"]]],[11,"eq","","",14,[[["main"],["self"]],["bool"]]],[11,"ne","","",14,[[["main"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_display","",21,[[["self"],["error"]],["bool"]]],[11,"eq","","",24,[[["self"],["wldisplay"]],["bool"]]],[11,"ne","","",24,[[["self"],["wldisplay"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_registry","",27,[[["wlregistry"],["self"]],["bool"]]],[11,"ne","","",27,[[["wlregistry"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_callback","",112,[[["wlcallback"],["self"]],["bool"]]],[11,"ne","","",112,[[["wlcallback"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_compositor","",30,[[["self"],["wlcompositor"]],["bool"]]],[11,"ne","","",30,[[["self"],["wlcompositor"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm_pool","",32,[[["wlshmpool"],["self"]],["bool"]]],[11,"ne","","",32,[[["wlshmpool"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm","",33,[[["error"],["self"]],["bool"]]],[11,"eq","","",34,[[["format"],["self"]],["bool"]]],[11,"eq","","",37,[[["wlshm"],["self"]],["bool"]]],[11,"ne","","",37,[[["wlshm"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_buffer","",40,[[["wlbuffer"],["self"]],["bool"]]],[11,"ne","","",40,[[["wlbuffer"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_offer","",41,[[["error"],["self"]],["bool"]]],[11,"eq","","",44,[[["wldataoffer"],["self"]],["bool"]]],[11,"ne","","",44,[[["wldataoffer"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_source","",45,[[["error"],["self"]],["bool"]]],[11,"eq","","",48,[[["self"],["wldatasource"]],["bool"]]],[11,"ne","","",48,[[["self"],["wldatasource"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device","",49,[[["self"],["error"]],["bool"]]],[11,"eq","","",52,[[["self"],["wldatadevice"]],["bool"]]],[11,"ne","","",52,[[["self"],["wldatadevice"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device_manager","",54,[[["dndaction"],["self"]],["bool"]]],[11,"ne","","",54,[[["dndaction"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"ne","","",55,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell","",56,[[["self"],["error"]],["bool"]]],[11,"eq","","",58,[[["self"],["wlshell"]],["bool"]]],[11,"ne","","",58,[[["self"],["wlshell"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["resize"]],["bool"]]],[11,"ne","","",62,[[["self"],["resize"]],["bool"]]],[11,"eq","","",63,[[["self"],["transient"]],["bool"]]],[11,"ne","","",63,[[["self"],["transient"]],["bool"]]],[11,"eq","","",59,[[["fullscreenmethod"],["self"]],["bool"]]],[11,"eq","","",64,[[["wlshellsurface"],["self"]],["bool"]]],[11,"ne","","",64,[[["wlshellsurface"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_surface","",65,[[["self"],["error"]],["bool"]]],[11,"eq","","",68,[[["wlsurface"],["self"]],["bool"]]],[11,"ne","","",68,[[["wlsurface"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_seat","",71,[[["self"],["capability"]],["bool"]]],[11,"ne","","",71,[[["self"],["capability"]],["bool"]]],[11,"eq","","",72,[[["wlseat"],["self"]],["bool"]]],[11,"ne","","",72,[[["wlseat"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_pointer","",73,[[["self"],["error"]],["bool"]]],[11,"eq","","",74,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",75,[[["self"],["axis"]],["bool"]]],[11,"eq","","",76,[[["self"],["axissource"]],["bool"]]],[11,"eq","","",79,[[["wlpointer"],["self"]],["bool"]]],[11,"ne","","",79,[[["wlpointer"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_keyboard","",80,[[["keymapformat"],["self"]],["bool"]]],[11,"eq","","",81,[[["keystate"],["self"]],["bool"]]],[11,"eq","","",84,[[["wlkeyboard"],["self"]],["bool"]]],[11,"ne","","",84,[[["wlkeyboard"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_touch","",87,[[["wltouch"],["self"]],["bool"]]],[11,"ne","","",87,[[["wltouch"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_output","",88,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",89,[[["transform"],["self"]],["bool"]]],[11,"eq","","",92,[[["mode"],["self"]],["bool"]]],[11,"ne","","",92,[[["mode"],["self"]],["bool"]]],[11,"eq","","",93,[[["wloutput"],["self"]],["bool"]]],[11,"ne","","",93,[[["wloutput"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_region","",95,[[["self"],["wlregion"]],["bool"]]],[11,"ne","","",95,[[["self"],["wlregion"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subcompositor","",96,[[["self"],["error"]],["bool"]]],[11,"eq","","",98,[[["wlsubcompositor"],["self"]],["bool"]]],[11,"ne","","",98,[[["wlsubcompositor"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subsurface","",99,[[["self"],["error"]],["bool"]]],[11,"eq","","",101,[[["wlsubsurface"],["self"]],["bool"]]],[11,"ne","","",101,[[["wlsubsurface"],["self"]],["bool"]]],[11,"eq","wayland_client","",107,[[["self"],["anonymousobject"]],["bool"]]],[11,"ne","","",107,[[["self"],["anonymousobject"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_data_device_manager","",54,[[["dndaction"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",54,[[["dndaction"],["self"]],["bool"]]],[11,"le","","",54,[[["dndaction"],["self"]],["bool"]]],[11,"gt","","",54,[[["dndaction"],["self"]],["bool"]]],[11,"ge","","",54,[[["dndaction"],["self"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["resize"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",62,[[["self"],["resize"]],["bool"]]],[11,"le","","",62,[[["self"],["resize"]],["bool"]]],[11,"gt","","",62,[[["self"],["resize"]],["bool"]]],[11,"ge","","",62,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",63,[[["self"],["transient"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",63,[[["self"],["transient"]],["bool"]]],[11,"le","","",63,[[["self"],["transient"]],["bool"]]],[11,"gt","","",63,[[["self"],["transient"]],["bool"]]],[11,"ge","","",63,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_seat","",71,[[["self"],["capability"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",71,[[["self"],["capability"]],["bool"]]],[11,"le","","",71,[[["self"],["capability"]],["bool"]]],[11,"gt","","",71,[[["self"],["capability"]],["bool"]]],[11,"ge","","",71,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_output","",92,[[["mode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",92,[[["mode"],["self"]],["bool"]]],[11,"le","","",92,[[["mode"],["self"]],["bool"]]],[11,"gt","","",92,[[["mode"],["self"]],["bool"]]],[11,"ge","","",92,[[["mode"],["self"]],["bool"]]],[11,"deref","wayland_client","",8,[[["self"]],["proxy"]]],[11,"deref","","",13,[[["self"]],["i"]]],[11,"deref","","",14,[[["self"]],["attached"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_display","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shm","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_offer","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_source","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_surface","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_pointer","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_keyboard","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subcompositor","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subsurface","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client","",4,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"sub","wayland_client::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",54,[[["dndaction"]],["dndaction"]]],[11,"sub","wayland_client::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",62,[[["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",63,[[["transient"]],["transient"]]],[11,"sub","wayland_client::protocol::wl_seat","Returns the set difference of the two sets of flags.",71,[[["capability"]],["capability"]]],[11,"sub","wayland_client::protocol::wl_output","Returns the set difference of the two sets of flags.",92,[[["mode"]],["mode"]]],[11,"sub_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags enabled in the set.",54,[[["self"],["dndaction"]]]],[11,"sub_assign","wayland_client::protocol::wl_shell_surface","Disables all flags enabled in the set.",62,[[["resize"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",63,[[["transient"],["self"]]]],[11,"sub_assign","wayland_client::protocol::wl_seat","Disables all flags enabled in the set.",71,[[["self"],["capability"]]]],[11,"sub_assign","wayland_client::protocol::wl_output","Disables all flags enabled in the set.",92,[[["self"],["mode"]]]],[11,"not","wayland_client::protocol::wl_data_device_manager","Returns the complement of this set of flags.",54,[[],["dndaction"]]],[11,"not","wayland_client::protocol::wl_shell_surface","Returns the complement of this set of flags.",62,[[],["resize"]]],[11,"not","","Returns the complement of this set of flags.",63,[[],["transient"]]],[11,"not","wayland_client::protocol::wl_seat","Returns the complement of this set of flags.",71,[[],["capability"]]],[11,"not","wayland_client::protocol::wl_output","Returns the complement of this set of flags.",92,[[],["mode"]]],[11,"bitand","wayland_client::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",54,[[["dndaction"]],["dndaction"]]],[11,"bitand","wayland_client::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",62,[[["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",63,[[["transient"]],["transient"]]],[11,"bitand","wayland_client::protocol::wl_seat","Returns the intersection between the two sets of flags.",71,[[["capability"]],["capability"]]],[11,"bitand","wayland_client::protocol::wl_output","Returns the intersection between the two sets of flags.",92,[[["mode"]],["mode"]]],[11,"bitor","wayland_client::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",54,[[["dndaction"]],["dndaction"]]],[11,"bitor","wayland_client::protocol::wl_shell_surface","Returns the union of the two sets of flags.",62,[[["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",63,[[["transient"]],["transient"]]],[11,"bitor","wayland_client::protocol::wl_seat","Returns the union of the two sets of flags.",71,[[["capability"]],["capability"]]],[11,"bitor","wayland_client::protocol::wl_output","Returns the union of the two sets of flags.",92,[[["mode"]],["mode"]]],[11,"bitxor","wayland_client::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",54,[[["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_client::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",62,[[["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",63,[[["transient"]],["transient"]]],[11,"bitxor","wayland_client::protocol::wl_seat","Returns the left flags, but with all the right flags…",71,[[["capability"]],["capability"]]],[11,"bitxor","wayland_client::protocol::wl_output","Returns the left flags, but with all the right flags…",92,[[["mode"]],["mode"]]],[11,"bitand_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags disabled in the set.",54,[[["self"],["dndaction"]]]],[11,"bitand_assign","wayland_client::protocol::wl_shell_surface","Disables all flags disabled in the set.",62,[[["resize"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",63,[[["transient"],["self"]]]],[11,"bitand_assign","wayland_client::protocol::wl_seat","Disables all flags disabled in the set.",71,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_client::protocol::wl_output","Disables all flags disabled in the set.",92,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_client::protocol::wl_data_device_manager","Adds the set of flags.",54,[[["self"],["dndaction"]]]],[11,"bitor_assign","wayland_client::protocol::wl_shell_surface","Adds the set of flags.",62,[[["resize"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",63,[[["transient"],["self"]]]],[11,"bitor_assign","wayland_client::protocol::wl_seat","Adds the set of flags.",71,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_client::protocol::wl_output","Adds the set of flags.",92,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_data_device_manager","Toggles the set of flags.",54,[[["self"],["dndaction"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_shell_surface","Toggles the set of flags.",62,[[["resize"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",63,[[["transient"],["self"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_seat","Toggles the set of flags.",71,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_output","Toggles the set of flags.",92,[[["self"],["mode"]]]],[11,"hash","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["__h"]]]],[11,"hash","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","wayland_client::protocol::wl_seat","",71,[[["self"],["__h"]]]],[11,"hash","wayland_client::protocol::wl_output","",92,[[["self"],["__h"]]]],[11,"from_iter","wayland_client::protocol::wl_data_device_manager","",54,[[["intoiterator"]],["dndaction"]]],[11,"from_iter","wayland_client::protocol::wl_shell_surface","",62,[[["intoiterator"]],["resize"]]],[11,"from_iter","","",63,[[["intoiterator"]],["transient"]]],[11,"from_iter","wayland_client::protocol::wl_seat","",71,[[["intoiterator"]],["capability"]]],[11,"from_iter","wayland_client::protocol::wl_output","",92,[[["intoiterator"]],["mode"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",92,[[["self"],["formatter"]],["result"]]],[11,"description","wayland_client","",2,[[["self"]],["str"]]],[11,"c_interface","wayland_client::protocol::wl_display","",24,[[]]],[11,"c_interface","wayland_client::protocol::wl_registry","",27,[[]]],[11,"c_interface","wayland_client::protocol::wl_callback","",112,[[]]],[11,"c_interface","wayland_client::protocol::wl_compositor","",30,[[]]],[11,"c_interface","wayland_client::protocol::wl_shm_pool","",32,[[]]],[11,"c_interface","wayland_client::protocol::wl_shm","",37,[[]]],[11,"c_interface","wayland_client::protocol::wl_buffer","",40,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_offer","",44,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_source","",48,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_device","",52,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_device_manager","",55,[[]]],[11,"c_interface","wayland_client::protocol::wl_shell","",58,[[]]],[11,"c_interface","wayland_client::protocol::wl_shell_surface","",64,[[]]],[11,"c_interface","wayland_client::protocol::wl_surface","",68,[[]]],[11,"c_interface","wayland_client::protocol::wl_seat","",72,[[]]],[11,"c_interface","wayland_client::protocol::wl_pointer","",79,[[]]],[11,"c_interface","wayland_client::protocol::wl_keyboard","",84,[[]]],[11,"c_interface","wayland_client::protocol::wl_touch","",87,[[]]],[11,"c_interface","wayland_client::protocol::wl_output","",93,[[]]],[11,"c_interface","wayland_client::protocol::wl_region","",95,[[]]],[11,"c_interface","wayland_client::protocol::wl_subcompositor","",98,[[]]],[11,"c_interface","wayland_client::protocol::wl_subsurface","",101,[[]]],[11,"c_interface","wayland_client","",107,[[]]],[11,"is_destructor","wayland_client::protocol::wl_display","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"since","","",22,[[["self"]],["u32"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",22,[[["message"]],["result"]]],[11,"into_raw","","",22,[[["u32"]],["message"]]],[11,"from_raw_c","","",22,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",22,[[["f"]],["t"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"since","","",23,[[["self"]],["u32"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",23,[[["message"]],["result"]]],[11,"into_raw","","",23,[[["u32"]],["message"]]],[11,"from_raw_c","","",23,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",23,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_registry","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"since","","",25,[[["self"]],["u32"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",25,[[["message"]],["result"]]],[11,"into_raw","","",25,[[["u32"]],["message"]]],[11,"from_raw_c","","",25,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",25,[[["f"]],["t"]]],[11,"is_destructor","","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"since","","",26,[[["self"]],["u32"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",26,[[["message"]],["result"]]],[11,"into_raw","","",26,[[["u32"]],["message"]]],[11,"from_raw_c","","",26,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",26,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_callback","",113,[[["self"]],["bool"]]],[11,"opcode","","",113,[[["self"]],["u16"]]],[11,"since","","",113,[[["self"]],["u32"]]],[11,"child","","",113,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",113,[[["message"]],["result"]]],[11,"into_raw","","",113,[[["u32"]],["message"]]],[11,"from_raw_c","","",113,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",113,[[["f"]],["t"]]],[11,"is_destructor","","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"since","","",28,[[["self"]],["u32"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",28,[[["message"]],["result"]]],[11,"into_raw","","",28,[[["u32"]],["message"]]],[11,"from_raw_c","","",28,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",28,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_compositor","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"since","","",29,[[["self"]],["u32"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",29,[[["message"]],["result"]]],[11,"into_raw","","",29,[[["u32"]],["message"]]],[11,"from_raw_c","","",29,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",29,[[["f"]],["t"]]],[11,"is_destructor","","",114,[[["self"]],["bool"]]],[11,"opcode","","",114,[[["self"]],["u16"]]],[11,"since","","",114,[[["self"]],["u32"]]],[11,"child","","",114,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",114,[[["message"]],["result"]]],[11,"into_raw","","",114,[[["u32"]],["message"]]],[11,"from_raw_c","","",114,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",114,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"since","","",31,[[["self"]],["u32"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",31,[[["message"]],["result"]]],[11,"into_raw","","",31,[[["u32"]],["message"]]],[11,"from_raw_c","","",31,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",31,[[["f"]],["t"]]],[11,"is_destructor","","",115,[[["self"]],["bool"]]],[11,"opcode","","",115,[[["self"]],["u16"]]],[11,"since","","",115,[[["self"]],["u32"]]],[11,"child","","",115,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",115,[[["message"]],["result"]]],[11,"into_raw","","",115,[[["u32"]],["message"]]],[11,"from_raw_c","","",115,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",115,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shm","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"since","","",35,[[["self"]],["u32"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",35,[[["message"]],["result"]]],[11,"into_raw","","",35,[[["u32"]],["message"]]],[11,"from_raw_c","","",35,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",35,[[["f"]],["t"]]],[11,"is_destructor","","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"since","","",36,[[["self"]],["u32"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",36,[[["message"]],["result"]]],[11,"into_raw","","",36,[[["u32"]],["message"]]],[11,"from_raw_c","","",36,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",36,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_buffer","",38,[[["self"]],["bool"]]],[11,"opcode","","",38,[[["self"]],["u16"]]],[11,"since","","",38,[[["self"]],["u32"]]],[11,"child","","",38,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",38,[[["message"]],["result"]]],[11,"into_raw","","",38,[[["u32"]],["message"]]],[11,"from_raw_c","","",38,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",38,[[["f"]],["t"]]],[11,"is_destructor","","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"since","","",39,[[["self"]],["u32"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",39,[[["message"]],["result"]]],[11,"into_raw","","",39,[[["u32"]],["message"]]],[11,"from_raw_c","","",39,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",39,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_offer","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"since","","",42,[[["self"]],["u32"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",42,[[["message"]],["result"]]],[11,"into_raw","","",42,[[["u32"]],["message"]]],[11,"from_raw_c","","",42,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",42,[[["f"]],["t"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"since","","",43,[[["self"]],["u32"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",43,[[["message"]],["result"]]],[11,"into_raw","","",43,[[["u32"]],["message"]]],[11,"from_raw_c","","",43,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",43,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_source","",46,[[["self"]],["bool"]]],[11,"opcode","","",46,[[["self"]],["u16"]]],[11,"since","","",46,[[["self"]],["u32"]]],[11,"child","","",46,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",46,[[["message"]],["result"]]],[11,"into_raw","","",46,[[["u32"]],["message"]]],[11,"from_raw_c","","",46,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",46,[[["f"]],["t"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"since","","",47,[[["self"]],["u32"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",47,[[["message"]],["result"]]],[11,"into_raw","","",47,[[["u32"]],["message"]]],[11,"from_raw_c","","",47,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",47,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"since","","",50,[[["self"]],["u32"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",50,[[["message"]],["result"]]],[11,"into_raw","","",50,[[["u32"]],["message"]]],[11,"from_raw_c","","",50,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",50,[[["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"since","","",51,[[["self"]],["u32"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",51,[[["message"]],["result"]]],[11,"into_raw","","",51,[[["u32"]],["message"]]],[11,"from_raw_c","","",51,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",51,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device_manager","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"since","","",53,[[["self"]],["u32"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",53,[[["message"]],["result"]]],[11,"into_raw","","",53,[[["u32"]],["message"]]],[11,"from_raw_c","","",53,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",53,[[["f"]],["t"]]],[11,"is_destructor","","",116,[[["self"]],["bool"]]],[11,"opcode","","",116,[[["self"]],["u16"]]],[11,"since","","",116,[[["self"]],["u32"]]],[11,"child","","",116,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",116,[[["message"]],["result"]]],[11,"into_raw","","",116,[[["u32"]],["message"]]],[11,"from_raw_c","","",116,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",116,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shell","",57,[[["self"]],["bool"]]],[11,"opcode","","",57,[[["self"]],["u16"]]],[11,"since","","",57,[[["self"]],["u32"]]],[11,"child","","",57,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",57,[[["message"]],["result"]]],[11,"into_raw","","",57,[[["u32"]],["message"]]],[11,"from_raw_c","","",57,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",57,[[["f"]],["t"]]],[11,"is_destructor","","",117,[[["self"]],["bool"]]],[11,"opcode","","",117,[[["self"]],["u16"]]],[11,"since","","",117,[[["self"]],["u32"]]],[11,"child","","",117,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",117,[[["message"]],["result"]]],[11,"into_raw","","",117,[[["u32"]],["message"]]],[11,"from_raw_c","","",117,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",117,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shell_surface","",60,[[["self"]],["bool"]]],[11,"opcode","","",60,[[["self"]],["u16"]]],[11,"since","","",60,[[["self"]],["u32"]]],[11,"child","","",60,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",60,[[["message"]],["result"]]],[11,"into_raw","","",60,[[["u32"]],["message"]]],[11,"from_raw_c","","",60,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",60,[[["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"since","","",61,[[["self"]],["u32"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",61,[[["message"]],["result"]]],[11,"into_raw","","",61,[[["u32"]],["message"]]],[11,"from_raw_c","","",61,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",61,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_surface","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"since","","",66,[[["self"]],["u32"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",66,[[["message"]],["result"]]],[11,"into_raw","","",66,[[["u32"]],["message"]]],[11,"from_raw_c","","",66,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",66,[[["f"]],["t"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"since","","",67,[[["self"]],["u32"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",67,[[["message"]],["result"]]],[11,"into_raw","","",67,[[["u32"]],["message"]]],[11,"from_raw_c","","",67,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",67,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_seat","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"since","","",69,[[["self"]],["u32"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",69,[[["message"]],["result"]]],[11,"into_raw","","",69,[[["u32"]],["message"]]],[11,"from_raw_c","","",69,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",69,[[["f"]],["t"]]],[11,"is_destructor","","",70,[[["self"]],["bool"]]],[11,"opcode","","",70,[[["self"]],["u16"]]],[11,"since","","",70,[[["self"]],["u32"]]],[11,"child","","",70,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",70,[[["message"]],["result"]]],[11,"into_raw","","",70,[[["u32"]],["message"]]],[11,"from_raw_c","","",70,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",70,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_pointer","",77,[[["self"]],["bool"]]],[11,"opcode","","",77,[[["self"]],["u16"]]],[11,"since","","",77,[[["self"]],["u32"]]],[11,"child","","",77,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",77,[[["message"]],["result"]]],[11,"into_raw","","",77,[[["u32"]],["message"]]],[11,"from_raw_c","","",77,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",77,[[["f"]],["t"]]],[11,"is_destructor","","",78,[[["self"]],["bool"]]],[11,"opcode","","",78,[[["self"]],["u16"]]],[11,"since","","",78,[[["self"]],["u32"]]],[11,"child","","",78,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",78,[[["message"]],["result"]]],[11,"into_raw","","",78,[[["u32"]],["message"]]],[11,"from_raw_c","","",78,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",78,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_keyboard","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"since","","",82,[[["self"]],["u32"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",82,[[["message"]],["result"]]],[11,"into_raw","","",82,[[["u32"]],["message"]]],[11,"from_raw_c","","",82,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",82,[[["f"]],["t"]]],[11,"is_destructor","","",83,[[["self"]],["bool"]]],[11,"opcode","","",83,[[["self"]],["u16"]]],[11,"since","","",83,[[["self"]],["u32"]]],[11,"child","","",83,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",83,[[["message"]],["result"]]],[11,"into_raw","","",83,[[["u32"]],["message"]]],[11,"from_raw_c","","",83,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",83,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_touch","",85,[[["self"]],["bool"]]],[11,"opcode","","",85,[[["self"]],["u16"]]],[11,"since","","",85,[[["self"]],["u32"]]],[11,"child","","",85,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",85,[[["message"]],["result"]]],[11,"into_raw","","",85,[[["u32"]],["message"]]],[11,"from_raw_c","","",85,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",85,[[["f"]],["t"]]],[11,"is_destructor","","",86,[[["self"]],["bool"]]],[11,"opcode","","",86,[[["self"]],["u16"]]],[11,"since","","",86,[[["self"]],["u32"]]],[11,"child","","",86,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",86,[[["message"]],["result"]]],[11,"into_raw","","",86,[[["u32"]],["message"]]],[11,"from_raw_c","","",86,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",86,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_output","",90,[[["self"]],["bool"]]],[11,"opcode","","",90,[[["self"]],["u16"]]],[11,"since","","",90,[[["self"]],["u32"]]],[11,"child","","",90,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",90,[[["message"]],["result"]]],[11,"into_raw","","",90,[[["u32"]],["message"]]],[11,"from_raw_c","","",90,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",90,[[["f"]],["t"]]],[11,"is_destructor","","",91,[[["self"]],["bool"]]],[11,"opcode","","",91,[[["self"]],["u16"]]],[11,"since","","",91,[[["self"]],["u32"]]],[11,"child","","",91,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",91,[[["message"]],["result"]]],[11,"into_raw","","",91,[[["u32"]],["message"]]],[11,"from_raw_c","","",91,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",91,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_region","",94,[[["self"]],["bool"]]],[11,"opcode","","",94,[[["self"]],["u16"]]],[11,"since","","",94,[[["self"]],["u32"]]],[11,"child","","",94,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",94,[[["message"]],["result"]]],[11,"into_raw","","",94,[[["u32"]],["message"]]],[11,"from_raw_c","","",94,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",94,[[["f"]],["t"]]],[11,"is_destructor","","",118,[[["self"]],["bool"]]],[11,"opcode","","",118,[[["self"]],["u16"]]],[11,"since","","",118,[[["self"]],["u32"]]],[11,"child","","",118,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",118,[[["message"]],["result"]]],[11,"into_raw","","",118,[[["u32"]],["message"]]],[11,"from_raw_c","","",118,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",118,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_subcompositor","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",97,[[["message"]],["result"]]],[11,"into_raw","","",97,[[["u32"]],["message"]]],[11,"from_raw_c","","",97,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",97,[[["f"]],["t"]]],[11,"is_destructor","","",119,[[["self"]],["bool"]]],[11,"opcode","","",119,[[["self"]],["u16"]]],[11,"since","","",119,[[["self"]],["u32"]]],[11,"child","","",119,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",119,[[["message"]],["result"]]],[11,"into_raw","","",119,[[["u32"]],["message"]]],[11,"from_raw_c","","",119,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",119,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_subsurface","",100,[[["self"]],["bool"]]],[11,"opcode","","",100,[[["self"]],["u16"]]],[11,"since","","",100,[[["self"]],["u32"]]],[11,"child","","",100,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",100,[[["message"]],["result"]]],[11,"into_raw","","",100,[[["u32"]],["message"]]],[11,"from_raw_c","","",100,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",100,[[["f"]],["t"]]],[11,"is_destructor","","",120,[[["self"]],["bool"]]],[11,"opcode","","",120,[[["self"]],["u16"]]],[11,"since","","",120,[[["self"]],["u32"]]],[11,"child","","",120,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",120,[[["message"]],["result"]]],[11,"into_raw","","",120,[[["u32"]],["message"]]],[11,"from_raw_c","","",120,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",120,[[["f"]],["t"]]],[11,"get","wayland_client","Access the dispatch data knowing its type",103,[[["self"]],[["option"],["t"]]]],[11,"wrap","","Wrap a mutable reference",103,[[["t"]],["dispatchdata"]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",103,[[["self"]],["dispatchdata"]]],[11,"new","","Create a new filter from given closure",104,[[["f"]],["filter"]]],[11,"send","","Send a message to this filter",104,[[["dispatchdata"],["self"],["e"]]]],[11,"new","","Create a new UserData instance",105,[[],["userdata"]]],[11,"set","","Sets the UserData to a given value",105,[[["self"],["f"]]]],[11,"set_threadsafe","","Sets the UserData to a given threadsafe value",105,[[["self"],["f"]]]],[11,"get","","Attempt to access the wrapped user data",105,[[["self"]],[["t"],["option"]]]],[11,"error","","A global was advertised but its version was lower than the…",102,[[["self"],["u32"],["dispatchdata"]]]]],"p":[[8,"Interface"],[8,"MessageGroup"],[3,"ProtocolError"],[3,"RawEvent"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[4,"Argument"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"Attached"],[3,"Main"],[4,"ProxyMap"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDisplay"],[4,"Request"],[4,"Event"],[3,"WlRegistry"],[4,"Event"],[4,"Request"],[3,"WlCompositor"],[4,"Request"],[3,"WlShmPool"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[3,"WlShm"],[4,"Request"],[4,"Event"],[3,"WlBuffer"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataSource"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataDevice"],[4,"Request"],[3,"DndAction"],[3,"WlDataDeviceManager"],[4,"Error"],[4,"Request"],[3,"WlShell"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[3,"Capability"],[3,"WlSeat"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[3,"WlPointer"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[3,"WlKeyboard"],[4,"Request"],[4,"Event"],[3,"WlTouch"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[3,"Mode"],[3,"WlOutput"],[4,"Request"],[3,"WlRegion"],[4,"Error"],[4,"Request"],[3,"WlSubcompositor"],[4,"Error"],[4,"Request"],[3,"WlSubsurface"],[8,"GlobalImplementor"],[3,"DispatchData"],[3,"Filter"],[3,"UserData"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"QueueToken"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[3,"WlCallback"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"]]};
searchIndex["wayland_commons"] = {"doc":"Common definitions for wayland","i":[[14,"smallvec","wayland_commons","Creates a [`SmallVec`] containing the arguments.",null,null],[3,"ThreadGuard","","Stores a value in a threadafe container that only lets you…",null,null],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[0,"filter","","Filter",null,null],[3,"DispatchData","wayland_commons::filter","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[11,"get","","Access the dispatch data knowing its type",0,[[["self"]],[["option"],["t"]]]],[11,"wrap","","Wrap a mutable reference",0,[[["t"]],["dispatchdata"]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",0,[[["self"]],["dispatchdata"]]],[11,"new","","Create a new filter from given closure",1,[[["fnmut"]],["filter"]]],[11,"send","","Send a message to this filter",1,[[["dispatchdata"],["self"],["e"]]]],[0,"map","wayland_commons","Wayland objects map",null,null],[3,"Object","wayland_commons::map","The representation of a protocol object",null,null],[12,"interface","","Interface name of this object",2,null],[12,"version","","Version of this object",2,null],[12,"requests","","Description of the requests of this object",2,null],[12,"events","","Description of the events of this object",2,null],[12,"meta","","Metadata associated to this object (ex: its event queue…",2,null],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta,…",2,null],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta,…",2,null],[3,"ObjectMap","","A holder for the object store of a connection",null,null],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created…",null,null],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation…",null,null],[10,"child","","Create the metadata for a child object",3,[[["self"]],["self"]]],[11,"from_interface","","Create an Object corresponding to given interface and…",2,[[["u32"],["meta"]],["object"]]],[11,"event_child","","Create an optional `Object` corresponding to the possible…",2,[[["u16"],["self"]],[["option",["object"]],["object"]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible…",2,[[["u16"],["self"]],[["option",["object"]],["object"]]]],[11,"is_interface","","Check whether this object is of given interface",2,[[["self"]],["bool"]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the…",2,[[["meta"]],["object"]]],[11,"new","","Create a new empty object map",4,[[],["objectmap"]]],[11,"find","","Find an object in the store",4,[[["u32"],["self"]],[["option",["object"]],["object"]]]],[11,"remove","","Remove an object from the store",4,[[["self"],["u32"]]]],[11,"insert_at","","Insert given object for given id",4,[[["self"],["u32"],["object"]],["result"]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",4,[[["self"],["object"]],["u32"]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",4,[[["self"],["object"]],["u32"]]],[11,"with","","Mutably access an object of the map",4,[[["self"],["u32"],["fnonce"]],["result"]]],[11,"with_all","","Mutably access all objects of the map in sequence",4,[[["self"],["fnmut"]]]],[0,"socket","wayland_commons","Wayland socket manipulation",null,null],[3,"Socket","wayland_commons::socket","A wayland socket",null,null],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles…",null,null],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket…",null,null],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single…",null,null],[11,"send_msg","","Send a single message to the socket",5,[[["self"]],["nixresult"]]],[11,"rcv_msg","","Receive a single message from the socket",5,[[["self"]],["nixresult"]]],[11,"new","","Wrap a Socket into a Buffered Socket",6,[[["socket"]],["bufferedsocket"]]],[11,"get_socket","","Get direct access to the underlying socket",6,[[["self"]],["socket"]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",6,[[],["socket"]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",6,[[["self"]],["nixresult"]]],[11,"write_message","","Write a message to the outgoing buffer",6,[[["message"],["self"]],["nixresult"]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to…",6,[[["self"]],["nixresult"]]],[11,"read_one_message","","Read and deserialize a single message from the incoming…",6,[[["self"],["f"]],[["message"],["messageparseerror"],["result",["message","messageparseerror"]]]]],[11,"read_messages","","Read and deserialize messages from the socket",6,[[["f1"],["self"],["f2"]],[["nixresult",["result"]],["result",["usize","messageparseerror"]]]]],[0,"user_data","wayland_commons","Various utilities used for other implementations",null,null],[3,"UserData","wayland_commons::user_data","A wrapper for user data, able to store any type, and…",null,null],[3,"UserDataMap","","A storage able to store several values of `UserData` of…",null,null],[11,"new","","Create a new UserData instance",7,[[],["userdata"]]],[11,"set","","Sets the UserData to a given value",7,[[["fnonce"],["self"]]]],[11,"set_threadsafe","","Sets the UserData to a given threadsafe value",7,[[["fnonce"],["self"]]]],[11,"get","","Attempt to access the wrapped user data",7,[[["self"]],[["t"],["option"]]]],[11,"new","","Create a new map",8,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",8,[[["self"]],[["t"],["option"]]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",8,[[["fnonce"],["self"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",8,[[["fnonce"],["self"]],["bool"]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the…",null,null],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",null,null],[12,"name","","Name of this message",9,null],[12,"signature","","Signature of the message",9,null],[12,"since","","Minimum required version of the interface",9,null],[12,"destructor","","Whether this message is a destructor",9,null],[3,"Message","","A wire message",null,null],[12,"sender_id","","ID of the object sending this message",10,null],[12,"opcode","","Opcode of the message",10,null],[12,"args","","Arguments of the message",10,null],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",null,null],[13,"Int","","i32",11,null],[13,"Uint","","u32",11,null],[13,"Fixed","","fixed point, 1/256 precision",11,null],[13,"Str","","CString",11,null],[13,"Object","","id of a wayland object",11,null],[13,"NewId","","id of a newly created wayland object",11,null],[13,"Array","","Vec",11,null],[13,"Fd","","RawFd",11,null],[4,"Argument","","Enum of possible argument as recognized by the wire,…",null,null],[13,"Int","","i32",12,null],[13,"Uint","","u32",12,null],[13,"Fixed","","fixed point, 1/256 precision",12,null],[13,"Str","","CString",12,null],[13,"Object","","id of a wayland object",12,null],[13,"NewId","","id of a newly created wayland object",12,null],[13,"Array","","Vec",12,null],[13,"Fd","","RawFd",12,null],[4,"MessageWriteError","","Error generated when trying to serialize a message into…",null,null],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",13,null],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",13,null],[4,"MessageParseError","","Error generated when trying to deserialize a message from…",null,null],[13,"MissingFD","","The message references a FD but the buffer FD is empty",14,null],[13,"MissingData","","More data is needed to deserialize the message",14,null],[13,"Malformed","","The message is malformed and cannot be parsed",14,null],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",null,[[["rawfd"]],[["nixresult",["rawfd"]],["rawfd"]]]],[11,"get_type","","Retrieve the type of a given argument instance",12,[[["self"]],["argumenttype"]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",10,[[["self"]],[["messagewriteerror"],["result",["messagewriteerror"]]]]],[11,"from_raw","","Attempts to parse a single wayland message with the given…",10,[[],[["result",["messageparseerror"]],["messageparseerror"]]]],[8,"MessageGroup","wayland_commons","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",15,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",15,null],[10,"opcode","","The opcode of this message",15,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",15,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",15,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",15,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[10,"from_raw","","Construct a message from its raw representation",15,[[["message"]],["result"]]],[10,"into_raw","","Turn this message into its raw representation",15,[[["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",15,[[["u32"]],["result"]]],[10,"as_raw_c_in","","Build a C representation of this message",15,[[["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",16,null],[16,"Event","","Set of events associated to this interface",16,null],[18,"NAME","","Name of this interface",16,null],[18,"VERSION","","Maximum supported version of this interface",16,null],[10,"c_interface","","Pointer to the C representation of this interface",16,[[]]],[11,"new","","Create a new ThreadGuard wrapper",17,[[["t"]],["threadguard"]]],[11,"get","","Access the underlying value",17,[[["self"]],["t"]]],[11,"get_mut","","Mutably access the underlying value",17,[[["self"]],["t"]]],[11,"try_get","","Try to access the underlying value",17,[[["self"]],[["t"],["option"]]]],[11,"try_get_mut","","Try to mutably access the underlying value",17,[[["self"]],[["option"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","wayland_commons::filter","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","wayland_commons::map","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_commons::socket","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_commons::user_data","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","wayland_commons::wire","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"is_destructor","wayland_commons","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["m"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",18,[[["message"]],["result"]]],[11,"into_raw","","",18,[[["u32"]],["message"]]],[11,"from_raw_c","","",18,[[["u32"]],["result"]]],[11,"as_raw_c_in","","",18,[[["f"]],["t"]]],[11,"drop","wayland_commons::socket","",5,[[["self"]]]],[11,"drop","wayland_commons::user_data","",7,[[["self"]]]],[11,"drop","wayland_commons","",17,[[["self"]]]],[11,"clone","wayland_commons::filter","",1,[[["self"]],["filter"]]],[11,"clone","wayland_commons::map","",2,[[["self"]],["object"]]],[11,"clone","wayland_commons::wire","",9,[[["self"]],["messagedesc"]]],[11,"clone","","",11,[[["self"]],["argumenttype"]]],[11,"clone","","",12,[[["self"]],["argument"]]],[11,"clone","","",10,[[["self"]],["message"]]],[11,"clone","","",13,[[["self"]],["messagewriteerror"]]],[11,"clone","","",14,[[["self"]],["messageparseerror"]]],[11,"default","wayland_commons::map","",4,[[],["objectmap"]]],[11,"default","wayland_commons::user_data","",8,[[],["userdatamap"]]],[11,"eq","wayland_commons::wire","",11,[[["argumenttype"],["self"]],["bool"]]],[11,"eq","","",12,[[["argument"],["self"]],["bool"]]],[11,"ne","","",12,[[["argument"],["self"]],["bool"]]],[11,"eq","","",10,[[["message"],["self"]],["bool"]]],[11,"ne","","",10,[[["message"],["self"]],["bool"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["formatter"],["self"]],[["result",["error"]],["error"]]]],[11,"as_raw_fd","wayland_commons::socket","",5,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",5,[[["rawfd"]],["socket"]]],[11,"into_raw_fd","","",5,[[],["rawfd"]]]],"p":[[3,"DispatchData"],[3,"Filter"],[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"ThreadGuard"],[4,"NoMessage"]]};
searchIndex["wayland_cursor"] = {"doc":"Wayland cursor utilities","i":[[3,"CursorTheme","wayland_cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if…",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[3,"FrameAndDuration","","Which frame to show, and for how long.",null,null],[12,"frame_index","","The index of the frame which should be shown.",0,null],[12,"frame_duration","","The duration that the frame should be shown for (in…",0,null],[11,"load","","Load a cursor theme from system defaults.",1,[[["u32"],["attached"]],["self"]]],[11,"load_or","","Load a cursor theme, using `name` as fallback.",1,[[["str"],["u32"],["attached"]],["self"]]],[11,"load_from_name","","Create a new cursor theme, ignoring the system defaults.",1,[[["str"],["u32"],["attached"]],["self"]]],[11,"get_cursor","","Retrieve a cursor from the theme.",1,[[["str"],["self"]],[["option",["cursor"]],["cursor"]]]],[11,"frame_and_duration","","Given a time, calculate which frame to show, and how much…",2,[[["u32"],["self"]],["frameandduration"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clone","","",2,[[["self"]],["cursor"]]],[11,"clone","","",3,[[["self"]],["cursorimagebuffer"]]],[11,"clone","","",0,[[["self"]],["frameandduration"]]],[11,"eq","","",0,[[["frameandduration"],["self"]],["bool"]]],[11,"ne","","",0,[[["frameandduration"],["self"]],["bool"]]],[11,"deref","","",3,[[["self"]],["wlbuffer"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"index","","",2,[[["self"],["usize"]]]]],"p":[[3,"FrameAndDuration"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"]]};
searchIndex["wayland_egl"] = {"doc":"EGL utilities","i":[[3,"WlEglSurface","wayland_egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,[[],["bool"]]],[11,"new","","Create an EGL surface from a wayland surface",0,[[["wlsurface"],["i32"]],["wleglsurface"]]],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland…",0,[[["i32"]],["wleglsurface"]]],[11,"get_size","","Fetch current size of the EGL surface",0,[[["self"]]]],[11,"resize","","Resize the EGL surface",0,[[["self"],["i32"]]]],[11,"ptr","","Raw pointer to the EGL surface",0,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]]],"p":[[3,"WlEglSurface"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland…","i":[[0,"misc","wayland_protocols","Misc protocols",null,null],[0,"gtk_primary_selection","wayland_protocols::misc","Gtk primary selection protocol",null,null],[0,"client","wayland_protocols::misc::gtk_primary_selection","Client-side API of this protocol",null,null],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::client","X primary selection emulation",null,null],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",null,null],[4,"Request","","",null,null],[13,"CreateSource","","create a new primary selection source",0,null],[13,"GetDevice","","create a new primary selection device",0,null],[12,"seat","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager::Request","",0,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","destroy the primary selection device manager",0,null],[4,"Event","","",null,null],[7,"gtk_primary_selection_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::client","",null,null],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",null,null],[4,"Request","","",null,null],[13,"SetSelection","","set the primary selection",1,null],[12,"source","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Request","",1,null],[12,"serial","","",1,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","destroy the primary selection device",1,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wp_primary_selection_offer",2,null],[12,"offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event","",2,null],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","advertise a new primary selection",2,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event","",2,null],[7,"gtk_primary_selection_device_requests","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::client","offer to transfer primary selection contents",null,null],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",3,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Request","",3,null],[12,"fd","","",3,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","destroy the primary selection offer",3,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered mime type",4,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Event","",4,null],[7,"gtk_primary_selection_offer_requests","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::client","offer to replace the contents of the primary selection",null,null],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",null,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",5,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Request","",5,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","destroy the primary selection source",5,null],[4,"Event","","",null,null],[13,"Send","","send the primary selection contents",6,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Event","",6,null],[12,"fd","","",6,null],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","request for primary selection contents was canceled",6,null],[7,"gtk_primary_selection_source_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[0,"server","wayland_protocols::misc::gtk_primary_selection","Server-side API of this protocol",null,null],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::server","X primary selection emulation",null,null],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",null,null],[4,"Request","","",null,null],[13,"CreateSource","","create a new primary selection source",7,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",7,null],[13,"GetDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","create a new primary selection device",7,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",7,null],[12,"seat","","",7,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","destroy the primary selection device manager",7,null],[4,"Event","","",null,null],[7,"gtk_primary_selection_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::server","",null,null],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",null,null],[4,"Request","","",null,null],[13,"SetSelection","","set the primary selection",8,null],[12,"source","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Request","",8,null],[12,"serial","","",8,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","destroy the primary selection device",8,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wp_primary_selection_offer",9,null],[12,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",9,null],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","advertise a new primary selection",9,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",9,null],[7,"gtk_primary_selection_device_requests","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::server","offer to transfer primary selection contents",null,null],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",10,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Request","",10,null],[12,"fd","","",10,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","destroy the primary selection offer",10,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered mime type",11,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Event","",11,null],[7,"gtk_primary_selection_offer_requests","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::server","offer to replace the contents of the primary selection",null,null],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",null,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",12,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Request","",12,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","destroy the primary selection source",12,null],[4,"Event","","",null,null],[13,"Send","","send the primary selection contents",13,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Event","",13,null],[12,"fd","","",13,null],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","request for primary selection contents was canceled",13,null],[7,"gtk_primary_selection_source_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[11,"create_source","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","create a new primary selection source",14,[[["self"]],[["main",["gtkprimaryselectionsource"]],["gtkprimaryselectionsource"]]]],[11,"get_device","","create a new primary selection device",14,[[["wlseat"],["self"]],[["gtkprimaryselectiondevice"],["main",["gtkprimaryselectiondevice"]]]]],[11,"destroy","","destroy the primary selection device manager",14,[[["self"]]]],[11,"set_selection","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","set the primary selection",15,[[["u32"],["gtkprimaryselectionsource"],["option",["gtkprimaryselectionsource"]],["self"]]]],[11,"destroy","","destroy the primary selection device",15,[[["self"]]]],[11,"receive","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","request that the data is transferred",16,[[["string"],["self"],["rawfd"]]]],[11,"destroy","","destroy the primary selection offer",16,[[["self"]]]],[11,"offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","add an offered mime type",17,[[["string"],["self"]]]],[11,"destroy","","destroy the primary selection source",17,[[["self"]]]],[11,"data_offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","introduce a new wp_primary_selection_offer",18,[[["self"],["gtkprimaryselectionoffer"]]]],[11,"selection","","advertise a new primary selection",18,[[["option",["gtkprimaryselectionoffer"]],["self"],["gtkprimaryselectionoffer"]]]],[11,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","advertise offered mime type",19,[[["string"],["self"]]]],[11,"send","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","send the primary selection contents",20,[[["string"],["self"],["rawfd"]]]],[11,"cancelled","","request for primary selection contents was canceled",20,[[["self"]]]],[0,"wlr","wayland_protocols","wlr-procotols extension family",null,null],[0,"presentation_time","","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",21,null],[13,"InvalidFlag","","invalid flag",21,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",22,null],[13,"Feedback","","request presentation feedback information",22,null],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",22,null],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",23,null],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",23,null],[7,"wp_presentation_requests","wayland_protocols::presentation_time::client::wp_presentation","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",null,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"Kind","wayland_protocols::presentation_time::client::wp_presentation_feedback","bitmask of flags in presented event",null,null],[3,"WpPresentationFeedback","","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",24,null],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",24,null],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",24,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",24,null],[12,"tv_sec_lo","","",24,null],[12,"tv_nsec","","",24,null],[12,"refresh","","",24,null],[12,"seq_hi","","",24,null],[12,"seq_lo","","",24,null],[12,"flags","","",24,null],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",24,null],[7,"wp_presentation_feedback_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_feedback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",null,null],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",25,null],[13,"InvalidFlag","","invalid flag",25,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",26,null],[13,"Feedback","","request presentation feedback information",26,null],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",26,null],[12,"callback","","",26,null],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",27,null],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",27,null],[7,"wp_presentation_requests","wayland_protocols::presentation_time::server::wp_presentation","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",null,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"Kind","wayland_protocols::presentation_time::server::wp_presentation_feedback","bitmask of flags in presented event",null,null],[3,"WpPresentationFeedback","","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",28,null],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",28,null],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",28,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",28,null],[12,"tv_sec_lo","","",28,null],[12,"tv_nsec","","",28,null],[12,"refresh","","",28,null],[12,"seq_hi","","",28,null],[12,"seq_lo","","",28,null],[12,"flags","","",28,null],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",28,null],[7,"wp_presentation_feedback_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_feedback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",null,null],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",29,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",29,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",29,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",29,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",29,null],[13,"InvalidPositioner","","the client provided an invalid positioner",29,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",30,null],[13,"CreatePositioner","","create a positioner object",30,null],[13,"GetXdgSurface","","create a shell surface from a surface",30,null],[12,"surface","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",30,null],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",30,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",30,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",31,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",31,null],[7,"xdg_wm_base_requests","wayland_protocols::xdg_shell::client::xdg_wm_base","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",32,null],[4,"Anchor","","",null,null],[13,"None","","",33,null],[13,"Top","","",33,null],[13,"Bottom","","",33,null],[13,"Left","","",33,null],[13,"Right","","",33,null],[13,"TopLeft","","",33,null],[13,"BottomLeft","","",33,null],[13,"TopRight","","",33,null],[13,"BottomRight","","",33,null],[4,"Gravity","","",null,null],[13,"None","","",34,null],[13,"Top","","",34,null],[13,"Bottom","","",34,null],[13,"Left","","",34,null],[13,"Right","","",34,null],[13,"TopLeft","","",34,null],[13,"BottomLeft","","",34,null],[13,"TopRight","","",34,null],[13,"BottomRight","","",34,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",35,null],[13,"SetSize","","set the size of the to-be positioned rectangle",35,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",35,null],[12,"height","","",35,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",35,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",35,null],[12,"y","","",35,null],[12,"width","","",35,null],[12,"height","","",35,null],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",35,null],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",35,null],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",35,null],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",35,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",35,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",35,null],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",35,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",35,null],[12,"y","","",35,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",null,null],[7,"xdg_positioner_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_positioner_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",36,null],[13,"AlreadyConstructed","","",36,null],[13,"UnconfiguredBuffer","","",36,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",37,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",37,null],[13,"GetPopup","","assign the xdg_popup surface role",37,null],[12,"parent","wayland_protocols::xdg_shell::client::xdg_surface::Request","",37,null],[12,"positioner","","",37,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",37,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",37,null],[12,"y","","",37,null],[12,"width","","",37,null],[12,"height","","",37,null],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",37,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",37,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",38,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",38,null],[7,"xdg_surface_requests","wayland_protocols::xdg_shell::client::xdg_surface","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",39,null],[13,"Top","","",39,null],[13,"Bottom","","",39,null],[13,"Left","","",39,null],[13,"TopLeft","","",39,null],[13,"BottomLeft","","",39,null],[13,"Right","","",39,null],[13,"TopRight","","",39,null],[13,"BottomRight","","",39,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",40,null],[13,"Fullscreen","","the surface is fullscreen",40,null],[13,"Resizing","","the surface is being resized",40,null],[13,"Activated","","the surface is now activated",40,null],[13,"TiledLeft","","the surface is tiled",40,null],[13,"TiledRight","","the surface is tiled",40,null],[13,"TiledTop","","the surface is tiled",40,null],[13,"TiledBottom","","the surface is tiled",40,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",41,null],[13,"SetParent","","set the parent of this surface",41,null],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",41,null],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",41,null],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",41,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[12,"serial","","",41,null],[12,"x","","",41,null],[12,"y","","",41,null],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",41,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[12,"serial","","",41,null],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",41,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[12,"serial","","",41,null],[12,"edges","","",41,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",41,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[12,"height","","",41,null],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",41,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[12,"height","","",41,null],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",41,null],[13,"UnsetMaximized","","unmaximize the window",41,null],[13,"SetFullscreen","","set the window as fullscreen on an output",41,null],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",41,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",41,null],[13,"SetMinimized","","set the window as minimized",41,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",42,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",42,null],[12,"height","","",42,null],[12,"states","","",42,null],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",42,null],[7,"xdg_toplevel_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",43,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",44,null],[13,"Grab","","make the popup take an explicit grab",44,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",44,null],[12,"serial","","",44,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",45,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",45,null],[12,"y","","",45,null],[12,"width","","",45,null],[12,"height","","",45,null],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",45,null],[7,"xdg_popup_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",46,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",46,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",46,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",46,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",46,null],[13,"InvalidPositioner","","the client provided an invalid positioner",46,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",47,null],[13,"CreatePositioner","","create a positioner object",47,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",47,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",47,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",47,null],[12,"surface","","",47,null],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",47,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",47,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",48,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",48,null],[7,"xdg_wm_base_requests","wayland_protocols::xdg_shell::server::xdg_wm_base","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",49,null],[4,"Anchor","","",null,null],[13,"None","","",50,null],[13,"Top","","",50,null],[13,"Bottom","","",50,null],[13,"Left","","",50,null],[13,"Right","","",50,null],[13,"TopLeft","","",50,null],[13,"BottomLeft","","",50,null],[13,"TopRight","","",50,null],[13,"BottomRight","","",50,null],[4,"Gravity","","",null,null],[13,"None","","",51,null],[13,"Top","","",51,null],[13,"Bottom","","",51,null],[13,"Left","","",51,null],[13,"Right","","",51,null],[13,"TopLeft","","",51,null],[13,"BottomLeft","","",51,null],[13,"TopRight","","",51,null],[13,"BottomRight","","",51,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",52,null],[13,"SetSize","","set the size of the to-be positioned rectangle",52,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",52,null],[12,"height","","",52,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",52,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",52,null],[12,"y","","",52,null],[12,"width","","",52,null],[12,"height","","",52,null],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",52,null],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",52,null],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",52,null],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",52,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",52,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",52,null],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",52,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",52,null],[12,"y","","",52,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",null,null],[7,"xdg_positioner_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_positioner_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",53,null],[13,"AlreadyConstructed","","",53,null],[13,"UnconfiguredBuffer","","",53,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",54,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",54,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",54,null],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",54,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",54,null],[12,"parent","","",54,null],[12,"positioner","","",54,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",54,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",54,null],[12,"y","","",54,null],[12,"width","","",54,null],[12,"height","","",54,null],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",54,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",54,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",55,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",55,null],[7,"xdg_surface_requests","wayland_protocols::xdg_shell::server::xdg_surface","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",56,null],[13,"Top","","",56,null],[13,"Bottom","","",56,null],[13,"Left","","",56,null],[13,"TopLeft","","",56,null],[13,"BottomLeft","","",56,null],[13,"Right","","",56,null],[13,"TopRight","","",56,null],[13,"BottomRight","","",56,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",57,null],[13,"Fullscreen","","the surface is fullscreen",57,null],[13,"Resizing","","the surface is being resized",57,null],[13,"Activated","","the surface is now activated",57,null],[13,"TiledLeft","","the surface is tiled",57,null],[13,"TiledRight","","the surface is tiled",57,null],[13,"TiledTop","","the surface is tiled",57,null],[13,"TiledBottom","","the surface is tiled",57,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",58,null],[13,"SetParent","","set the parent of this surface",58,null],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",58,null],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",58,null],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",58,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[12,"serial","","",58,null],[12,"x","","",58,null],[12,"y","","",58,null],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",58,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[12,"serial","","",58,null],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",58,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[12,"serial","","",58,null],[12,"edges","","",58,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",58,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[12,"height","","",58,null],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",58,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[12,"height","","",58,null],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",58,null],[13,"UnsetMaximized","","unmaximize the window",58,null],[13,"SetFullscreen","","set the window as fullscreen on an output",58,null],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",58,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",58,null],[13,"SetMinimized","","set the window as minimized",58,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",59,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",59,null],[12,"height","","",59,null],[12,"states","","",59,null],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",59,null],[7,"xdg_toplevel_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",60,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",61,null],[13,"Grab","","make the popup take an explicit grab",61,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",61,null],[12,"serial","","",61,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",62,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",62,null],[12,"y","","",62,null],[12,"width","","",62,null],[12,"height","","",62,null],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",62,null],[7,"xdg_popup_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",63,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",64,null],[13,"GetViewport","","extend surface interface for crop and scale",64,null],[12,"surface","wayland_protocols::viewporter::client::wp_viewporter::Request","",64,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[7,"wp_viewporter_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewporter_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",65,null],[13,"BadSize","","destination size is not integer",65,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",65,null],[13,"NoSurface","","the wl_surface was destroyed",65,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",66,null],[13,"SetSource","","set the source rectangle for cropping",66,null],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",66,null],[12,"y","","",66,null],[12,"width","","",66,null],[12,"height","","",66,null],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",66,null],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",66,null],[12,"height","","",66,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",null,null],[7,"wp_viewport_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewport_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",null,null],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",67,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",68,null],[13,"GetViewport","","extend surface interface for crop and scale",68,null],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",68,null],[12,"surface","","",68,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[7,"wp_viewporter_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewporter_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",69,null],[13,"BadSize","","destination size is not integer",69,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",69,null],[13,"NoSurface","","the wl_surface was destroyed",69,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",70,null],[13,"SetSource","","set the source rectangle for cropping",70,null],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",70,null],[12,"y","","",70,null],[12,"width","","",70,null],[12,"height","","",70,null],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",70,null],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",70,null],[12,"height","","",70,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",null,null],[7,"wp_viewport_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewport_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",null,null],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",14,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"into_any_arc","","",14,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_any","","",0,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",0,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",0,[[["self"]],["any"]]],[11,"as_any_mut","","",0,[[["self"]],["any"]]],[11,"into_any_arc","","",0,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",71,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any_arc","","",71,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",15,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any_arc","","",15,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"into_any","","",1,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",1,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",1,[[["self"]],["any"]]],[11,"as_any_mut","","",1,[[["self"]],["any"]]],[11,"into_any_arc","","",1,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",2,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any_arc","","",2,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"into_any","","",16,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",16,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"into_any_arc","","",16,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",3,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"into_any_arc","","",3,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",4,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"into_any_arc","","",4,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",17,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any_arc","","",17,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",5,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any_arc","","",5,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",6,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"into_any_arc","","",6,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_any","","",72,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",72,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"into_any_arc","","",72,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",7,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"into_any_arc","","",7,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_any","","",73,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",73,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"into_any_arc","","",73,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",18,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any_arc","","",18,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",8,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"into_any_arc","","",8,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",9,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any_arc","","",9,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_any","","",19,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",19,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"into_any_arc","","",19,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",10,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any_arc","","",10,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",11,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any_arc","","",11,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",20,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any_arc","","",20,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",12,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any_arc","","",12,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",13,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any_arc","","",13,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_any","","",74,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",74,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"into_any_arc","","",74,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",21,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any_arc","","",21,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",22,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"into_any_arc","","",22,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",23,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any_arc","","",23,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",75,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"into_any_arc","","",75,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_any","","",76,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",76,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",76,[[["self"]],["any"]]],[11,"as_any_mut","","",76,[[["self"]],["any"]]],[11,"into_any_arc","","",76,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_any","","",77,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",77,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"into_any_arc","","",77,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",24,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any_arc","","",24,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",78,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"into_any_arc","","",78,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",25,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any_arc","","",25,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",26,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any_arc","","",26,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",27,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any_arc","","",27,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",79,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"into_any_arc","","",79,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_any","","",80,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",80,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"into_any_arc","","",80,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",81,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any_arc","","",81,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",28,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any_arc","","",28,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",82,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"into_any_arc","","",82,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",29,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any_arc","","",29,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_any","","",30,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",30,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"into_any_arc","","",30,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",31,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any_arc","","",31,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_any","","",83,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",83,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"into_any_arc","","",83,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",84,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"into_any_arc","","",84,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",32,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any_arc","","",32,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",33,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any_arc","","",33,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",34,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any_arc","","",34,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",35,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any_arc","","",35,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",85,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"into_any_arc","","",85,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",86,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"into_any_arc","","",86,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_any","","",36,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",36,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any_arc","","",36,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",37,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any_arc","","",37,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",38,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"into_any_arc","","",38,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",87,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"into_any_arc","","",87,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",39,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any_arc","","",39,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_any","","",40,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",40,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"into_any_arc","","",40,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_any","","",41,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",41,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"into_any_arc","","",41,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_any","","",42,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",42,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"into_any_arc","","",42,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",88,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"into_any_arc","","",88,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",43,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any_arc","","",43,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",44,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"into_any_arc","","",44,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_any","","",45,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",45,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"into_any_arc","","",45,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",89,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"into_any_arc","","",89,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_any","","",46,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",46,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"into_any_arc","","",46,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",47,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"into_any_arc","","",47,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_any","","",48,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",48,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"into_any_arc","","",48,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_any","","",90,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",90,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"into_any_arc","","",90,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",91,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"into_any_arc","","",91,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",49,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"into_any_arc","","",49,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_any","","",50,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",50,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"into_any_arc","","",50,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",51,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"into_any_arc","","",51,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",52,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"into_any_arc","","",52,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_any","","",92,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",92,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"into_any_arc","","",92,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_any","","",93,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",93,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"into_any_arc","","",93,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",53,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"into_any_arc","","",53,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",54,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"into_any_arc","","",54,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_any","","",55,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",55,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",55,[[["self"]],["any"]]],[11,"as_any_mut","","",55,[[["self"]],["any"]]],[11,"into_any_arc","","",55,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",94,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"into_any_arc","","",94,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_any","","",56,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",56,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",56,[[["self"]],["any"]]],[11,"as_any_mut","","",56,[[["self"]],["any"]]],[11,"into_any_arc","","",56,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_any","","",57,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",57,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",57,[[["self"]],["any"]]],[11,"as_any_mut","","",57,[[["self"]],["any"]]],[11,"into_any_arc","","",57,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",58,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"into_any_arc","","",58,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_any","","",59,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",59,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"into_any_arc","","",59,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_any","","",95,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",95,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",95,[[["self"]],["any"]]],[11,"as_any_mut","","",95,[[["self"]],["any"]]],[11,"into_any_arc","","",95,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_any","","",60,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",60,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"into_any_arc","","",60,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",61,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"into_any_arc","","",61,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",62,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any_arc","","",62,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",96,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"into_any_arc","","",96,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",63,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any_arc","","",63,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_any","","",64,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",64,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",64,[[["self"]],["any"]]],[11,"as_any_mut","","",64,[[["self"]],["any"]]],[11,"into_any_arc","","",64,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",97,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"into_any_arc","","",97,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_any","","",98,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",98,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"into_any_arc","","",98,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_any","","",65,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",65,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"into_any_arc","","",65,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",66,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"into_any_arc","","",66,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_any","","",99,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",99,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",99,[[["self"]],["any"]]],[11,"as_any_mut","","",99,[[["self"]],["any"]]],[11,"into_any_arc","","",99,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",100,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"into_any_arc","","",100,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",67,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"into_any_arc","","",67,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_any","","",68,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",68,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"into_any_arc","","",68,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",101,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any_arc","","",101,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"into_any","","",102,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",102,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",102,[[["self"]],["any"]]],[11,"as_any_mut","","",102,[[["self"]],["any"]]],[11,"into_any_arc","","",102,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_any","","",69,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",69,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",69,[[["self"]],["any"]]],[11,"as_any_mut","","",69,[[["self"]],["any"]]],[11,"into_any_arc","","",69,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_any","","",70,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",70,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"into_any_arc","","",70,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",103,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"into_any_arc","","",103,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",14,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",15,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",16,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",17,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",72,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",19,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",20,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::presentation_time::client::wp_presentation","",74,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::presentation_time::client::wp_presentation_feedback","",76,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation","",78,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation_feedback","",80,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_wm_base","",82,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_positioner","",84,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_surface","",86,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_toplevel","",87,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_popup","",88,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_wm_base","",89,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_positioner","",91,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_surface","",93,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_toplevel","",94,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_popup","",95,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::viewporter::client::wp_viewporter","",96,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::viewporter::client::wp_viewport","",98,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewporter","",100,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewport","",102,[[["self"]],["resource"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",14,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",15,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",16,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",17,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",72,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",19,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",20,[[["resource"]],["self"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",74,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",76,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",78,[[["resource"]],["self"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",80,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",82,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",84,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",86,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",87,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",88,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",89,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",91,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",93,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",94,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",95,[[["resource"]],["self"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",96,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",98,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",100,[[["resource"]],["self"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",102,[[["resource"]],["self"]]],[11,"extend","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["intoiterator"]]]],[11,"extend","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["intoiterator"]]]],[11,"extend","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["self"],["intoiterator"]]]],[11,"extend","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["intoiterator"],["self"]]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",14,[[["self"]],["gtkprimaryselectiondevicemanager"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",15,[[["self"]],["gtkprimaryselectiondevice"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",16,[[["self"]],["gtkprimaryselectionoffer"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",17,[[["self"]],["gtkprimaryselectionsource"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",72,[[["self"]],["gtkprimaryselectiondevicemanager"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[["self"]],["gtkprimaryselectiondevice"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",19,[[["self"]],["gtkprimaryselectionoffer"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",20,[[["self"]],["gtkprimaryselectionsource"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",21,[[["self"]],["error"]]],[11,"clone","","",74,[[["self"]],["wppresentation"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"]],["kind"]]],[11,"clone","","",76,[[["self"]],["wppresentationfeedback"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",25,[[["self"]],["error"]]],[11,"clone","","",78,[[["self"]],["wppresentation"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"]],["kind"]]],[11,"clone","","",80,[[["self"]],["wppresentationfeedback"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",29,[[["self"]],["error"]]],[11,"clone","","",82,[[["self"]],["xdgwmbase"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",32,[[["self"]],["error"]]],[11,"clone","","",33,[[["self"]],["anchor"]]],[11,"clone","","",34,[[["self"]],["gravity"]]],[11,"clone","","",83,[[["self"]],["constraintadjustment"]]],[11,"clone","","",84,[[["self"]],["xdgpositioner"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",36,[[["self"]],["error"]]],[11,"clone","","",86,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",39,[[["self"]],["resizeedge"]]],[11,"clone","","",40,[[["self"]],["state"]]],[11,"clone","","",87,[[["self"]],["xdgtoplevel"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",43,[[["self"]],["error"]]],[11,"clone","","",88,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",46,[[["self"]],["error"]]],[11,"clone","","",89,[[["self"]],["xdgwmbase"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",49,[[["self"]],["error"]]],[11,"clone","","",50,[[["self"]],["anchor"]]],[11,"clone","","",51,[[["self"]],["gravity"]]],[11,"clone","","",90,[[["self"]],["constraintadjustment"]]],[11,"clone","","",91,[[["self"]],["xdgpositioner"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",53,[[["self"]],["error"]]],[11,"clone","","",93,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",56,[[["self"]],["resizeedge"]]],[11,"clone","","",57,[[["self"]],["state"]]],[11,"clone","","",94,[[["self"]],["xdgtoplevel"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",60,[[["self"]],["error"]]],[11,"clone","","",95,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",63,[[["self"]],["error"]]],[11,"clone","","",96,[[["self"]],["wpviewporter"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",65,[[["self"]],["error"]]],[11,"clone","","",98,[[["self"]],["wpviewport"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",67,[[["self"]],["error"]]],[11,"clone","","",100,[[["self"]],["wpviewporter"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",69,[[["self"]],["error"]]],[11,"clone","","",102,[[["self"]],["wpviewport"]]],[11,"cmp","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["kind"],["self"]],["ordering"]]],[11,"cmp","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["kind"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["constraintadjustment"],["self"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",14,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"ne","","",14,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",15,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"ne","","",15,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",16,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"ne","","",16,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",17,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"ne","","",17,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",72,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"ne","","",72,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"ne","","",18,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",19,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"ne","","",19,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",20,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"ne","","",20,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation","",21,[[["error"],["self"]],["bool"]]],[11,"eq","","",74,[[["wppresentation"],["self"]],["bool"]]],[11,"ne","","",74,[[["wppresentation"],["self"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["kind"],["self"]],["bool"]]],[11,"ne","","",75,[[["kind"],["self"]],["bool"]]],[11,"eq","","",76,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"ne","","",76,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation","",25,[[["self"],["error"]],["bool"]]],[11,"eq","","",78,[[["self"],["wppresentation"]],["bool"]]],[11,"ne","","",78,[[["self"],["wppresentation"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["kind"]],["bool"]]],[11,"ne","","",79,[[["self"],["kind"]],["bool"]]],[11,"eq","","",80,[[["wppresentationfeedback"],["self"]],["bool"]]],[11,"ne","","",80,[[["wppresentationfeedback"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_wm_base","",29,[[["self"],["error"]],["bool"]]],[11,"eq","","",82,[[["xdgwmbase"],["self"]],["bool"]]],[11,"ne","","",82,[[["xdgwmbase"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_positioner","",32,[[["self"],["error"]],["bool"]]],[11,"eq","","",33,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",34,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",83,[[["constraintadjustment"],["self"]],["bool"]]],[11,"ne","","",83,[[["constraintadjustment"],["self"]],["bool"]]],[11,"eq","","",84,[[["self"],["xdgpositioner"]],["bool"]]],[11,"ne","","",84,[[["self"],["xdgpositioner"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_surface","",36,[[["self"],["error"]],["bool"]]],[11,"eq","","",86,[[["xdgsurface"],["self"]],["bool"]]],[11,"ne","","",86,[[["xdgsurface"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_toplevel","",39,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",40,[[["self"],["state"]],["bool"]]],[11,"eq","","",87,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"ne","","",87,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_popup","",43,[[["error"],["self"]],["bool"]]],[11,"eq","","",88,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",88,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_wm_base","",46,[[["error"],["self"]],["bool"]]],[11,"eq","","",89,[[["xdgwmbase"],["self"]],["bool"]]],[11,"ne","","",89,[[["xdgwmbase"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_positioner","",49,[[["self"],["error"]],["bool"]]],[11,"eq","","",50,[[["anchor"],["self"]],["bool"]]],[11,"eq","","",51,[[["gravity"],["self"]],["bool"]]],[11,"eq","","",90,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",90,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","","",91,[[["self"],["xdgpositioner"]],["bool"]]],[11,"ne","","",91,[[["self"],["xdgpositioner"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_surface","",53,[[["error"],["self"]],["bool"]]],[11,"eq","","",93,[[["self"],["xdgsurface"]],["bool"]]],[11,"ne","","",93,[[["self"],["xdgsurface"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_toplevel","",56,[[["resizeedge"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["state"]],["bool"]]],[11,"eq","","",94,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"ne","","",94,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_popup","",60,[[["self"],["error"]],["bool"]]],[11,"eq","","",95,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",95,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewporter","",63,[[["self"],["error"]],["bool"]]],[11,"eq","","",96,[[["wpviewporter"],["self"]],["bool"]]],[11,"ne","","",96,[[["wpviewporter"],["self"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewport","",65,[[["self"],["error"]],["bool"]]],[11,"eq","","",98,[[["self"],["wpviewport"]],["bool"]]],[11,"ne","","",98,[[["self"],["wpviewport"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewporter","",67,[[["error"],["self"]],["bool"]]],[11,"eq","","",100,[[["self"],["wpviewporter"]],["bool"]]],[11,"ne","","",100,[[["self"],["wpviewporter"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewport","",69,[[["error"],["self"]],["bool"]]],[11,"eq","","",102,[[["wpviewport"],["self"]],["bool"]]],[11,"ne","","",102,[[["wpviewport"],["self"]],["bool"]]],[11,"partial_cmp","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["kind"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",75,[[["kind"],["self"]],["bool"]]],[11,"le","","",75,[[["kind"],["self"]],["bool"]]],[11,"gt","","",75,[[["kind"],["self"]],["bool"]]],[11,"ge","","",75,[[["kind"],["self"]],["bool"]]],[11,"partial_cmp","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["kind"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",79,[[["self"],["kind"]],["bool"]]],[11,"le","","",79,[[["self"],["kind"]],["bool"]]],[11,"gt","","",79,[[["self"],["kind"]],["bool"]]],[11,"ge","","",79,[[["self"],["kind"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["constraintadjustment"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",83,[[["constraintadjustment"],["self"]],["bool"]]],[11,"le","","",83,[[["constraintadjustment"],["self"]],["bool"]]],[11,"gt","","",83,[[["constraintadjustment"],["self"]],["bool"]]],[11,"ge","","",83,[[["constraintadjustment"],["self"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["constraintadjustment"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",90,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",90,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",90,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",90,[[["self"],["constraintadjustment"]],["bool"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_wm_base","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_surface","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_toplevel","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_popup","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_wm_base","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_surface","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_toplevel","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_popup","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewporter","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewport","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewporter","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewport","",69,[[["formatter"],["self"]],["result"]]],[11,"sub","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the set difference of the two sets of flags.",75,[[["kind"]],["kind"]]],[11,"sub","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the set difference of the two sets of flags.",79,[[["kind"]],["kind"]]],[11,"sub","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the set difference of the two sets of flags.",83,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the set difference of the two sets of flags.",90,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Disables all flags enabled in the set.",75,[[["self"],["kind"]]]],[11,"sub_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Disables all flags enabled in the set.",79,[[["self"],["kind"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags enabled in the set.",83,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags enabled in the set.",90,[[["constraintadjustment"],["self"]]]],[11,"not","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the complement of this set of flags.",75,[[],["kind"]]],[11,"not","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the complement of this set of flags.",79,[[],["kind"]]],[11,"not","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the complement of this set of flags.",83,[[],["constraintadjustment"]]],[11,"not","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the complement of this set of flags.",90,[[],["constraintadjustment"]]],[11,"bitand","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the intersection between the two sets of flags.",75,[[["kind"]],["kind"]]],[11,"bitand","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the intersection between the two sets of flags.",79,[[["kind"]],["kind"]]],[11,"bitand","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the intersection between the two sets of flags.",83,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the intersection between the two sets of flags.",90,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the union of the two sets of flags.",75,[[["kind"]],["kind"]]],[11,"bitor","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the union of the two sets of flags.",79,[[["kind"]],["kind"]]],[11,"bitor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the union of the two sets of flags.",83,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the union of the two sets of flags.",90,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the left flags, but with all the right flags…",75,[[["kind"]],["kind"]]],[11,"bitxor","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the left flags, but with all the right flags…",79,[[["kind"]],["kind"]]],[11,"bitxor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the left flags, but with all the right flags…",83,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the left flags, but with all the right flags…",90,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Disables all flags disabled in the set.",75,[[["self"],["kind"]]]],[11,"bitand_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Disables all flags disabled in the set.",79,[[["self"],["kind"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags disabled in the set.",83,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags disabled in the set.",90,[[["constraintadjustment"],["self"]]]],[11,"bitor_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Adds the set of flags.",75,[[["self"],["kind"]]]],[11,"bitor_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Adds the set of flags.",79,[[["self"],["kind"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Adds the set of flags.",83,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Adds the set of flags.",90,[[["constraintadjustment"],["self"]]]],[11,"bitxor_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Toggles the set of flags.",75,[[["self"],["kind"]]]],[11,"bitxor_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Toggles the set of flags.",79,[[["self"],["kind"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Toggles the set of flags.",83,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Toggles the set of flags.",90,[[["constraintadjustment"],["self"]]]],[11,"hash","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["__h"]]]],[11,"hash","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["__h"]]]],[11,"hash","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["self"],["__h"]]]],[11,"hash","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["__h"]]]],[11,"from_iter","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["intoiterator"]],["kind"]]],[11,"from_iter","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["intoiterator"]],["kind"]]],[11,"from_iter","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["intoiterator"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["intoiterator"]],["constraintadjustment"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",90,[[["self"],["formatter"]],["result"]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",14,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",15,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",16,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",17,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",72,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",19,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",20,[[]]],[11,"c_interface","wayland_protocols::presentation_time::client::wp_presentation","",74,[[]]],[11,"c_interface","wayland_protocols::presentation_time::client::wp_presentation_feedback","",76,[[]]],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation","",78,[[]]],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation_feedback","",80,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_wm_base","",82,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_positioner","",84,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_surface","",86,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_toplevel","",87,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_popup","",88,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_wm_base","",89,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_positioner","",91,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_surface","",93,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_toplevel","",94,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_popup","",95,[[]]],[11,"c_interface","wayland_protocols::viewporter::client::wp_viewporter","",96,[[]]],[11,"c_interface","wayland_protocols::viewporter::client::wp_viewport","",98,[[]]],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewporter","",100,[[]]],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewport","",102,[[]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",0,[[["self"]],["bool"]]],[11,"opcode","","",0,[[["self"]],["u16"]]],[11,"since","","",0,[[["self"]],["u32"]]],[11,"child","","",0,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",0,[[["message"]],["result"]]],[11,"into_raw","","",0,[[["u32"]],["message"]]],[11,"from_raw_c","","",0,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",0,[[["f"]],["t"]]],[11,"is_destructor","","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"since","","",71,[[["self"]],["u32"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",71,[[["message"]],["result"]]],[11,"into_raw","","",71,[[["u32"]],["message"]]],[11,"from_raw_c","","",71,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",71,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",1,[[["self"]],["bool"]]],[11,"opcode","","",1,[[["self"]],["u16"]]],[11,"since","","",1,[[["self"]],["u32"]]],[11,"child","","",1,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",1,[[["message"]],["result"]]],[11,"into_raw","","",1,[[["u32"]],["message"]]],[11,"from_raw_c","","",1,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",1,[[["f"]],["t"]]],[11,"is_destructor","","",2,[[["self"]],["bool"]]],[11,"opcode","","",2,[[["self"]],["u16"]]],[11,"since","","",2,[[["self"]],["u32"]]],[11,"child","","",2,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",2,[[["message"]],["result"]]],[11,"into_raw","","",2,[[["u32"]],["message"]]],[11,"from_raw_c","","",2,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",2,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",3,[[["self"]],["bool"]]],[11,"opcode","","",3,[[["self"]],["u16"]]],[11,"since","","",3,[[["self"]],["u32"]]],[11,"child","","",3,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",3,[[["message"]],["result"]]],[11,"into_raw","","",3,[[["u32"]],["message"]]],[11,"from_raw_c","","",3,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",3,[[["f"]],["t"]]],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"opcode","","",4,[[["self"]],["u16"]]],[11,"since","","",4,[[["self"]],["u32"]]],[11,"child","","",4,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",4,[[["message"]],["result"]]],[11,"into_raw","","",4,[[["u32"]],["message"]]],[11,"from_raw_c","","",4,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",4,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",5,[[["self"]],["bool"]]],[11,"opcode","","",5,[[["self"]],["u16"]]],[11,"since","","",5,[[["self"]],["u32"]]],[11,"child","","",5,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",5,[[["message"]],["result"]]],[11,"into_raw","","",5,[[["u32"]],["message"]]],[11,"from_raw_c","","",5,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",5,[[["f"]],["t"]]],[11,"is_destructor","","",6,[[["self"]],["bool"]]],[11,"opcode","","",6,[[["self"]],["u16"]]],[11,"since","","",6,[[["self"]],["u32"]]],[11,"child","","",6,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",6,[[["message"]],["result"]]],[11,"into_raw","","",6,[[["u32"]],["message"]]],[11,"from_raw_c","","",6,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",6,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",7,[[["self"]],["bool"]]],[11,"opcode","","",7,[[["self"]],["u16"]]],[11,"since","","",7,[[["self"]],["u32"]]],[11,"child","","",7,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",7,[[["message"]],["result"]]],[11,"into_raw","","",7,[[["u32"]],["message"]]],[11,"from_raw_c","","",7,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",7,[[["f"]],["t"]]],[11,"is_destructor","","",73,[[["self"]],["bool"]]],[11,"opcode","","",73,[[["self"]],["u16"]]],[11,"since","","",73,[[["self"]],["u32"]]],[11,"child","","",73,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",73,[[["message"]],["result"]]],[11,"into_raw","","",73,[[["u32"]],["message"]]],[11,"from_raw_c","","",73,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",73,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",8,[[["self"]],["bool"]]],[11,"opcode","","",8,[[["self"]],["u16"]]],[11,"since","","",8,[[["self"]],["u32"]]],[11,"child","","",8,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",8,[[["message"]],["result"]]],[11,"into_raw","","",8,[[["u32"]],["message"]]],[11,"from_raw_c","","",8,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",8,[[["f"]],["t"]]],[11,"is_destructor","","",9,[[["self"]],["bool"]]],[11,"opcode","","",9,[[["self"]],["u16"]]],[11,"since","","",9,[[["self"]],["u32"]]],[11,"child","","",9,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",9,[[["message"]],["result"]]],[11,"into_raw","","",9,[[["u32"]],["message"]]],[11,"from_raw_c","","",9,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",9,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",10,[[["self"]],["bool"]]],[11,"opcode","","",10,[[["self"]],["u16"]]],[11,"since","","",10,[[["self"]],["u32"]]],[11,"child","","",10,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",10,[[["message"]],["result"]]],[11,"into_raw","","",10,[[["u32"]],["message"]]],[11,"from_raw_c","","",10,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",10,[[["f"]],["t"]]],[11,"is_destructor","","",11,[[["self"]],["bool"]]],[11,"opcode","","",11,[[["self"]],["u16"]]],[11,"since","","",11,[[["self"]],["u32"]]],[11,"child","","",11,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",11,[[["message"]],["result"]]],[11,"into_raw","","",11,[[["u32"]],["message"]]],[11,"from_raw_c","","",11,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",11,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",12,[[["self"]],["bool"]]],[11,"opcode","","",12,[[["self"]],["u16"]]],[11,"since","","",12,[[["self"]],["u32"]]],[11,"child","","",12,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",12,[[["message"]],["result"]]],[11,"into_raw","","",12,[[["u32"]],["message"]]],[11,"from_raw_c","","",12,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",12,[[["f"]],["t"]]],[11,"is_destructor","","",13,[[["self"]],["bool"]]],[11,"opcode","","",13,[[["self"]],["u16"]]],[11,"since","","",13,[[["self"]],["u32"]]],[11,"child","","",13,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",13,[[["message"]],["result"]]],[11,"into_raw","","",13,[[["u32"]],["message"]]],[11,"from_raw_c","","",13,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",13,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"since","","",22,[[["self"]],["u32"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",22,[[["message"]],["result"]]],[11,"into_raw","","",22,[[["u32"]],["message"]]],[11,"from_raw_c","","",22,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",22,[[["f"]],["t"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"since","","",23,[[["self"]],["u32"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",23,[[["message"]],["result"]]],[11,"into_raw","","",23,[[["u32"]],["message"]]],[11,"from_raw_c","","",23,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",23,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation_feedback","",77,[[["self"]],["bool"]]],[11,"opcode","","",77,[[["self"]],["u16"]]],[11,"since","","",77,[[["self"]],["u32"]]],[11,"child","","",77,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",77,[[["message"]],["result"]]],[11,"into_raw","","",77,[[["u32"]],["message"]]],[11,"from_raw_c","","",77,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",77,[[["f"]],["t"]]],[11,"is_destructor","","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"since","","",24,[[["self"]],["u32"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",24,[[["message"]],["result"]]],[11,"into_raw","","",24,[[["u32"]],["message"]]],[11,"from_raw_c","","",24,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",24,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"since","","",26,[[["self"]],["u32"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",26,[[["message"]],["result"]]],[11,"into_raw","","",26,[[["u32"]],["message"]]],[11,"from_raw_c","","",26,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",26,[[["f"]],["t"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"since","","",27,[[["self"]],["u32"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",27,[[["message"]],["result"]]],[11,"into_raw","","",27,[[["u32"]],["message"]]],[11,"from_raw_c","","",27,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",27,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation_feedback","",81,[[["self"]],["bool"]]],[11,"opcode","","",81,[[["self"]],["u16"]]],[11,"since","","",81,[[["self"]],["u32"]]],[11,"child","","",81,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",81,[[["message"]],["result"]]],[11,"into_raw","","",81,[[["u32"]],["message"]]],[11,"from_raw_c","","",81,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",81,[[["f"]],["t"]]],[11,"is_destructor","","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"since","","",28,[[["self"]],["u32"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",28,[[["message"]],["result"]]],[11,"into_raw","","",28,[[["u32"]],["message"]]],[11,"from_raw_c","","",28,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",28,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_wm_base","",30,[[["self"]],["bool"]]],[11,"opcode","","",30,[[["self"]],["u16"]]],[11,"since","","",30,[[["self"]],["u32"]]],[11,"child","","",30,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",30,[[["message"]],["result"]]],[11,"into_raw","","",30,[[["u32"]],["message"]]],[11,"from_raw_c","","",30,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",30,[[["f"]],["t"]]],[11,"is_destructor","","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"since","","",31,[[["self"]],["u32"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",31,[[["message"]],["result"]]],[11,"into_raw","","",31,[[["u32"]],["message"]]],[11,"from_raw_c","","",31,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",31,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_positioner","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"since","","",35,[[["self"]],["u32"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",35,[[["message"]],["result"]]],[11,"into_raw","","",35,[[["u32"]],["message"]]],[11,"from_raw_c","","",35,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",35,[[["f"]],["t"]]],[11,"is_destructor","","",85,[[["self"]],["bool"]]],[11,"opcode","","",85,[[["self"]],["u16"]]],[11,"since","","",85,[[["self"]],["u32"]]],[11,"child","","",85,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",85,[[["message"]],["result"]]],[11,"into_raw","","",85,[[["u32"]],["message"]]],[11,"from_raw_c","","",85,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",85,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_surface","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"since","","",37,[[["self"]],["u32"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",37,[[["message"]],["result"]]],[11,"into_raw","","",37,[[["u32"]],["message"]]],[11,"from_raw_c","","",37,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",37,[[["f"]],["t"]]],[11,"is_destructor","","",38,[[["self"]],["bool"]]],[11,"opcode","","",38,[[["self"]],["u16"]]],[11,"since","","",38,[[["self"]],["u32"]]],[11,"child","","",38,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",38,[[["message"]],["result"]]],[11,"into_raw","","",38,[[["u32"]],["message"]]],[11,"from_raw_c","","",38,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",38,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_toplevel","",41,[[["self"]],["bool"]]],[11,"opcode","","",41,[[["self"]],["u16"]]],[11,"since","","",41,[[["self"]],["u32"]]],[11,"child","","",41,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",41,[[["message"]],["result"]]],[11,"into_raw","","",41,[[["u32"]],["message"]]],[11,"from_raw_c","","",41,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",41,[[["f"]],["t"]]],[11,"is_destructor","","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"since","","",42,[[["self"]],["u32"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",42,[[["message"]],["result"]]],[11,"into_raw","","",42,[[["u32"]],["message"]]],[11,"from_raw_c","","",42,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",42,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_popup","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"since","","",44,[[["self"]],["u32"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",44,[[["message"]],["result"]]],[11,"into_raw","","",44,[[["u32"]],["message"]]],[11,"from_raw_c","","",44,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",44,[[["f"]],["t"]]],[11,"is_destructor","","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"since","","",45,[[["self"]],["u32"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",45,[[["message"]],["result"]]],[11,"into_raw","","",45,[[["u32"]],["message"]]],[11,"from_raw_c","","",45,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",45,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_wm_base","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"since","","",47,[[["self"]],["u32"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",47,[[["message"]],["result"]]],[11,"into_raw","","",47,[[["u32"]],["message"]]],[11,"from_raw_c","","",47,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",47,[[["f"]],["t"]]],[11,"is_destructor","","",48,[[["self"]],["bool"]]],[11,"opcode","","",48,[[["self"]],["u16"]]],[11,"since","","",48,[[["self"]],["u32"]]],[11,"child","","",48,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",48,[[["message"]],["result"]]],[11,"into_raw","","",48,[[["u32"]],["message"]]],[11,"from_raw_c","","",48,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",48,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_positioner","",52,[[["self"]],["bool"]]],[11,"opcode","","",52,[[["self"]],["u16"]]],[11,"since","","",52,[[["self"]],["u32"]]],[11,"child","","",52,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",52,[[["message"]],["result"]]],[11,"into_raw","","",52,[[["u32"]],["message"]]],[11,"from_raw_c","","",52,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",52,[[["f"]],["t"]]],[11,"is_destructor","","",92,[[["self"]],["bool"]]],[11,"opcode","","",92,[[["self"]],["u16"]]],[11,"since","","",92,[[["self"]],["u32"]]],[11,"child","","",92,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",92,[[["message"]],["result"]]],[11,"into_raw","","",92,[[["u32"]],["message"]]],[11,"from_raw_c","","",92,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",92,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_surface","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"since","","",54,[[["self"]],["u32"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",54,[[["message"]],["result"]]],[11,"into_raw","","",54,[[["u32"]],["message"]]],[11,"from_raw_c","","",54,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",54,[[["f"]],["t"]]],[11,"is_destructor","","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"since","","",55,[[["self"]],["u32"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",55,[[["message"]],["result"]]],[11,"into_raw","","",55,[[["u32"]],["message"]]],[11,"from_raw_c","","",55,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",55,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_toplevel","",58,[[["self"]],["bool"]]],[11,"opcode","","",58,[[["self"]],["u16"]]],[11,"since","","",58,[[["self"]],["u32"]]],[11,"child","","",58,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",58,[[["message"]],["result"]]],[11,"into_raw","","",58,[[["u32"]],["message"]]],[11,"from_raw_c","","",58,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",58,[[["f"]],["t"]]],[11,"is_destructor","","",59,[[["self"]],["bool"]]],[11,"opcode","","",59,[[["self"]],["u16"]]],[11,"since","","",59,[[["self"]],["u32"]]],[11,"child","","",59,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",59,[[["message"]],["result"]]],[11,"into_raw","","",59,[[["u32"]],["message"]]],[11,"from_raw_c","","",59,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",59,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_popup","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"since","","",61,[[["self"]],["u32"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",61,[[["message"]],["result"]]],[11,"into_raw","","",61,[[["u32"]],["message"]]],[11,"from_raw_c","","",61,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",61,[[["f"]],["t"]]],[11,"is_destructor","","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"since","","",62,[[["self"]],["u32"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",62,[[["message"]],["result"]]],[11,"into_raw","","",62,[[["u32"]],["message"]]],[11,"from_raw_c","","",62,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",62,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewporter","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"since","","",64,[[["self"]],["u32"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",64,[[["message"]],["result"]]],[11,"into_raw","","",64,[[["u32"]],["message"]]],[11,"from_raw_c","","",64,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",64,[[["f"]],["t"]]],[11,"is_destructor","","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",97,[[["message"]],["result"]]],[11,"into_raw","","",97,[[["u32"]],["message"]]],[11,"from_raw_c","","",97,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",97,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewport","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"since","","",66,[[["self"]],["u32"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",66,[[["message"]],["result"]]],[11,"into_raw","","",66,[[["u32"]],["message"]]],[11,"from_raw_c","","",66,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",66,[[["f"]],["t"]]],[11,"is_destructor","","",99,[[["self"]],["bool"]]],[11,"opcode","","",99,[[["self"]],["u16"]]],[11,"since","","",99,[[["self"]],["u32"]]],[11,"child","","",99,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",99,[[["message"]],["result"]]],[11,"into_raw","","",99,[[["u32"]],["message"]]],[11,"from_raw_c","","",99,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",99,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewporter","",68,[[["self"]],["bool"]]],[11,"opcode","","",68,[[["self"]],["u16"]]],[11,"since","","",68,[[["self"]],["u32"]]],[11,"child","","",68,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",68,[[["message"]],["result"]]],[11,"into_raw","","",68,[[["u32"]],["message"]]],[11,"from_raw_c","","",68,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",68,[[["f"]],["t"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",101,[[["message"]],["result"]]],[11,"into_raw","","",101,[[["u32"]],["message"]]],[11,"from_raw_c","","",101,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",101,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewport","",70,[[["self"]],["bool"]]],[11,"opcode","","",70,[[["self"]],["u16"]]],[11,"since","","",70,[[["self"]],["u32"]]],[11,"child","","",70,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",70,[[["message"]],["result"]]],[11,"into_raw","","",70,[[["u32"]],["message"]]],[11,"from_raw_c","","",70,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",70,[[["f"]],["t"]]],[11,"is_destructor","","",103,[[["self"]],["bool"]]],[11,"opcode","","",103,[[["self"]],["u16"]]],[11,"since","","",103,[[["self"]],["u32"]]],[11,"child","","",103,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",103,[[["message"]],["result"]]],[11,"into_raw","","",103,[[["u32"]],["message"]]],[11,"from_raw_c","","",103,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",103,[[["f"]],["t"]]],[11,"from_raw","wayland_protocols::presentation_time::client::wp_presentation","",21,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",21,[[["self"]],["u32"]]],[11,"destroy","","unbind from the presentation interface",74,[[["self"]]]],[11,"feedback","","request presentation feedback information",74,[[["wlsurface"],["self"]],[["wppresentationfeedback"],["main",["wppresentationfeedback"]]]]],[18,"Vsync","wayland_protocols::presentation_time::client::wp_presentation_feedback","presentation was vsync'd",75,null],[18,"HwClock","","hardware provided the presentation timestamp",75,null],[18,"HwCompletion","","hardware signalled the start of the presentation",75,null],[18,"ZeroCopy","","presentation was done zero-copy",75,null],[11,"empty","","Returns an empty set of flags",75,[[],["kind"]]],[11,"all","","Returns the set containing all flags.",75,[[],["kind"]]],[11,"bits","","Returns the raw value of the flags currently stored.",75,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",75,[[["u32"]],[["kind"],["option",["kind"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",75,[[["u32"]],["kind"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",75,[[["u32"]],["kind"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",75,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",75,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",75,[[["self"],["kind"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",75,[[["self"],["kind"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",75,[[["self"],["kind"]]]],[11,"remove","","Removes the specified flags in-place.",75,[[["self"],["kind"]]]],[11,"toggle","","Toggles the specified flags in-place.",75,[[["self"],["kind"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",75,[[["self"],["kind"],["bool"]]]],[11,"from_raw","","",75,[[["u32"]],[["option",["kind"]],["kind"]]]],[11,"to_raw","","",75,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::presentation_time::server::wp_presentation","",25,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",25,[[["self"]],["u32"]]],[11,"clock_id","","clock ID for timestamps",78,[[["u32"],["self"]]]],[18,"Vsync","wayland_protocols::presentation_time::server::wp_presentation_feedback","presentation was vsync'd",79,null],[18,"HwClock","","hardware provided the presentation timestamp",79,null],[18,"HwCompletion","","hardware signalled the start of the presentation",79,null],[18,"ZeroCopy","","presentation was done zero-copy",79,null],[11,"empty","","Returns an empty set of flags",79,[[],["kind"]]],[11,"all","","Returns the set containing all flags.",79,[[],["kind"]]],[11,"bits","","Returns the raw value of the flags currently stored.",79,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",79,[[["u32"]],[["option",["kind"]],["kind"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",79,[[["u32"]],["kind"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",79,[[["u32"]],["kind"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",79,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",79,[[["self"],["kind"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",79,[[["self"],["kind"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",79,[[["self"],["kind"]]]],[11,"remove","","Removes the specified flags in-place.",79,[[["self"],["kind"]]]],[11,"toggle","","Toggles the specified flags in-place.",79,[[["self"],["kind"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",79,[[["bool"],["self"],["kind"]]]],[11,"from_raw","","",79,[[["u32"]],[["option",["kind"]],["kind"]]]],[11,"to_raw","","",79,[[["self"]],["u32"]]],[11,"sync_output","","presentation synchronized to this output",80,[[["self"],["wloutput"]]]],[11,"presented","","the content update was displayed",80,[[["u32"],["self"]]]],[11,"discarded","","the content update was not displayed",80,[[["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_wm_base","",29,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",29,[[["self"]],["u32"]]],[11,"destroy","","destroy xdg_wm_base",82,[[["self"]]]],[11,"create_positioner","","create a positioner object",82,[[["self"]],[["main",["xdgpositioner"]],["xdgpositioner"]]]],[11,"get_xdg_surface","","create a shell surface from a surface",82,[[["wlsurface"],["self"]],[["xdgsurface"],["main",["xdgsurface"]]]]],[11,"pong","","respond to a ping event",82,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_positioner","",32,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",32,[[["self"]],["u32"]]],[11,"from_raw","","",33,[[["u32"]],[["option",["anchor"]],["anchor"]]]],[11,"to_raw","","",33,[[["self"]],["u32"]]],[11,"from_raw","","",34,[[["u32"]],[["gravity"],["option",["gravity"]]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",83,null],[18,"SlideX","","move along the x axis until unconstrained",83,null],[18,"SlideY","","move along the y axis until unconstrained",83,null],[18,"FlipX","","invert the anchor and gravity on the x axis",83,null],[18,"FlipY","","invert the anchor and gravity on the y axis",83,null],[18,"ResizeX","","horizontally resize the surface",83,null],[18,"ResizeY","","vertically resize the surface",83,null],[11,"empty","","Returns an empty set of flags",83,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",83,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",83,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",83,[[["u32"]],[["option",["constraintadjustment"]],["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",83,[[["u32"]],["constraintadjustment"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",83,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",83,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",83,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",83,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",83,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",83,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",83,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",83,[[["bool"],["self"],["constraintadjustment"]]]],[11,"from_raw","","",83,[[["u32"]],[["option",["constraintadjustment"]],["constraintadjustment"]]]],[11,"to_raw","","",83,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_positioner object",84,[[["self"]]]],[11,"set_size","","set the size of the to-be positioned rectangle",84,[[["self"],["i32"]]]],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",84,[[["self"],["i32"]]]],[11,"set_anchor","","set anchor rectangle anchor",84,[[["anchor"],["self"]]]],[11,"set_gravity","","set child surface gravity",84,[[["gravity"],["self"]]]],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",84,[[["u32"],["self"]]]],[11,"set_offset","","set surface position offset",84,[[["self"],["i32"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_surface","",36,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",36,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_surface",86,[[["self"]]]],[11,"get_toplevel","","assign the xdg_toplevel surface role",86,[[["self"]],[["main",["xdgtoplevel"]],["xdgtoplevel"]]]],[11,"get_popup","","assign the xdg_popup surface role",86,[[["xdgpositioner"],["xdgsurface"],["self"],["option",["xdgsurface"]]],[["main",["xdgpopup"]],["xdgpopup"]]]],[11,"set_window_geometry","","set the new window geometry",86,[[["self"],["i32"]]]],[11,"ack_configure","","ack a configure event",86,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_toplevel","",39,[[["u32"]],[["resizeedge"],["option",["resizeedge"]]]]],[11,"to_raw","","",39,[[["self"]],["u32"]]],[11,"from_raw","","",40,[[["u32"]],[["state"],["option",["state"]]]]],[11,"to_raw","","",40,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_toplevel",87,[[["self"]]]],[11,"set_parent","","set the parent of this surface",87,[[["xdgtoplevel"],["option",["xdgtoplevel"]],["self"]]]],[11,"set_title","","set surface title",87,[[["string"],["self"]]]],[11,"set_app_id","","set application ID",87,[[["string"],["self"]]]],[11,"show_window_menu","","show the window menu",87,[[["u32"],["i32"],["wlseat"],["self"]]]],[11,"_move","","start an interactive move",87,[[["wlseat"],["self"],["u32"]]]],[11,"resize","","start an interactive resize",87,[[["resizeedge"],["u32"],["wlseat"],["self"]]]],[11,"set_max_size","","set the maximum size",87,[[["self"],["i32"]]]],[11,"set_min_size","","set the minimum size",87,[[["self"],["i32"]]]],[11,"set_maximized","","maximize the window",87,[[["self"]]]],[11,"unset_maximized","","unmaximize the window",87,[[["self"]]]],[11,"set_fullscreen","","set the window as fullscreen on an output",87,[[["option",["wloutput"]],["wloutput"],["self"]]]],[11,"unset_fullscreen","","unset the window as fullscreen",87,[[["self"]]]],[11,"set_minimized","","set the window as minimized",87,[[["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_popup","",43,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",43,[[["self"]],["u32"]]],[11,"destroy","","remove xdg_popup interface",88,[[["self"]]]],[11,"grab","","make the popup take an explicit grab",88,[[["wlseat"],["self"],["u32"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_wm_base","",46,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"ping","","check if the client is alive",89,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_positioner","",49,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[11,"from_raw","","",50,[[["u32"]],[["anchor"],["option",["anchor"]]]]],[11,"to_raw","","",50,[[["self"]],["u32"]]],[11,"from_raw","","",51,[[["u32"]],[["gravity"],["option",["gravity"]]]]],[11,"to_raw","","",51,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",90,null],[18,"SlideX","","move along the x axis until unconstrained",90,null],[18,"SlideY","","move along the y axis until unconstrained",90,null],[18,"FlipX","","invert the anchor and gravity on the x axis",90,null],[18,"FlipY","","invert the anchor and gravity on the y axis",90,null],[18,"ResizeX","","horizontally resize the surface",90,null],[18,"ResizeY","","vertically resize the surface",90,null],[11,"empty","","Returns an empty set of flags",90,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",90,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",90,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",90,[[["u32"]],[["option",["constraintadjustment"]],["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",90,[[["u32"]],["constraintadjustment"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",90,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",90,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",90,[[["constraintadjustment"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",90,[[["constraintadjustment"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",90,[[["constraintadjustment"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",90,[[["constraintadjustment"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",90,[[["constraintadjustment"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",90,[[["constraintadjustment"],["self"],["bool"]]]],[11,"from_raw","","",90,[[["u32"]],[["constraintadjustment"],["option",["constraintadjustment"]]]]],[11,"to_raw","","",90,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_surface","",53,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",53,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",93,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_toplevel","",56,[[["u32"]],[["resizeedge"],["option",["resizeedge"]]]]],[11,"to_raw","","",56,[[["self"]],["u32"]]],[11,"from_raw","","",57,[[["u32"]],[["option",["state"]],["state"]]]],[11,"to_raw","","",57,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",94,[[["i32"],["vec",["u8"]],["self"],["u8"]]]],[11,"close","","surface wants to be closed",94,[[["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_popup","",60,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",60,[[["self"]],["u32"]]],[11,"configure","","configure the popup surface",95,[[["self"],["i32"]]]],[11,"popup_done","","popup interaction is done",95,[[["self"]]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewporter","",63,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"destroy","","unbind from the cropping and scaling interface",96,[[["self"]]]],[11,"get_viewport","","extend surface interface for crop and scale",96,[[["wlsurface"],["self"]],[["main",["wpviewport"]],["wpviewport"]]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewport","",65,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"destroy","","remove scaling and cropping from the surface",98,[[["self"]]]],[11,"set_source","","set the source rectangle for cropping",98,[[["f64"],["self"]]]],[11,"set_destination","","set the surface size for scaling",98,[[["self"],["i32"]]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewporter","",67,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",67,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewport","",69,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",69,[[["self"]],["u32"]]]],"p":[[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[4,"Event"],[3,"WpPresentation"],[3,"Kind"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"WpPresentation"],[3,"Kind"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"]]};
searchIndex["wayland_scanner"] = {"doc":"Wayland scanner crate","i":[[4,"Side","wayland_scanner","Side to generate",null,null],[13,"Client","","wayland client applications",0,null],[13,"Server","","wayland compositors",0,null],[5,"generate_code","","Generate the code for a protocol using the C system libs",null,[[["path"],["asref",["path"]],["side"]]]],[5,"generate_code_with_destructor_events","","Generate the code for a protocol with aditionnal…",null,[[["path"],["asref",["path"]],["side"]]]],[5,"generate_code_streams","","Generate the code for a protocol from/to IO streams",null,[[["p2"],["read"],["side"]]]],[5,"generate_code_streams_with_destructor_events","","Generate the code for a protocol from/to IO streams with…",null,[[["p2"],["read"],["side"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["side"]]],[11,"eq","","",0,[[["self"],["side"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"Side"]]};
searchIndex["wayland_server"] = {"doc":"Server-side Wayland connector","i":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of…",null,null],[3,"DispatchData","","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,[[]]],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,null],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",1,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[["u16"],["u32"],["meta"]],[["option",["object"]],["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,[[["message"]],["result"]]],[10,"into_raw","","Turn this message into its raw representation",1,[[["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,[[["u32"]],["result"]]],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Client","","A handle to a client connected to your server",null,null],[3,"Display","","The wayland display",null,null],[3,"Global","","A handle to a global object",null,null],[3,"Main","","A main handle to a proxy",null,null],[3,"Resource","","An handle to a wayland resource",null,null],[3,"AnonymousObject","","Anonymous interface",null,null],[3,"ResourceMap","","A handle to the object map internal to the library state",null,null],[11,"alive","","Checks whether this client is still connected to the server",2,[[["self"]],["bool"]]],[11,"equals","","Checks whether `self` and `other` refer to the same client",2,[[["client"],["self"]],["bool"]]],[11,"flush","","Flushes the pending events to this client",2,[[["self"]]]],[11,"kill","","Kills this client",2,[[["self"]]]],[11,"data_map","","Returns a reference to the `UserDataMap` associated with…",2,[[["self"]],["userdatamap"]]],[11,"add_destructor","","Adds a destructor for this client",2,[[["arc",["userdatamap"]],["self"],["filter",["arc"]]]]],[11,"create_resource","","Creates a new resource for this client",2,[[["u32"],["self"]],[["option",["main"]],["main"]]]],[11,"new","","Create a new display",3,[[],["display"]]],[11,"create_global","","Create a new global object",3,[[["self"],["u32"],["filter"]],["global"]]],[11,"create_global_with_filter","","Create a new global object with a client filter",3,[[["u32"],["self"],["f"],["filter"]],["global"]]],[11,"flush_clients","","Flush events to the clients",3,[[["self"],["t"]]]],[11,"dispatch","","Dispatches all pending messages to their respective filters",3,[[["self"],["t"],["duration"]],["ioresult"]]],[11,"get_poll_fd","","Retrieve the underlying file descriptor",3,[[["self"]],["rawfd"]]],[11,"add_socket","","Add a listening socket to this display",3,[[["self"],["option"]],["ioresult"]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",3,[[["self"]],[["osstring"],["ioresult",["osstring"]]]]],[11,"add_socket_from","","Add existing listening socket to this display",3,[[["self"],["t"]],["ioresult"]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw…",3,[[["self"],["rawfd"]],["ioresult"]]],[11,"create_client","","Create a new client to this display from an…",3,[[["self"],["t"],["rawfd"]],["client"]]],[11,"destroy","","Destroys the associated global object.",4,[[]]],[11,"send","","Send an event through this object",5,[[["self"]]]],[11,"is_alive","","Check if the object associated with this resource is still…",5,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object…",5,[[["self"]],["u32"]]],[11,"equals","","Check if the other resource refers to the same underlying…",5,[[["self"],["resource"]],["bool"]]],[11,"same_client_as","","Check if this resource and the other belong to the same…",5,[[["resource"],["self"]],["bool"]]],[11,"post_error","","Posts a protocol error to this resource",5,[[["u32"],["self"],["string"]]]],[11,"user_data","","Access the UserData associated to this object",5,[[["self"]],["userdata"]]],[11,"client","","Retrieve an handle to the client associated with this…",5,[[["self"]],[["client"],["option",["client"]]]]],[11,"id","","Retrieve the object id of this wayland object",5,[[["self"]],["u32"]]],[11,"is_external","","Check whether this resource is managed by the library or not",5,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",5,[[["self"]]]],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",5,[[],["self"]]],[11,"assign","","Assign this object to given filter",6,[[["self"],["filter"]]]],[11,"quick_assign","","Shorthand for assigning a closure to an object",6,[[["self"],["f"]]]],[11,"assign_destructor","","Assign a destructor to this object",6,[[["self"],["filter"]]]],[11,"init_from_c_ptr","","Create a `Main` instance from a C pointer to a new object",6,[[],["self"]]],[0,"sys","","C-associated types",null,null],[0,"common","wayland_server::sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_server::sys::common","",null,null],[12,"name","","",7,null],[12,"signature","","",7,null],[12,"types","","",7,null],[3,"wl_interface","","",null,null],[12,"name","","",8,null],[12,"version","","",8,null],[12,"request_count","","",8,null],[12,"requests","","",8,null],[12,"event_count","","",8,null],[12,"events","","",8,null],[3,"wl_list","","",null,null],[12,"prev","","",9,null],[12,"next","","",9,null],[3,"wl_array","","",null,null],[12,"size","","",10,null],[12,"alloc","","",10,null],[12,"data","","",10,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",null,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",null,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",null,[[["i32"]],["i32"]]],[19,"wl_argument","","",null,null],[12,"i","","",11,null],[12,"u","","",11,null],[12,"f","","",11,null],[12,"s","","",11,null],[12,"o","","",11,null],[12,"n","","",11,null],[12,"a","","",11,null],[12,"h","","",11,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",null,null],[4,"wl_client","wayland_server::sys::server","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[3,"wl_listener","","",null,null],[12,"link","","",12,null],[12,"notify","","",12,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",13,null],[11,"get","wayland_server","Returns the `Resource` corresponding to a given id",14,[[["self"],["u32"]],[["resource"],["option",["resource"]]]]],[11,"get_new","","Creates a `NewResource` for a given id",14,[[["self"],["u32"]],[["option",["main"]],["main"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",15,null],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",15,null],[7,"wl_callback_events","wayland_server::protocol::wl_callback","C-representation of the messages of this interface, for…",null,null],[7,"wl_callback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[11,"done","","done event",16,[[["u32"],["self"]]]],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",17,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",17,null],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",17,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",17,null],[4,"Event","wayland_server::protocol::wl_compositor","",null,null],[7,"wl_compositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_compositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",18,null],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",18,null],[12,"offset","","",18,null],[12,"width","","",18,null],[12,"height","","",18,null],[12,"stride","","",18,null],[12,"format","","",18,null],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",18,null],[13,"Resize","","change the size of the pool mapping",18,null],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",18,null],[4,"Event","wayland_server::protocol::wl_shm_pool","",null,null],[7,"wl_shm_pool_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_pool_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",19,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",19,null],[13,"InvalidFd","","mmapping the file descriptor failed",19,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",20,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",20,null],[13,"C8","","8-bit color index format, [7:0] C",20,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",20,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",20,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",20,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",20,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",20,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",20,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",20,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",20,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",20,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",20,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",20,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",20,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",20,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",20,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",20,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",20,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",20,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",20,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",20,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",20,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",20,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",20,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",20,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",20,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",20,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",20,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",20,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",20,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",20,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",20,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",20,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",20,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",20,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",20,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",20,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",20,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",20,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",20,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",20,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",20,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",20,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",20,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",20,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",20,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",20,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",20,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",20,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",20,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",20,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",20,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",20,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",20,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",20,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",20,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",20,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",21,null],[12,"id","wayland_server::protocol::wl_shm::Request","",21,null],[12,"fd","","",21,null],[12,"size","","",21,null],[4,"Event","wayland_server::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",22,null],[12,"format","wayland_server::protocol::wl_shm::Event","",22,null],[7,"wl_shm_requests","wayland_server::protocol::wl_shm","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_POOL_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",19,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",19,[[["self"]],["u32"]]],[11,"from_raw","","",20,[[["u32"]],[["format"],["option",["format"]]]]],[11,"to_raw","","",20,[[["self"]],["u32"]]],[11,"format","","pixel format description",23,[[["format"],["self"]]]],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",24,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",25,null],[7,"wl_buffer_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[11,"release","","compositor releases buffer",26,[[["self"]]]],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",27,null],[13,"InvalidActionMask","","action mask contains invalid values",27,null],[13,"InvalidAction","","action argument has an invalid value",27,null],[13,"InvalidOffer","","offer doesn't accept this request",27,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",28,null],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",28,null],[12,"mime_type","","",28,null],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",28,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",28,null],[12,"fd","","",28,null],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",28,null],[13,"Finish","","the offer will no longer be used",28,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",28,null],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",28,null],[12,"preferred_action","","",28,null],[4,"Event","wayland_server::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",29,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",29,null],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",29,null],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",29,null],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",29,null],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",29,null],[7,"wl_data_offer_requests","wayland_server::protocol::wl_data_offer","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_ACCEPT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",27,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",27,[[["self"]],["u32"]]],[11,"offer","","advertise offered mime type",30,[[["string"],["self"]]]],[11,"source_actions","","notify the source-side available actions",30,[[["u32"],["self"]]]],[11,"action","","notify the selected action",30,[[["u32"],["self"]]]],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",31,null],[13,"InvalidSource","","source doesn't accept this request",31,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",32,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",32,null],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",32,null],[13,"SetActions","","set the available drag-and-drop actions",32,null],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",32,null],[4,"Event","wayland_server::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",33,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",33,null],[13,"Send","wayland_server::protocol::wl_data_source","send the data",33,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",33,null],[12,"fd","","",33,null],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",33,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",33,null],[13,"DndFinished","","the drag-and-drop operation concluded",33,null],[13,"Action","","notify the selected action",33,null],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",33,null],[7,"wl_data_source_requests","wayland_server::protocol::wl_data_source","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",31,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",31,[[["self"]],["u32"]]],[11,"target","","a target accepts an offered mime type",34,[[["string"],["self"],["option",["string"]]]]],[11,"send","","send the data",34,[[["string"],["self"],["rawfd"]]]],[11,"cancelled","","selection was cancelled",34,[[["self"]]]],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",34,[[["self"]]]],[11,"dnd_finished","","the drag-and-drop operation concluded",34,[[["self"]]]],[11,"action","","notify the selected action",34,[[["u32"],["self"]]]],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",35,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",36,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",36,null],[12,"origin","","",36,null],[12,"icon","","",36,null],[12,"serial","","",36,null],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",36,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",36,null],[12,"serial","","",36,null],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",36,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",37,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",37,null],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",37,null],[12,"serial","wayland_server::protocol::wl_data_device::Event","",37,null],[12,"surface","","",37,null],[12,"x","","",37,null],[12,"y","","",37,null],[12,"id","","",37,null],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",37,null],[13,"Motion","","drag-and-drop session motion",37,null],[12,"time","wayland_server::protocol::wl_data_device::Event","",37,null],[12,"x","","",37,null],[12,"y","","",37,null],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",37,null],[13,"Selection","","advertise new selection",37,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",37,null],[7,"wl_data_device_requests","wayland_server::protocol::wl_data_device","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_START_DRAG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",35,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",35,[[["self"]],["u32"]]],[11,"data_offer","","introduce a new wl_data_offer",38,[[["self"],["wldataoffer"]]]],[11,"enter","","initiate drag-and-drop session",38,[[["wldataoffer"],["u32"],["option",["wldataoffer"]],["f64"],["self"],["wlsurface"]]]],[11,"leave","","end drag-and-drop session",38,[[["self"]]]],[11,"motion","","drag-and-drop session motion",38,[[["u32"],["f64"],["self"]]]],[11,"drop","","end drag-and-drop session successfully",38,[[["self"]]]],[11,"selection","","advertise new selection",38,[[["option",["wldataoffer"]],["self"],["wldataoffer"]]]],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",39,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",39,null],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",39,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",39,null],[12,"seat","","",39,null],[4,"Event","wayland_server::protocol::wl_data_device_manager","",null,null],[7,"wl_data_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[18,"None","","no action",40,null],[18,"Copy","","copy action",40,null],[18,"Move","","move action",40,null],[18,"Ask","","ask action",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",40,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",40,[[["u32"]],[["dndaction"],["option",["dndaction"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",40,[[["u32"]],["dndaction"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",40,[[["dndaction"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",40,[[["dndaction"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["dndaction"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["dndaction"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["dndaction"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",40,[[["dndaction"],["self"],["bool"]]]],[11,"from_raw","","",40,[[["u32"]],[["option",["dndaction"]],["dndaction"]]]],[11,"to_raw","","",40,[[["self"]],["u32"]]],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",41,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",42,null],[12,"id","wayland_server::protocol::wl_shell::Request","",42,null],[12,"surface","","",42,null],[4,"Event","wayland_server::protocol::wl_shell","",null,null],[7,"wl_shell_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",41,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",41,[[["self"]],["u32"]]],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",43,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on…",43,null],[13,"Driver","","switch output mode to the smallest mode that can fit the…",43,null],[13,"Fill","","no upscaling, center on output and add black borders to…",43,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",44,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",44,null],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",44,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",44,null],[12,"serial","","",44,null],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",44,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",44,null],[12,"serial","","",44,null],[12,"edges","","",44,null],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",44,null],[13,"SetTransient","","make the surface a transient surface",44,null],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",44,null],[12,"x","","",44,null],[12,"y","","",44,null],[12,"flags","","",44,null],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",44,null],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",44,null],[12,"framerate","","",44,null],[12,"output","","",44,null],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",44,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",44,null],[12,"serial","","",44,null],[12,"parent","","",44,null],[12,"x","","",44,null],[12,"y","","",44,null],[12,"flags","","",44,null],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",44,null],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",44,null],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",44,null],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",44,null],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",44,null],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",44,null],[4,"Event","wayland_server::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",45,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",45,null],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",45,null],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",45,null],[12,"width","","",45,null],[12,"height","","",45,null],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",45,null],[7,"wl_shell_surface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[18,"None","","no edge",46,null],[18,"Top","","top edge",46,null],[18,"Bottom","","bottom edge",46,null],[18,"Left","","left edge",46,null],[18,"TopLeft","","top and left edges",46,null],[18,"BottomLeft","","bottom and left edges",46,null],[18,"Right","","right edge",46,null],[18,"TopRight","","top and right edges",46,null],[18,"BottomRight","","bottom and right edges",46,null],[11,"empty","","Returns an empty set of flags",46,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",46,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",46,[[["u32"]],[["option",["resize"]],["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",46,[[["u32"]],["resize"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",46,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",46,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",46,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",46,[[["self"],["resize"],["bool"]]]],[11,"from_raw","","",46,[[["u32"]],[["option",["resize"]],["resize"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",47,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",47,[[["u32"]],[["option",["transient"]],["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",47,[[["u32"]],["transient"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",47,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",47,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",47,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",47,[[["bool"],["self"],["transient"]]]],[11,"from_raw","","",47,[[["u32"]],[["option",["transient"]],["transient"]]]],[11,"to_raw","","",47,[[["self"]],["u32"]]],[11,"from_raw","","",43,[[["u32"]],[["fullscreenmethod"],["option",["fullscreenmethod"]]]]],[11,"to_raw","","",43,[[["self"]],["u32"]]],[11,"ping","","ping client",48,[[["u32"],["self"]]]],[11,"configure","","suggest resize",48,[[["resize"],["i32"],["self"]]]],[11,"popup_done","","popup interaction is done",48,[[["self"]]]],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",49,null],[13,"InvalidTransform","","buffer transform value is invalid",49,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",50,null],[13,"Attach","","set the surface contents",50,null],[12,"buffer","wayland_server::protocol::wl_surface::Request","",50,null],[12,"x","","",50,null],[12,"y","","",50,null],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",50,null],[12,"x","wayland_server::protocol::wl_surface::Request","",50,null],[12,"y","","",50,null],[12,"width","","",50,null],[12,"height","","",50,null],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",50,null],[12,"callback","wayland_server::protocol::wl_surface::Request","",50,null],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",50,null],[12,"region","wayland_server::protocol::wl_surface::Request","",50,null],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",50,null],[12,"region","wayland_server::protocol::wl_surface::Request","",50,null],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",50,null],[13,"SetBufferTransform","","sets the buffer transformation",50,null],[12,"transform","wayland_server::protocol::wl_surface::Request","",50,null],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",50,null],[12,"scale","wayland_server::protocol::wl_surface::Request","",50,null],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",50,null],[12,"x","wayland_server::protocol::wl_surface::Request","",50,null],[12,"y","","",50,null],[12,"width","","",50,null],[12,"height","","",50,null],[4,"Event","wayland_server::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",51,null],[12,"output","wayland_server::protocol::wl_surface::Event","",51,null],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",51,null],[12,"output","wayland_server::protocol::wl_surface::Event","",51,null],[7,"wl_surface_requests","wayland_server::protocol::wl_surface","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",49,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",49,[[["self"]],["u32"]]],[11,"enter","","surface enters an output",52,[[["wloutput"],["self"]]]],[11,"leave","","surface leaves an output",52,[[["wloutput"],["self"]]]],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",53,null],[12,"id","wayland_server::protocol::wl_seat::Request","",53,null],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",53,null],[12,"id","wayland_server::protocol::wl_seat::Request","",53,null],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",53,null],[12,"id","wayland_server::protocol::wl_seat::Request","",53,null],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",53,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",54,null],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",54,null],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",54,null],[12,"name","wayland_server::protocol::wl_seat::Event","",54,null],[7,"wl_seat_requests","wayland_server::protocol::wl_seat","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_POINTER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[18,"Pointer","","the seat has pointer devices",55,null],[18,"Keyboard","","the seat has one or more keyboards",55,null],[18,"Touch","","the seat has touch devices",55,null],[11,"empty","","Returns an empty set of flags",55,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",55,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",55,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",55,[[["u32"]],[["option",["capability"]],["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",55,[[["u32"]],["capability"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",55,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",55,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",55,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",55,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",55,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",55,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",55,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",55,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",55,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",55,[[["u32"]],[["option",["capability"]],["capability"]]]],[11,"to_raw","","",55,[[["self"]],["u32"]]],[11,"capabilities","","seat capabilities changed",56,[[["self"],["capability"]]]],[11,"name","","unique identifier for this seat",56,[[["string"],["self"]]]],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",57,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",58,null],[13,"Pressed","","the button is pressed",58,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",59,null],[13,"HorizontalScroll","","horizontal axis",59,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel rotation",60,null],[13,"Finger","","finger on a touch surface",60,null],[13,"Continuous","","continuous coordinate space",60,null],[13,"WheelTilt","","a physical wheel tilt",60,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",61,null],[12,"serial","wayland_server::protocol::wl_pointer::Request","",61,null],[12,"surface","","",61,null],[12,"hotspot_x","","",61,null],[12,"hotspot_y","","",61,null],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",61,null],[4,"Event","","",null,null],[13,"Enter","","enter event",62,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"surface","","",62,null],[12,"surface_x","","",62,null],[12,"surface_y","","",62,null],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",62,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"surface","","",62,null],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",62,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"surface_x","","",62,null],[12,"surface_y","","",62,null],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",62,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"time","","",62,null],[12,"button","","",62,null],[12,"state","","",62,null],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",62,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"axis","","",62,null],[12,"value","","",62,null],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",62,null],[13,"AxisSource","","axis source event",62,null],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",62,null],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",62,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"axis","","",62,null],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",62,null],[12,"axis","wayland_server::protocol::wl_pointer::Event","",62,null],[12,"discrete","","",62,null],[7,"wl_pointer_requests","wayland_server::protocol::wl_pointer","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",57,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",57,[[["self"]],["u32"]]],[11,"from_raw","","",58,[[["u32"]],[["buttonstate"],["option",["buttonstate"]]]]],[11,"to_raw","","",58,[[["self"]],["u32"]]],[11,"from_raw","","",59,[[["u32"]],[["axis"],["option",["axis"]]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"from_raw","","",60,[[["u32"]],[["option",["axissource"]],["axissource"]]]],[11,"to_raw","","",60,[[["self"]],["u32"]]],[11,"enter","","enter event",63,[[["u32"],["f64"],["self"],["wlsurface"]]]],[11,"leave","","leave event",63,[[["u32"],["self"],["wlsurface"]]]],[11,"motion","","pointer motion event",63,[[["u32"],["f64"],["self"]]]],[11,"button","","pointer button event",63,[[["u32"],["self"],["buttonstate"]]]],[11,"axis","","axis event",63,[[["u32"],["f64"],["self"],["axis"]]]],[11,"frame","","end of a pointer event sequence",63,[[["self"]]]],[11,"axis_source","","axis source event",63,[[["self"],["axissource"]]]],[11,"axis_stop","","axis stop event",63,[[["u32"],["self"],["axis"]]]],[11,"axis_discrete","","axis click event",63,[[["i32"],["self"],["axis"]]]],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",64,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",64,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",65,null],[13,"Pressed","","key is pressed",65,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",66,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",67,null],[12,"format","wayland_server::protocol::wl_keyboard::Event","",67,null],[12,"fd","","",67,null],[12,"size","","",67,null],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",67,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",67,null],[12,"surface","","",67,null],[12,"keys","","",67,null],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",67,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",67,null],[12,"surface","","",67,null],[13,"Key","wayland_server::protocol::wl_keyboard","key event",67,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",67,null],[12,"time","","",67,null],[12,"key","","",67,null],[12,"state","","",67,null],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",67,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",67,null],[12,"mods_depressed","","",67,null],[12,"mods_latched","","",67,null],[12,"mods_locked","","",67,null],[12,"group","","",67,null],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",67,null],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",67,null],[12,"delay","","",67,null],[7,"wl_keyboard_requests","wayland_server::protocol::wl_keyboard","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",64,[[["u32"]],[["option",["keymapformat"]],["keymapformat"]]]],[11,"to_raw","","",64,[[["self"]],["u32"]]],[11,"from_raw","","",65,[[["u32"]],[["keystate"],["option",["keystate"]]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"keymap","","keyboard mapping",68,[[["u32"],["rawfd"],["self"],["keymapformat"]]]],[11,"enter","","enter event",68,[[["u8"],["u32"],["vec",["u8"]],["self"],["wlsurface"]]]],[11,"leave","","leave event",68,[[["u32"],["self"],["wlsurface"]]]],[11,"key","","key event",68,[[["keystate"],["u32"],["self"]]]],[11,"modifiers","","modifier and group state",68,[[["u32"],["self"]]]],[11,"repeat_info","","repeat rate and delay",68,[[["self"],["i32"]]]],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",69,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",70,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",70,null],[12,"time","","",70,null],[12,"surface","","",70,null],[12,"id","","",70,null],[12,"x","","",70,null],[12,"y","","",70,null],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",70,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",70,null],[12,"time","","",70,null],[12,"id","","",70,null],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",70,null],[12,"time","wayland_server::protocol::wl_touch::Event","",70,null],[12,"id","","",70,null],[12,"x","","",70,null],[12,"y","","",70,null],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",70,null],[13,"Cancel","","touch session cancelled",70,null],[13,"Shape","","update shape of touch point",70,null],[12,"id","wayland_server::protocol::wl_touch::Event","",70,null],[12,"major","","",70,null],[12,"minor","","",70,null],[13,"Orientation","wayland_server::protocol::wl_touch","update orientation of touch point",70,null],[12,"id","wayland_server::protocol::wl_touch::Event","",70,null],[12,"orientation","","",70,null],[7,"wl_touch_requests","wayland_server::protocol::wl_touch","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",null,null],[11,"down","","touch down event and beginning of a touch sequence",71,[[["u32"],["i32"],["f64"],["self"],["wlsurface"]]]],[11,"up","","end of a touch event sequence",71,[[["u32"],["self"],["i32"]]]],[11,"motion","","update of touch point coordinates",71,[[["u32"],["i32"],["f64"],["self"]]]],[11,"frame","","end of touch frame event",71,[[["self"]]]],[11,"cancel","","touch session cancelled",71,[[["self"]]]],[11,"shape","","update shape of touch point",71,[[["i32"],["f64"],["self"]]]],[11,"orientation","","update orientation of touch point",71,[[["f64"],["self"],["i32"]]]],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"Mode","wayland_server::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",72,null],[13,"None","","no geometry",72,null],[13,"HorizontalRgb","","horizontal RGB",72,null],[13,"HorizontalBgr","","horizontal BGR",72,null],[13,"VerticalRgb","","vertical RGB",72,null],[13,"VerticalBgr","","vertical BGR",72,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",73,null],[13,"_90","","90 degrees counter-clockwise",73,null],[13,"_180","","180 degrees counter-clockwise",73,null],[13,"_270","","270 degrees counter-clockwise",73,null],[13,"Flipped","","180 degree flip around a vertical axis",73,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",73,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",73,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",73,null],[4,"Request","","",null,null],[13,"Release","","release the output object",74,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",75,null],[12,"x","wayland_server::protocol::wl_output::Event","",75,null],[12,"y","","",75,null],[12,"physical_width","","",75,null],[12,"physical_height","","",75,null],[12,"subpixel","","",75,null],[12,"make","","",75,null],[12,"model","","",75,null],[12,"transform","","",75,null],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",75,null],[12,"flags","wayland_server::protocol::wl_output::Event","",75,null],[12,"width","","",75,null],[12,"height","","",75,null],[12,"refresh","","",75,null],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",75,null],[13,"Scale","","output scaling properties",75,null],[12,"factor","wayland_server::protocol::wl_output::Event","",75,null],[7,"wl_output_requests","wayland_server::protocol::wl_output","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",72,[[["u32"]],[["option",["subpixel"]],["subpixel"]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[11,"from_raw","","",73,[[["u32"]],[["option",["transform"]],["transform"]]]],[11,"to_raw","","",73,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",76,null],[18,"Preferred","","indicates this is the preferred mode",76,null],[11,"empty","","Returns an empty set of flags",76,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",76,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",76,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",76,[[["u32"]],[["option",["mode"]],["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",76,[[["u32"]],["mode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",76,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",76,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",76,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",76,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",76,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",76,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",76,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",76,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",76,[[["bool"],["self"],["mode"]]]],[11,"from_raw","","",76,[[["u32"]],[["option",["mode"]],["mode"]]]],[11,"to_raw","","",76,[[["self"]],["u32"]]],[11,"geometry","","properties of the output",77,[[["string"],["subpixel"],["i32"],["transform"],["self"]]]],[11,"mode","","advertise available modes for the output",77,[[["i32"],["mode"],["self"]]]],[11,"done","","sent all information about output",77,[[["self"]]]],[11,"scale","","output scaling properties",77,[[["self"],["i32"]]]],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",78,null],[13,"Add","","add rectangle to region",78,null],[12,"x","wayland_server::protocol::wl_region::Request","",78,null],[12,"y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",78,null],[12,"x","wayland_server::protocol::wl_region::Request","",78,null],[12,"y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[4,"Event","wayland_server::protocol::wl_region","",null,null],[7,"wl_region_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_region_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",79,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",80,null],[13,"GetSubsurface","","give a surface the role sub-surface",80,null],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",80,null],[12,"surface","","",80,null],[12,"parent","","",80,null],[4,"Event","wayland_server::protocol::wl_subcompositor","",null,null],[7,"wl_subcompositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subcompositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",79,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",79,[[["self"]],["u32"]]],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",81,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",82,null],[13,"SetPosition","","reposition the sub-surface",82,null],[12,"x","wayland_server::protocol::wl_subsurface::Request","",82,null],[12,"y","","",82,null],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",82,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",82,null],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",82,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",82,null],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",82,null],[13,"SetDesync","","set sub-surface to desynchronized mode",82,null],[4,"Event","","",null,null],[7,"wl_subsurface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subsurface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",81,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",81,[[["self"]],["u32"]]],[14,"request_enum","wayland_server","Generate an enum joining several objects requests",null,null],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_any","","",83,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",83,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",83,[[["self"]],["any"]]],[11,"as_any_mut","","",83,[[["self"]],["any"]]],[11,"into_any_arc","","",83,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",84,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",85,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",86,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"into_any_arc","","",86,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",2,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any_arc","","",2,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",3,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",4,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",6,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",5,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any_arc","","",5,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",87,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"into_any_arc","","",87,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",14,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"into_any_arc","","",14,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::sys::common","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",7,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",8,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",9,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any_arc","","",9,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",10,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any_arc","","",10,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",11,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"from","wayland_server::sys::server","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",88,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"into_any_arc","","",88,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",89,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"into_any_arc","","",89,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_any","","",90,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",90,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"into_any_arc","","",90,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",91,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"into_any_arc","","",91,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_any","","",92,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",92,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"into_any_arc","","",92,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_any","","",93,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",93,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",93,[[["self"]],["any"]]],[11,"as_any_mut","","",93,[[["self"]],["any"]]],[11,"into_any_arc","","",93,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",94,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"into_any_arc","","",94,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",12,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any_arc","","",12,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",13,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any_arc","","",13,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_callback","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"into_any","","",16,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",16,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"into_any_arc","","",16,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_any","","",95,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",95,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",95,[[["self"]],["any"]]],[11,"as_any_mut","","",95,[[["self"]],["any"]]],[11,"into_any_arc","","",95,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",15,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any_arc","","",15,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_compositor","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",96,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"into_any_arc","","",96,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",17,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any_arc","","",17,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",97,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"into_any_arc","","",97,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_shm_pool","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_any","","",98,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",98,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",98,[[["self"]],["any"]]],[11,"as_any_mut","","",98,[[["self"]],["any"]]],[11,"into_any_arc","","",98,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",18,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any_arc","","",18,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_any","","",99,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",99,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",99,[[["self"]],["any"]]],[11,"as_any_mut","","",99,[[["self"]],["any"]]],[11,"into_any_arc","","",99,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_shm","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",23,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any_arc","","",23,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_any","","",19,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",19,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"into_any_arc","","",19,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",20,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any_arc","","",20,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",21,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any_arc","","",21,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",22,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"into_any_arc","","",22,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_buffer","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",26,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any_arc","","",26,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",24,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any_arc","","",24,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",25,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any_arc","","",25,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_data_offer","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_any","","",30,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",30,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"into_any_arc","","",30,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",27,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any_arc","","",27,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",28,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any_arc","","",28,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",29,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any_arc","","",29,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_data_source","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",34,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any_arc","","",34,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",31,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any_arc","","",31,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",32,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any_arc","","",32,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",33,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any_arc","","",33,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_data_device","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",38,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"into_any_arc","","",38,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",35,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any_arc","","",35,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_any","","",36,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",36,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any_arc","","",36,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",37,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any_arc","","",37,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_any","","",40,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",40,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",40,[[["self"]],["any"]]],[11,"as_any_mut","","",40,[[["self"]],["any"]]],[11,"into_any_arc","","",40,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",100,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"into_any_arc","","",100,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",39,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any_arc","","",39,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",101,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any_arc","","",101,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_shell","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"into_any","","",102,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",102,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",102,[[["self"]],["any"]]],[11,"as_any_mut","","",102,[[["self"]],["any"]]],[11,"into_any_arc","","",102,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_any","","",41,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",41,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"into_any_arc","","",41,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_any","","",42,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",42,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"into_any_arc","","",42,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",103,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"into_any_arc","","",103,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_shell_surface","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_any","","",46,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",46,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"into_any_arc","","",46,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",47,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"into_any_arc","","",47,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_any","","",48,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",48,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"into_any_arc","","",48,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",43,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any_arc","","",43,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",44,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"into_any_arc","","",44,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_any","","",45,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",45,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"into_any_arc","","",45,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_surface","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",52,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"into_any_arc","","",52,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",49,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"into_any_arc","","",49,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_any","","",50,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",50,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"into_any_arc","","",50,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",51,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"into_any_arc","","",51,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_seat","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_any","","",55,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",55,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",55,[[["self"]],["any"]]],[11,"as_any_mut","","",55,[[["self"]],["any"]]],[11,"into_any_arc","","",55,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_any","","",56,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",56,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",56,[[["self"]],["any"]]],[11,"as_any_mut","","",56,[[["self"]],["any"]]],[11,"into_any_arc","","",56,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",53,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"into_any_arc","","",53,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",54,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"into_any_arc","","",54,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_pointer","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",63,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any_arc","","",63,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_any","","",57,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",57,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",57,[[["self"]],["any"]]],[11,"as_any_mut","","",57,[[["self"]],["any"]]],[11,"into_any_arc","","",57,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",58,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"into_any_arc","","",58,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_any","","",59,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",59,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",59,[[["self"]],["any"]]],[11,"as_any_mut","","",59,[[["self"]],["any"]]],[11,"into_any_arc","","",59,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_any","","",60,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",60,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"into_any_arc","","",60,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",61,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"into_any_arc","","",61,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",62,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any_arc","","",62,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_keyboard","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_any","","",68,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",68,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"into_any_arc","","",68,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_any","","",64,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",64,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",64,[[["self"]],["any"]]],[11,"as_any_mut","","",64,[[["self"]],["any"]]],[11,"into_any_arc","","",64,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_any","","",65,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",65,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",65,[[["self"]],["any"]]],[11,"as_any_mut","","",65,[[["self"]],["any"]]],[11,"into_any_arc","","",65,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",66,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"into_any_arc","","",66,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",67,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"into_any_arc","","",67,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_touch","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",71,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any_arc","","",71,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_any","","",69,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",69,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",69,[[["self"]],["any"]]],[11,"as_any_mut","","",69,[[["self"]],["any"]]],[11,"into_any_arc","","",69,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_any","","",70,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",70,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"into_any_arc","","",70,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_output","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_any","","",76,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",76,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",76,[[["self"]],["any"]]],[11,"as_any_mut","","",76,[[["self"]],["any"]]],[11,"into_any_arc","","",76,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_any","","",77,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",77,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"into_any_arc","","",77,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_any","","",72,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",72,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"into_any_arc","","",72,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_any","","",73,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",73,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"into_any_arc","","",73,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_any","","",74,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",74,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",74,[[["self"]],["any"]]],[11,"as_any_mut","","",74,[[["self"]],["any"]]],[11,"into_any_arc","","",74,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",75,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"into_any_arc","","",75,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_region","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",104,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"into_any_arc","","",104,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",78,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"into_any_arc","","",78,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",105,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"into_any_arc","","",105,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_subcompositor","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",106,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"into_any_arc","","",106,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",79,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"into_any_arc","","",79,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_any","","",80,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",80,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",80,[[["self"]],["any"]]],[11,"as_any_mut","","",80,[[["self"]],["any"]]],[11,"into_any_arc","","",80,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"into_any","","",107,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",107,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"into_any_arc","","",107,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","wayland_server::protocol::wl_subsurface","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"into_any","","",108,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",108,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"into_any_arc","","",108,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",81,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any_arc","","",81,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",82,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"into_any_arc","","",82,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"into_any","","",109,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",109,[[["rc"]],[["rc",["any"]],["any"]]]],[11,"as_any","","",109,[[["self"]],["any"]]],[11,"as_any_mut","","",109,[[["self"]],["any"]]],[11,"into_any_arc","","",109,[[["arc"]],[["arc",["any"]],["any"]]]],[11,"clone","wayland_server","",85,[[["self"]],["filter"]]],[11,"is_destructor","","",86,[[["self"]],["bool"]]],[11,"opcode","","",86,[[["self"]],["u16"]]],[11,"since","","",86,[[["self"]],["u32"]]],[11,"child","","",86,[[["u16"],["u32"],["m"]],[["option",["object"]],["object"]]]],[11,"from_raw","","",86,[[["message"]],[["nomessage"],["result",["nomessage"]]]]],[11,"into_raw","","",86,[[["u32"]],["message"]]],[11,"from_raw_c","","",86,[[["u32"]],[["nomessage"],["result",["nomessage"]]]]],[11,"as_raw_c_in","","",86,[[["f"]],["t"]]],[11,"default","","",83,[[],["userdatamap"]]],[11,"as_ref","wayland_server::protocol::wl_callback","",16,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_compositor","",96,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shm_pool","",98,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shm","",23,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_buffer","",26,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_offer","",30,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_source","",34,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_device","",38,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_device_manager","",100,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shell","",102,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shell_surface","",48,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_surface","",52,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_seat","",56,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_pointer","",63,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_keyboard","",68,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_touch","",71,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_output","",77,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_region","",104,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_subcompositor","",106,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_subsurface","",108,[[["self"]],["resource"]]],[11,"as_ref","wayland_server","",87,[[["self"]],["resource"]]],[11,"from","wayland_server::protocol::wl_callback","",16,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlcallback"]],["self"]]],[11,"from","wayland_server::protocol::wl_compositor","",96,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlcompositor"]],["self"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",98,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshmpool"]],["self"]]],[11,"from","wayland_server::protocol::wl_shm","",23,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshm"]],["self"]]],[11,"from","wayland_server::protocol::wl_buffer","",26,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlbuffer"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_offer","",30,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldataoffer"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_source","",34,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatasource"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_device","",38,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatadevice"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",100,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatadevicemanager"]],["self"]]],[11,"from","wayland_server::protocol::wl_shell","",102,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshell"]],["self"]]],[11,"from","wayland_server::protocol::wl_shell_surface","",48,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshellsurface"]],["self"]]],[11,"from","wayland_server::protocol::wl_surface","",52,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsurface"]],["self"]]],[11,"from","wayland_server::protocol::wl_seat","",56,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlseat"]],["self"]]],[11,"from","wayland_server::protocol::wl_pointer","",63,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlpointer"]],["self"]]],[11,"from","wayland_server::protocol::wl_keyboard","",68,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlkeyboard"]],["self"]]],[11,"from","wayland_server::protocol::wl_touch","",71,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wltouch"]],["self"]]],[11,"from","wayland_server::protocol::wl_output","",77,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wloutput"]],["self"]]],[11,"from","wayland_server::protocol::wl_region","",104,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlregion"]],["self"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",106,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsubcompositor"]],["self"]]],[11,"from","wayland_server::protocol::wl_subsurface","",108,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsubsurface"]],["self"]]],[11,"from","","",87,[[["resource"]],["self"]]],[11,"from","","",5,[[["anonymousobject"]],["self"]]],[11,"extend","wayland_server::protocol::wl_data_device_manager","",40,[[["intoiterator"],["self"]]]],[11,"extend","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["intoiterator"]]]],[11,"extend","","",47,[[["self"],["intoiterator"]]]],[11,"extend","wayland_server::protocol::wl_seat","",55,[[["self"],["intoiterator"]]]],[11,"extend","wayland_server::protocol::wl_output","",76,[[["self"],["intoiterator"]]]],[11,"clone","wayland_server","",2,[[["self"]],["client"]]],[11,"clone","","",5,[[["self"]],["resource"]]],[11,"clone","","",6,[[["self"]],["main"]]],[11,"clone","wayland_server::protocol::wl_callback","",16,[[["self"]],["wlcallback"]]],[11,"clone","wayland_server::protocol::wl_compositor","",96,[[["self"]],["wlcompositor"]]],[11,"clone","wayland_server::protocol::wl_shm_pool","",98,[[["self"]],["wlshmpool"]]],[11,"clone","wayland_server::protocol::wl_shm","",19,[[["self"]],["error"]]],[11,"clone","","",20,[[["self"]],["format"]]],[11,"clone","","",23,[[["self"]],["wlshm"]]],[11,"clone","wayland_server::protocol::wl_buffer","",26,[[["self"]],["wlbuffer"]]],[11,"clone","wayland_server::protocol::wl_data_offer","",27,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["wldataoffer"]]],[11,"clone","wayland_server::protocol::wl_data_source","",31,[[["self"]],["error"]]],[11,"clone","","",34,[[["self"]],["wldatasource"]]],[11,"clone","wayland_server::protocol::wl_data_device","",35,[[["self"]],["error"]]],[11,"clone","","",38,[[["self"]],["wldatadevice"]]],[11,"clone","wayland_server::protocol::wl_data_device_manager","",40,[[["self"]],["dndaction"]]],[11,"clone","","",100,[[["self"]],["wldatadevicemanager"]]],[11,"clone","wayland_server::protocol::wl_shell","",41,[[["self"]],["error"]]],[11,"clone","","",102,[[["self"]],["wlshell"]]],[11,"clone","wayland_server::protocol::wl_shell_surface","",46,[[["self"]],["resize"]]],[11,"clone","","",47,[[["self"]],["transient"]]],[11,"clone","","",43,[[["self"]],["fullscreenmethod"]]],[11,"clone","","",48,[[["self"]],["wlshellsurface"]]],[11,"clone","wayland_server::protocol::wl_surface","",49,[[["self"]],["error"]]],[11,"clone","","",52,[[["self"]],["wlsurface"]]],[11,"clone","wayland_server::protocol::wl_seat","",55,[[["self"]],["capability"]]],[11,"clone","","",56,[[["self"]],["wlseat"]]],[11,"clone","wayland_server::protocol::wl_pointer","",57,[[["self"]],["error"]]],[11,"clone","","",58,[[["self"]],["buttonstate"]]],[11,"clone","","",59,[[["self"]],["axis"]]],[11,"clone","","",60,[[["self"]],["axissource"]]],[11,"clone","","",63,[[["self"]],["wlpointer"]]],[11,"clone","wayland_server::protocol::wl_keyboard","",64,[[["self"]],["keymapformat"]]],[11,"clone","","",65,[[["self"]],["keystate"]]],[11,"clone","","",68,[[["self"]],["wlkeyboard"]]],[11,"clone","wayland_server::protocol::wl_touch","",71,[[["self"]],["wltouch"]]],[11,"clone","wayland_server::protocol::wl_output","",72,[[["self"]],["subpixel"]]],[11,"clone","","",73,[[["self"]],["transform"]]],[11,"clone","","",76,[[["self"]],["mode"]]],[11,"clone","","",77,[[["self"]],["wloutput"]]],[11,"clone","wayland_server::protocol::wl_region","",104,[[["self"]],["wlregion"]]],[11,"clone","wayland_server::protocol::wl_subcompositor","",79,[[["self"]],["error"]]],[11,"clone","","",106,[[["self"]],["wlsubcompositor"]]],[11,"clone","wayland_server::protocol::wl_subsurface","",81,[[["self"]],["error"]]],[11,"clone","","",108,[[["self"]],["wlsubsurface"]]],[11,"clone","wayland_server","",87,[[["self"]],["anonymousobject"]]],[11,"cmp","wayland_server::protocol::wl_data_device_manager","",40,[[["dndaction"],["self"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_shell_surface","",46,[[["resize"],["self"]],["ordering"]]],[11,"cmp","","",47,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_seat","",55,[[["capability"],["self"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_output","",76,[[["self"],["mode"]],["ordering"]]],[11,"eq","wayland_server","",5,[[["self"],["resource"]],["bool"]]],[11,"eq","","",6,[[["main"],["self"]],["bool"]]],[11,"ne","","",6,[[["main"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_callback","",16,[[["self"],["wlcallback"]],["bool"]]],[11,"ne","","",16,[[["self"],["wlcallback"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_compositor","",96,[[["wlcompositor"],["self"]],["bool"]]],[11,"ne","","",96,[[["wlcompositor"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm_pool","",98,[[["self"],["wlshmpool"]],["bool"]]],[11,"ne","","",98,[[["self"],["wlshmpool"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm","",19,[[["error"],["self"]],["bool"]]],[11,"eq","","",20,[[["format"],["self"]],["bool"]]],[11,"eq","","",23,[[["wlshm"],["self"]],["bool"]]],[11,"ne","","",23,[[["wlshm"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_buffer","",26,[[["wlbuffer"],["self"]],["bool"]]],[11,"ne","","",26,[[["wlbuffer"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_offer","",27,[[["self"],["error"]],["bool"]]],[11,"eq","","",30,[[["wldataoffer"],["self"]],["bool"]]],[11,"ne","","",30,[[["wldataoffer"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_source","",31,[[["error"],["self"]],["bool"]]],[11,"eq","","",34,[[["wldatasource"],["self"]],["bool"]]],[11,"ne","","",34,[[["wldatasource"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device","",35,[[["error"],["self"]],["bool"]]],[11,"eq","","",38,[[["wldatadevice"],["self"]],["bool"]]],[11,"ne","","",38,[[["wldatadevice"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device_manager","",40,[[["dndaction"],["self"]],["bool"]]],[11,"ne","","",40,[[["dndaction"],["self"]],["bool"]]],[11,"eq","","",100,[[["wldatadevicemanager"],["self"]],["bool"]]],[11,"ne","","",100,[[["wldatadevicemanager"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell","",41,[[["self"],["error"]],["bool"]]],[11,"eq","","",102,[[["wlshell"],["self"]],["bool"]]],[11,"ne","","",102,[[["wlshell"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell_surface","",46,[[["resize"],["self"]],["bool"]]],[11,"ne","","",46,[[["resize"],["self"]],["bool"]]],[11,"eq","","",47,[[["self"],["transient"]],["bool"]]],[11,"ne","","",47,[[["self"],["transient"]],["bool"]]],[11,"eq","","",43,[[["fullscreenmethod"],["self"]],["bool"]]],[11,"eq","","",48,[[["wlshellsurface"],["self"]],["bool"]]],[11,"ne","","",48,[[["wlshellsurface"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_surface","",49,[[["error"],["self"]],["bool"]]],[11,"eq","","",52,[[["wlsurface"],["self"]],["bool"]]],[11,"ne","","",52,[[["wlsurface"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_seat","",55,[[["capability"],["self"]],["bool"]]],[11,"ne","","",55,[[["capability"],["self"]],["bool"]]],[11,"eq","","",56,[[["wlseat"],["self"]],["bool"]]],[11,"ne","","",56,[[["wlseat"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_pointer","",57,[[["self"],["error"]],["bool"]]],[11,"eq","","",58,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",59,[[["axis"],["self"]],["bool"]]],[11,"eq","","",60,[[["axissource"],["self"]],["bool"]]],[11,"eq","","",63,[[["self"],["wlpointer"]],["bool"]]],[11,"ne","","",63,[[["self"],["wlpointer"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_keyboard","",64,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","","",65,[[["keystate"],["self"]],["bool"]]],[11,"eq","","",68,[[["wlkeyboard"],["self"]],["bool"]]],[11,"ne","","",68,[[["wlkeyboard"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_touch","",71,[[["wltouch"],["self"]],["bool"]]],[11,"ne","","",71,[[["wltouch"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_output","",72,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",73,[[["transform"],["self"]],["bool"]]],[11,"eq","","",76,[[["self"],["mode"]],["bool"]]],[11,"ne","","",76,[[["self"],["mode"]],["bool"]]],[11,"eq","","",77,[[["wloutput"],["self"]],["bool"]]],[11,"ne","","",77,[[["wloutput"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_region","",104,[[["wlregion"],["self"]],["bool"]]],[11,"ne","","",104,[[["wlregion"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subcompositor","",79,[[["error"],["self"]],["bool"]]],[11,"eq","","",106,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"ne","","",106,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subsurface","",81,[[["self"],["error"]],["bool"]]],[11,"eq","","",108,[[["wlsubsurface"],["self"]],["bool"]]],[11,"ne","","",108,[[["wlsubsurface"],["self"]],["bool"]]],[11,"eq","wayland_server","",87,[[["self"],["anonymousobject"]],["bool"]]],[11,"ne","","",87,[[["self"],["anonymousobject"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_data_device_manager","",40,[[["dndaction"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",40,[[["dndaction"],["self"]],["bool"]]],[11,"le","","",40,[[["dndaction"],["self"]],["bool"]]],[11,"gt","","",40,[[["dndaction"],["self"]],["bool"]]],[11,"ge","","",40,[[["dndaction"],["self"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_shell_surface","",46,[[["resize"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",46,[[["resize"],["self"]],["bool"]]],[11,"le","","",46,[[["resize"],["self"]],["bool"]]],[11,"gt","","",46,[[["resize"],["self"]],["bool"]]],[11,"ge","","",46,[[["resize"],["self"]],["bool"]]],[11,"partial_cmp","","",47,[[["self"],["transient"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",47,[[["self"],["transient"]],["bool"]]],[11,"le","","",47,[[["self"],["transient"]],["bool"]]],[11,"gt","","",47,[[["self"],["transient"]],["bool"]]],[11,"ge","","",47,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_seat","",55,[[["capability"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",55,[[["capability"],["self"]],["bool"]]],[11,"le","","",55,[[["capability"],["self"]],["bool"]]],[11,"gt","","",55,[[["capability"],["self"]],["bool"]]],[11,"ge","","",55,[[["capability"],["self"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_output","",76,[[["self"],["mode"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",76,[[["self"],["mode"]],["bool"]]],[11,"le","","",76,[[["self"],["mode"]],["bool"]]],[11,"gt","","",76,[[["self"],["mode"]],["bool"]]],[11,"ge","","",76,[[["self"],["mode"]],["bool"]]],[11,"deref","wayland_server","",6,[[["self"]],["i"]]],[11,"fmt","wayland_server::protocol::wl_shm","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_offer","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_source","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_surface","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_pointer","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_keyboard","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subcompositor","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subsurface","",81,[[["formatter"],["self"]],["result"]]],[11,"sub","wayland_server::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",40,[[["dndaction"]],["dndaction"]]],[11,"sub","wayland_server::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",46,[[["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",47,[[["transient"]],["transient"]]],[11,"sub","wayland_server::protocol::wl_seat","Returns the set difference of the two sets of flags.",55,[[["capability"]],["capability"]]],[11,"sub","wayland_server::protocol::wl_output","Returns the set difference of the two sets of flags.",76,[[["mode"]],["mode"]]],[11,"sub_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags enabled in the set.",40,[[["dndaction"],["self"]]]],[11,"sub_assign","wayland_server::protocol::wl_shell_surface","Disables all flags enabled in the set.",46,[[["self"],["resize"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",47,[[["self"],["transient"]]]],[11,"sub_assign","wayland_server::protocol::wl_seat","Disables all flags enabled in the set.",55,[[["self"],["capability"]]]],[11,"sub_assign","wayland_server::protocol::wl_output","Disables all flags enabled in the set.",76,[[["self"],["mode"]]]],[11,"not","wayland_server::protocol::wl_data_device_manager","Returns the complement of this set of flags.",40,[[],["dndaction"]]],[11,"not","wayland_server::protocol::wl_shell_surface","Returns the complement of this set of flags.",46,[[],["resize"]]],[11,"not","","Returns the complement of this set of flags.",47,[[],["transient"]]],[11,"not","wayland_server::protocol::wl_seat","Returns the complement of this set of flags.",55,[[],["capability"]]],[11,"not","wayland_server::protocol::wl_output","Returns the complement of this set of flags.",76,[[],["mode"]]],[11,"bitand","wayland_server::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",40,[[["dndaction"]],["dndaction"]]],[11,"bitand","wayland_server::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",46,[[["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",47,[[["transient"]],["transient"]]],[11,"bitand","wayland_server::protocol::wl_seat","Returns the intersection between the two sets of flags.",55,[[["capability"]],["capability"]]],[11,"bitand","wayland_server::protocol::wl_output","Returns the intersection between the two sets of flags.",76,[[["mode"]],["mode"]]],[11,"bitor","wayland_server::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",40,[[["dndaction"]],["dndaction"]]],[11,"bitor","wayland_server::protocol::wl_shell_surface","Returns the union of the two sets of flags.",46,[[["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",47,[[["transient"]],["transient"]]],[11,"bitor","wayland_server::protocol::wl_seat","Returns the union of the two sets of flags.",55,[[["capability"]],["capability"]]],[11,"bitor","wayland_server::protocol::wl_output","Returns the union of the two sets of flags.",76,[[["mode"]],["mode"]]],[11,"bitxor","wayland_server::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",40,[[["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_server::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",46,[[["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",47,[[["transient"]],["transient"]]],[11,"bitxor","wayland_server::protocol::wl_seat","Returns the left flags, but with all the right flags…",55,[[["capability"]],["capability"]]],[11,"bitxor","wayland_server::protocol::wl_output","Returns the left flags, but with all the right flags…",76,[[["mode"]],["mode"]]],[11,"bitand_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags disabled in the set.",40,[[["dndaction"],["self"]]]],[11,"bitand_assign","wayland_server::protocol::wl_shell_surface","Disables all flags disabled in the set.",46,[[["self"],["resize"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",47,[[["self"],["transient"]]]],[11,"bitand_assign","wayland_server::protocol::wl_seat","Disables all flags disabled in the set.",55,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_server::protocol::wl_output","Disables all flags disabled in the set.",76,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_server::protocol::wl_data_device_manager","Adds the set of flags.",40,[[["dndaction"],["self"]]]],[11,"bitor_assign","wayland_server::protocol::wl_shell_surface","Adds the set of flags.",46,[[["self"],["resize"]]]],[11,"bitor_assign","","Adds the set of flags.",47,[[["self"],["transient"]]]],[11,"bitor_assign","wayland_server::protocol::wl_seat","Adds the set of flags.",55,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_server::protocol::wl_output","Adds the set of flags.",76,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_data_device_manager","Toggles the set of flags.",40,[[["dndaction"],["self"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_shell_surface","Toggles the set of flags.",46,[[["self"],["resize"]]]],[11,"bitxor_assign","","Toggles the set of flags.",47,[[["self"],["transient"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_seat","Toggles the set of flags.",55,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_output","Toggles the set of flags.",76,[[["self"],["mode"]]]],[11,"hash","wayland_server::protocol::wl_data_device_manager","",40,[[["self"],["__h"]]]],[11,"hash","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","wayland_server::protocol::wl_seat","",55,[[["self"],["__h"]]]],[11,"hash","wayland_server::protocol::wl_output","",76,[[["self"],["__h"]]]],[11,"from_iter","wayland_server::protocol::wl_data_device_manager","",40,[[["intoiterator"]],["dndaction"]]],[11,"from_iter","wayland_server::protocol::wl_shell_surface","",46,[[["intoiterator"]],["resize"]]],[11,"from_iter","","",47,[[["intoiterator"]],["transient"]]],[11,"from_iter","wayland_server::protocol::wl_seat","",55,[[["intoiterator"]],["capability"]]],[11,"from_iter","wayland_server::protocol::wl_output","",76,[[["intoiterator"]],["mode"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",76,[[["self"],["formatter"]],["result"]]],[11,"c_interface","wayland_server::protocol::wl_callback","",16,[[]]],[11,"c_interface","wayland_server::protocol::wl_compositor","",96,[[]]],[11,"c_interface","wayland_server::protocol::wl_shm_pool","",98,[[]]],[11,"c_interface","wayland_server::protocol::wl_shm","",23,[[]]],[11,"c_interface","wayland_server::protocol::wl_buffer","",26,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_offer","",30,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_source","",34,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_device","",38,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_device_manager","",100,[[]]],[11,"c_interface","wayland_server::protocol::wl_shell","",102,[[]]],[11,"c_interface","wayland_server::protocol::wl_shell_surface","",48,[[]]],[11,"c_interface","wayland_server::protocol::wl_surface","",52,[[]]],[11,"c_interface","wayland_server::protocol::wl_seat","",56,[[]]],[11,"c_interface","wayland_server::protocol::wl_pointer","",63,[[]]],[11,"c_interface","wayland_server::protocol::wl_keyboard","",68,[[]]],[11,"c_interface","wayland_server::protocol::wl_touch","",71,[[]]],[11,"c_interface","wayland_server::protocol::wl_output","",77,[[]]],[11,"c_interface","wayland_server::protocol::wl_region","",104,[[]]],[11,"c_interface","wayland_server::protocol::wl_subcompositor","",106,[[]]],[11,"c_interface","wayland_server::protocol::wl_subsurface","",108,[[]]],[11,"c_interface","wayland_server","",87,[[]]],[11,"is_destructor","wayland_server::protocol::wl_callback","",95,[[["self"]],["bool"]]],[11,"opcode","","",95,[[["self"]],["u16"]]],[11,"since","","",95,[[["self"]],["u32"]]],[11,"child","","",95,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",95,[[["message"]],["result"]]],[11,"into_raw","","",95,[[["u32"]],["message"]]],[11,"from_raw_c","","",95,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",95,[[["f"]],["t"]]],[11,"is_destructor","","",15,[[["self"]],["bool"]]],[11,"opcode","","",15,[[["self"]],["u16"]]],[11,"since","","",15,[[["self"]],["u32"]]],[11,"child","","",15,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",15,[[["message"]],["result"]]],[11,"into_raw","","",15,[[["u32"]],["message"]]],[11,"from_raw_c","","",15,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",15,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_compositor","",17,[[["self"]],["bool"]]],[11,"opcode","","",17,[[["self"]],["u16"]]],[11,"since","","",17,[[["self"]],["u32"]]],[11,"child","","",17,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",17,[[["message"]],["result"]]],[11,"into_raw","","",17,[[["u32"]],["message"]]],[11,"from_raw_c","","",17,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",17,[[["f"]],["t"]]],[11,"is_destructor","","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",97,[[["message"]],["result"]]],[11,"into_raw","","",97,[[["u32"]],["message"]]],[11,"from_raw_c","","",97,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",97,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",18,[[["message"]],["result"]]],[11,"into_raw","","",18,[[["u32"]],["message"]]],[11,"from_raw_c","","",18,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",18,[[["f"]],["t"]]],[11,"is_destructor","","",99,[[["self"]],["bool"]]],[11,"opcode","","",99,[[["self"]],["u16"]]],[11,"since","","",99,[[["self"]],["u32"]]],[11,"child","","",99,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",99,[[["message"]],["result"]]],[11,"into_raw","","",99,[[["u32"]],["message"]]],[11,"from_raw_c","","",99,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",99,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shm","",21,[[["self"]],["bool"]]],[11,"opcode","","",21,[[["self"]],["u16"]]],[11,"since","","",21,[[["self"]],["u32"]]],[11,"child","","",21,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",21,[[["message"]],["result"]]],[11,"into_raw","","",21,[[["u32"]],["message"]]],[11,"from_raw_c","","",21,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",21,[[["f"]],["t"]]],[11,"is_destructor","","",22,[[["self"]],["bool"]]],[11,"opcode","","",22,[[["self"]],["u16"]]],[11,"since","","",22,[[["self"]],["u32"]]],[11,"child","","",22,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",22,[[["message"]],["result"]]],[11,"into_raw","","",22,[[["u32"]],["message"]]],[11,"from_raw_c","","",22,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",22,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_buffer","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"since","","",24,[[["self"]],["u32"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",24,[[["message"]],["result"]]],[11,"into_raw","","",24,[[["u32"]],["message"]]],[11,"from_raw_c","","",24,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",24,[[["f"]],["t"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"since","","",25,[[["self"]],["u32"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",25,[[["message"]],["result"]]],[11,"into_raw","","",25,[[["u32"]],["message"]]],[11,"from_raw_c","","",25,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",25,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_offer","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"since","","",28,[[["self"]],["u32"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",28,[[["message"]],["result"]]],[11,"into_raw","","",28,[[["u32"]],["message"]]],[11,"from_raw_c","","",28,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",28,[[["f"]],["t"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"since","","",29,[[["self"]],["u32"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",29,[[["message"]],["result"]]],[11,"into_raw","","",29,[[["u32"]],["message"]]],[11,"from_raw_c","","",29,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",29,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_source","",32,[[["self"]],["bool"]]],[11,"opcode","","",32,[[["self"]],["u16"]]],[11,"since","","",32,[[["self"]],["u32"]]],[11,"child","","",32,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",32,[[["message"]],["result"]]],[11,"into_raw","","",32,[[["u32"]],["message"]]],[11,"from_raw_c","","",32,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",32,[[["f"]],["t"]]],[11,"is_destructor","","",33,[[["self"]],["bool"]]],[11,"opcode","","",33,[[["self"]],["u16"]]],[11,"since","","",33,[[["self"]],["u32"]]],[11,"child","","",33,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",33,[[["message"]],["result"]]],[11,"into_raw","","",33,[[["u32"]],["message"]]],[11,"from_raw_c","","",33,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",33,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device","",36,[[["self"]],["bool"]]],[11,"opcode","","",36,[[["self"]],["u16"]]],[11,"since","","",36,[[["self"]],["u32"]]],[11,"child","","",36,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",36,[[["message"]],["result"]]],[11,"into_raw","","",36,[[["u32"]],["message"]]],[11,"from_raw_c","","",36,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",36,[[["f"]],["t"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"since","","",37,[[["self"]],["u32"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",37,[[["message"]],["result"]]],[11,"into_raw","","",37,[[["u32"]],["message"]]],[11,"from_raw_c","","",37,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",37,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device_manager","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"since","","",39,[[["self"]],["u32"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",39,[[["message"]],["result"]]],[11,"into_raw","","",39,[[["u32"]],["message"]]],[11,"from_raw_c","","",39,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",39,[[["f"]],["t"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",101,[[["message"]],["result"]]],[11,"into_raw","","",101,[[["u32"]],["message"]]],[11,"from_raw_c","","",101,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",101,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shell","",42,[[["self"]],["bool"]]],[11,"opcode","","",42,[[["self"]],["u16"]]],[11,"since","","",42,[[["self"]],["u32"]]],[11,"child","","",42,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",42,[[["message"]],["result"]]],[11,"into_raw","","",42,[[["u32"]],["message"]]],[11,"from_raw_c","","",42,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",42,[[["f"]],["t"]]],[11,"is_destructor","","",103,[[["self"]],["bool"]]],[11,"opcode","","",103,[[["self"]],["u16"]]],[11,"since","","",103,[[["self"]],["u32"]]],[11,"child","","",103,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",103,[[["message"]],["result"]]],[11,"into_raw","","",103,[[["u32"]],["message"]]],[11,"from_raw_c","","",103,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",103,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shell_surface","",44,[[["self"]],["bool"]]],[11,"opcode","","",44,[[["self"]],["u16"]]],[11,"since","","",44,[[["self"]],["u32"]]],[11,"child","","",44,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",44,[[["message"]],["result"]]],[11,"into_raw","","",44,[[["u32"]],["message"]]],[11,"from_raw_c","","",44,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",44,[[["f"]],["t"]]],[11,"is_destructor","","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"since","","",45,[[["self"]],["u32"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",45,[[["message"]],["result"]]],[11,"into_raw","","",45,[[["u32"]],["message"]]],[11,"from_raw_c","","",45,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",45,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_surface","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"since","","",50,[[["self"]],["u32"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",50,[[["message"]],["result"]]],[11,"into_raw","","",50,[[["u32"]],["message"]]],[11,"from_raw_c","","",50,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",50,[[["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"since","","",51,[[["self"]],["u32"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",51,[[["message"]],["result"]]],[11,"into_raw","","",51,[[["u32"]],["message"]]],[11,"from_raw_c","","",51,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",51,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_seat","",53,[[["self"]],["bool"]]],[11,"opcode","","",53,[[["self"]],["u16"]]],[11,"since","","",53,[[["self"]],["u32"]]],[11,"child","","",53,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",53,[[["message"]],["result"]]],[11,"into_raw","","",53,[[["u32"]],["message"]]],[11,"from_raw_c","","",53,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",53,[[["f"]],["t"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"since","","",54,[[["self"]],["u32"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",54,[[["message"]],["result"]]],[11,"into_raw","","",54,[[["u32"]],["message"]]],[11,"from_raw_c","","",54,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",54,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_pointer","",61,[[["self"]],["bool"]]],[11,"opcode","","",61,[[["self"]],["u16"]]],[11,"since","","",61,[[["self"]],["u32"]]],[11,"child","","",61,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",61,[[["message"]],["result"]]],[11,"into_raw","","",61,[[["u32"]],["message"]]],[11,"from_raw_c","","",61,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",61,[[["f"]],["t"]]],[11,"is_destructor","","",62,[[["self"]],["bool"]]],[11,"opcode","","",62,[[["self"]],["u16"]]],[11,"since","","",62,[[["self"]],["u32"]]],[11,"child","","",62,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",62,[[["message"]],["result"]]],[11,"into_raw","","",62,[[["u32"]],["message"]]],[11,"from_raw_c","","",62,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",62,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_keyboard","",66,[[["self"]],["bool"]]],[11,"opcode","","",66,[[["self"]],["u16"]]],[11,"since","","",66,[[["self"]],["u32"]]],[11,"child","","",66,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",66,[[["message"]],["result"]]],[11,"into_raw","","",66,[[["u32"]],["message"]]],[11,"from_raw_c","","",66,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",66,[[["f"]],["t"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"since","","",67,[[["self"]],["u32"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",67,[[["message"]],["result"]]],[11,"into_raw","","",67,[[["u32"]],["message"]]],[11,"from_raw_c","","",67,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",67,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_touch","",69,[[["self"]],["bool"]]],[11,"opcode","","",69,[[["self"]],["u16"]]],[11,"since","","",69,[[["self"]],["u32"]]],[11,"child","","",69,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",69,[[["message"]],["result"]]],[11,"into_raw","","",69,[[["u32"]],["message"]]],[11,"from_raw_c","","",69,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",69,[[["f"]],["t"]]],[11,"is_destructor","","",70,[[["self"]],["bool"]]],[11,"opcode","","",70,[[["self"]],["u16"]]],[11,"since","","",70,[[["self"]],["u32"]]],[11,"child","","",70,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",70,[[["message"]],["result"]]],[11,"into_raw","","",70,[[["u32"]],["message"]]],[11,"from_raw_c","","",70,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",70,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_output","",74,[[["self"]],["bool"]]],[11,"opcode","","",74,[[["self"]],["u16"]]],[11,"since","","",74,[[["self"]],["u32"]]],[11,"child","","",74,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",74,[[["message"]],["result"]]],[11,"into_raw","","",74,[[["u32"]],["message"]]],[11,"from_raw_c","","",74,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",74,[[["f"]],["t"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"since","","",75,[[["self"]],["u32"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",75,[[["message"]],["result"]]],[11,"into_raw","","",75,[[["u32"]],["message"]]],[11,"from_raw_c","","",75,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",75,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_region","",78,[[["self"]],["bool"]]],[11,"opcode","","",78,[[["self"]],["u16"]]],[11,"since","","",78,[[["self"]],["u32"]]],[11,"child","","",78,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",78,[[["message"]],["result"]]],[11,"into_raw","","",78,[[["u32"]],["message"]]],[11,"from_raw_c","","",78,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",78,[[["f"]],["t"]]],[11,"is_destructor","","",105,[[["self"]],["bool"]]],[11,"opcode","","",105,[[["self"]],["u16"]]],[11,"since","","",105,[[["self"]],["u32"]]],[11,"child","","",105,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",105,[[["message"]],["result"]]],[11,"into_raw","","",105,[[["u32"]],["message"]]],[11,"from_raw_c","","",105,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",105,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_subcompositor","",80,[[["self"]],["bool"]]],[11,"opcode","","",80,[[["self"]],["u16"]]],[11,"since","","",80,[[["self"]],["u32"]]],[11,"child","","",80,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",80,[[["message"]],["result"]]],[11,"into_raw","","",80,[[["u32"]],["message"]]],[11,"from_raw_c","","",80,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",80,[[["f"]],["t"]]],[11,"is_destructor","","",107,[[["self"]],["bool"]]],[11,"opcode","","",107,[[["self"]],["u16"]]],[11,"since","","",107,[[["self"]],["u32"]]],[11,"child","","",107,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",107,[[["message"]],["result"]]],[11,"into_raw","","",107,[[["u32"]],["message"]]],[11,"from_raw_c","","",107,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",107,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_subsurface","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"since","","",82,[[["self"]],["u32"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",82,[[["message"]],["result"]]],[11,"into_raw","","",82,[[["u32"]],["message"]]],[11,"from_raw_c","","",82,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",82,[[["f"]],["t"]]],[11,"is_destructor","","",109,[[["self"]],["bool"]]],[11,"opcode","","",109,[[["self"]],["u16"]]],[11,"since","","",109,[[["self"]],["u32"]]],[11,"child","","",109,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",109,[[["message"]],["result"]]],[11,"into_raw","","",109,[[["u32"]],["message"]]],[11,"from_raw_c","","",109,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",109,[[["f"]],["t"]]],[11,"new","wayland_server","Create a new map",83,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",83,[[["self"]],[["t"],["option"]]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",83,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",83,[[["self"],["f"]],["bool"]]],[11,"get","","Access the dispatch data knowing its type",84,[[["self"]],[["option"],["t"]]]],[11,"wrap","","Wrap a mutable reference",84,[[["t"]],["dispatchdata"]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",84,[[["self"]],["dispatchdata"]]],[11,"new","","Create a new filter from given closure",85,[[["f"]],["filter"]]],[11,"send","","Send a message to this filter",85,[[["dispatchdata"],["self"],["e"]]]]],"p":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"Main"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"ResourceMap"],[4,"Event"],[3,"WlCallback"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[3,"WlShm"],[4,"Request"],[4,"Event"],[3,"WlBuffer"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataSource"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlDataDevice"],[4,"Request"],[3,"DndAction"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[3,"Capability"],[3,"WlSeat"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[3,"WlPointer"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[3,"WlKeyboard"],[4,"Request"],[4,"Event"],[3,"WlTouch"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[3,"Mode"],[3,"WlOutput"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"UserDataMap"],[3,"DispatchData"],[3,"Filter"],[4,"NoMessage"],[3,"AnonymousObject"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[4,"Request"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"Event"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","i":[[0,"common","wayland_sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[19,"wl_argument","","",null,null],[12,"i","","",4,null],[12,"u","","",4,null],[12,"f","","",4,null],[12,"s","","",4,null],[12,"o","","",4,null],[12,"n","","",4,null],[12,"a","","",4,null],[12,"h","","",4,null],[5,"wl_fixed_to_double","","",null,[[["wl_fixed_t"]],["f64"]]],[5,"wl_fixed_from_double","","",null,[[["f64"]],["wl_fixed_t"]]],[5,"wl_fixed_to_int","","",null,[[["wl_fixed_t"]],["i32"]]],[5,"wl_fixed_from_int","","",null,[[["i32"]],["wl_fixed_t"]]],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[4,"wl_proxy","wayland_sys::client","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,[[],["bool"]]],[5,"wl_display_connect_to_fd","","",null,null],[5,"wl_display_connect","","",null,null],[5,"wl_display_disconnect","","",null,null],[5,"wl_display_get_fd","","",null,null],[5,"wl_display_roundtrip","","",null,null],[5,"wl_display_read_events","","",null,null],[5,"wl_display_prepare_read","","",null,null],[5,"wl_display_cancel_read","","",null,null],[5,"wl_display_dispatch","","",null,null],[5,"wl_display_dispatch_pending","","",null,null],[5,"wl_display_get_error","","",null,null],[5,"wl_display_get_protocol_error","","",null,null],[5,"wl_display_flush","","",null,null],[5,"wl_event_queue_destroy","","",null,null],[5,"wl_display_create_queue","","",null,null],[5,"wl_display_roundtrip_queue","","",null,null],[5,"wl_display_prepare_read_queue","","",null,null],[5,"wl_display_dispatch_queue","","",null,null],[5,"wl_display_dispatch_queue_pending","","",null,null],[5,"wl_proxy_create","","",null,null],[5,"wl_proxy_destroy","","",null,null],[5,"wl_proxy_add_listener","","",null,null],[5,"wl_proxy_get_listener","","",null,null],[5,"wl_proxy_add_dispatcher","","",null,null],[5,"wl_proxy_marshal_array_constructor","","",null,null],[5,"wl_proxy_marshal_array_constructor_versioned","","",null,null],[5,"wl_proxy_marshal_array","","",null,null],[5,"wl_proxy_set_user_data","","",null,null],[5,"wl_proxy_get_user_data","","",null,null],[5,"wl_proxy_get_id","","",null,null],[5,"wl_proxy_get_class","","",null,null],[5,"wl_proxy_set_queue","","",null,null],[5,"wl_proxy_get_version","","",null,null],[5,"wl_proxy_create_wrapper","","",null,null],[5,"wl_proxy_wrapper_destroy","","",null,null],[5,"wl_log_set_handler_client","","",null,null],[5,"wl_list_init","","",null,null],[5,"wl_list_insert","","",null,null],[5,"wl_list_remove","","",null,null],[5,"wl_list_length","","",null,null],[5,"wl_list_empty","","",null,null],[5,"wl_list_insert_list","","",null,null],[5,"wl_array_init","","",null,null],[5,"wl_array_release","","",null,null],[5,"wl_array_add","","",null,null],[5,"wl_array_copy","","",null,null],[5,"wl_proxy_marshal_constructor","","",null,null],[5,"wl_proxy_marshal_constructor_versioned","","",null,null],[5,"wl_proxy_marshal","","",null,null],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",null,null],[3,"wl_listener","wayland_sys::server","",null,null],[12,"link","","",5,null],[12,"notify","","",5,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",6,null],[4,"wl_client","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[4,"wl_egl_window","wayland_sys::egl","",null,null],[5,"is_lib_available","","",null,[[],["bool"]]],[5,"wl_egl_window_create","","",null,null],[5,"wl_egl_window_destroy","","",null,null],[5,"wl_egl_window_resize","","",null,null],[5,"wl_egl_window_get_attached_size","","",null,null],[7,"RUST_MANAGED","wayland_sys","Magic static for wayland objects managed by wayland-client…",null,null],[14,"ffi_dispatch","","",null,null],[11,"from","wayland_sys::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_sys::client","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","wayland_sys::server","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_sys::egl","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]]],"p":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[4,"wl_egl_window"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);