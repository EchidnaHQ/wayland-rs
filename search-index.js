var searchIndex={};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","i":[[3,"DispatchData","wayland_client","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[3,"UserData","","A wrapper for user data, able to store any type, and…",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,[[]]],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,null],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",1,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[10,"from_raw","","Construct a message from its raw representation",1,[[["message"]],["result"]]],[10,"into_raw","","Turn this message into its raw representation",1,[[["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,[[["u32"]],["result"]]],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"AnonymousObject","","Anonymous interface",null,null],[3,"Display","","A connection to a wayland server",null,null],[3,"ProtocolError","","A protocol error",null,null],[12,"code","","The error code associated with the error",2,null],[12,"object_id","","The id of the object that caused the error",2,null],[12,"object_interface","","The interface of the object that caused the error",2,null],[12,"message","","The message sent by the server describing the error",2,null],[3,"EventQueue","","An event queue for protocol messages",null,null],[3,"QueueToken","","A token representing this event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[3,"GlobalManager","","An utility to manage global objects",null,null],[3,"Attached","","A handle to a proxy that has been attached to an event queue",null,null],[3,"Main","","A main handle to a proxy",null,null],[3,"Proxy","","An handle to a wayland proxy",null,null],[3,"RawEvent","","An generic event",null,null],[12,"interface","","Interface of the associated object",3,null],[12,"opcode","","Opcode of the event",3,null],[12,"name","","Name of the event",3,null],[12,"args","","Arguments of the message",3,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to…",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and…",4,null],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",4,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of…",4,null],[13,"InvalidName","","The provided socket name is invalid",4,null],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",4,null],[4,"GlobalError","","An error that occurred trying to bind a global",null,null],[13,"Missing","","The requested global was missing",5,null],[13,"VersionTooLow","","The global advertised by the server has a lower version…",5,null],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",null,null],[13,"New","","A new global was created",6,null],[12,"id","wayland_client::GlobalEvent","Id of the new global",7,null],[12,"interface","","Interface of the new global",7,null],[12,"version","","Maximum supported version of the new global",7,null],[13,"Removed","wayland_client","A global was removed",6,null],[12,"id","wayland_client::GlobalEvent","Id of the removed global",8,null],[12,"interface","","Interface of the removed global",8,null],[4,"ProxyMap","wayland_client","This type only exists for type-level compatibility with…",null,null],[4,"Argument","","Enum of possible argument in an event",null,null],[13,"Int","","i32",9,null],[13,"Uint","","u32",9,null],[13,"Float","","float",9,null],[13,"Str","","CString",9,null],[13,"Object","","id of a wayland object",9,null],[13,"NewId","","id of a newly created wayland object",9,null],[13,"Array","","Vec",9,null],[13,"Fd","","RawFd",9,null],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents…",10,[[],[["connecterror"],["display"],["result",["display","connecterror"]]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given…",10,[[["osstring"],["into",["osstring"]]],[["connecterror"],["display"],["result",["display","connecterror"]]]]],[11,"from_fd","","Attempt to use an already connected unix socket on given…",10,[[["rawfd"]],[["connecterror"],["display"],["result",["display","connecterror"]]]]],[11,"flush","","Non-blocking write to the server",10,[[["self"]],["result"]]],[11,"create_event_queue","","Create a new event queue associated with this wayland…",10,[[["self"]],["eventqueue"]]],[11,"protocol_error","","Retrieve the last protocol error if any occured",10,[[["self"]],[["protocolerror"],["option",["protocolerror"]]]]],[11,"get_connection_fd","","Retrieve the file descriptor associated with the wayland…",10,[[["self"]],["rawfd"]]],[11,"from_external_display","","Create a Display and from an external display",10,[[],["display"]]],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",10,[[["self"]]]],[11,"dispatch","","Dispatches events from the internal buffer.",11,[[["self"],["t"],["f"]],[["u32"],["result",["u32"]]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",11,[[["self"],["t"],["f"]],[["u32"],["result",["u32"]]]]],[11,"sync_roundtrip","","Synchronous roundtrip",11,[[["self"],["t"],["f"]],[["u32"],["result",["u32"]]]]],[11,"token","","Create a new token associated with this event queue",11,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an concurrent read",11,[[["self"]],[["option",["readeventsguard"]],["readeventsguard"]]]],[11,"display","","Access the `Display` of the connection",11,[[["self"]],["display"]]],[11,"read_events","","Read events",12,[[],["result"]]],[11,"cancel","","Cancel the read",12,[[]]],[11,"new","","Create a global manager handling a registry",13,[[["attached"]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",13,[[["f"],["attached"]],["globalmanager"]]],[11,"instantiate_exact","","Instantiate a global with a specific version",13,[[["u32"],["self"]],[["result",["main","globalerror"]],["main"],["globalerror"]]]],[11,"instantiate_range","","Instantiate a global from a version range",13,[[["u32"],["self"]],[["result",["main","globalerror"]],["main"],["globalerror"]]]],[11,"list","","Retrieve the list of currently known globals",13,[[["self"]],["vec"]]],[11,"send","","Send a request creating an object through this object",14,[[["option",["u32"]],["u32"],["self"]],[["option",["main"]],["main"]]]],[11,"is_alive","","Check if the object associated with this proxy is still…",14,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object…",14,[[["self"]],["u32"]]],[11,"id","","Retrieve the object id of this wayland object",14,[[["self"]],["u32"]]],[11,"user_data","","Access the UserData associated to this object",14,[[["self"]],["userdata"]]],[11,"equals","","Check if the other proxy refers to the same underlying…",14,[[["self"],["proxy"]],["bool"]]],[11,"attach","","Attach this proxy to the event queue represented by this…",14,[[["self"],["queuetoken"]],["attached"]]],[11,"anonymize","","Erase the actual type of this proxy",14,[[],[["proxy",["anonymousobject"]],["anonymousobject"]]]],[11,"deanonymize","","Attempt to recover the typed variant of an anonymous proxy",14,[[],[["proxy"],["result",["proxy"]]]]],[11,"detach","","Create a non-attached handle from this one",15,[[["self"]],["i"]]],[11,"assign","","Assign this object to given filter",16,[[["filter"],["self"]]]],[11,"quick_assign","","Shorthand for assigning a closure to an object",16,[[["self"],["f"]]]],[11,"deanonymize","","Attempt to recover the typed variant of an anonymous proxy",16,[[],[["result",["main"]],["main"]]]],[11,"from_c_ptr","","Create a `Main` instance from a C pointer",16,[[],["main"]]],[11,"is_external","","Check whether this proxy is managed by the library or not",14,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",14,[[["self"]]]],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",14,[[],["proxy"]]],[11,"get","","Unusable method only existing for type-level compatibility",17,[[["self"],["u32"]],[["option",["proxy"]],["proxy"]]]],[11,"get_new","","Unusable method only existing for type-level compatibility",17,[[["self"],["u32"]],[["option",["main"]],["main"]]]],[0,"sys","","C-associated types",null,null],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",null,null],[4,"wl_proxy","wayland_client::sys::client","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"wl_display_connect_to_fd","","",null,[[["i32"]]]],[5,"wl_display_connect","","",null,[[]]],[5,"wl_display_disconnect","","",null,[[]]],[5,"wl_display_get_fd","","",null,[[],["i32"]]],[5,"wl_display_roundtrip","","",null,[[],["i32"]]],[5,"wl_display_read_events","","",null,[[],["i32"]]],[5,"wl_display_prepare_read","","",null,[[],["i32"]]],[5,"wl_display_cancel_read","","",null,[[]]],[5,"wl_display_dispatch","","",null,[[],["i32"]]],[5,"wl_display_dispatch_pending","","",null,[[],["i32"]]],[5,"wl_display_get_error","","",null,[[],["i32"]]],[5,"wl_display_get_protocol_error","","",null,[[],["u32"]]],[5,"wl_display_flush","","",null,[[],["i32"]]],[5,"wl_event_queue_destroy","","",null,[[]]],[5,"wl_display_create_queue","","",null,[[]]],[5,"wl_display_roundtrip_queue","","",null,[[],["i32"]]],[5,"wl_display_prepare_read_queue","","",null,[[],["i32"]]],[5,"wl_display_dispatch_queue","","",null,[[],["i32"]]],[5,"wl_display_dispatch_queue_pending","","",null,[[],["i32"]]],[5,"wl_proxy_create","","",null,[[]]],[5,"wl_proxy_destroy","","",null,[[]]],[5,"wl_proxy_add_listener","","",null,[[],["i32"]]],[5,"wl_proxy_get_listener","","",null,[[]]],[5,"wl_proxy_add_dispatcher","","",null,[[],["i32"]]],[5,"wl_proxy_marshal_array_constructor","","",null,[[["u32"]]]],[5,"wl_proxy_marshal_array_constructor_versioned","","",null,[[["u32"]]]],[5,"wl_proxy_marshal_array","","",null,[[["u32"]]]],[5,"wl_proxy_set_user_data","","",null,[[]]],[5,"wl_proxy_get_user_data","","",null,[[]]],[5,"wl_proxy_get_id","","",null,[[],["u32"]]],[5,"wl_proxy_get_class","","",null,[[]]],[5,"wl_proxy_set_queue","","",null,[[]]],[5,"wl_proxy_get_version","","",null,[[],["u32"]]],[5,"wl_proxy_create_wrapper","","",null,[[]]],[5,"wl_proxy_wrapper_destroy","","",null,[[]]],[5,"wl_log_set_handler_client","","",null,[[]]],[5,"wl_list_init","","",null,[[]]],[5,"wl_list_insert","","",null,[[]]],[5,"wl_list_remove","","",null,[[]]],[5,"wl_list_length","","",null,[[],["i32"]]],[5,"wl_list_empty","","",null,[[],["i32"]]],[5,"wl_list_insert_list","","",null,[[]]],[5,"wl_array_init","","",null,[[]]],[5,"wl_array_release","","",null,[[]]],[5,"wl_array_add","","",null,[[["usize"]]]],[5,"wl_array_copy","","",null,[[]]],[5,"wl_proxy_marshal_constructor","","",null,[[["u32"]]]],[5,"wl_proxy_marshal_constructor_versioned","","",null,[[["u32"]]]],[5,"wl_proxy_marshal","","",null,[[["u32"]]]],[5,"is_lib_available","","",null,[[],["bool"]]],[0,"common","wayland_client::sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_client::sys::common","",null,null],[12,"name","","",18,null],[12,"signature","","",18,null],[12,"types","","",18,null],[3,"wl_interface","","",null,null],[12,"name","","",19,null],[12,"version","","",19,null],[12,"request_count","","",19,null],[12,"requests","","",19,null],[12,"event_count","","",19,null],[12,"events","","",19,null],[3,"wl_list","","",null,null],[12,"prev","","",20,null],[12,"next","","",20,null],[3,"wl_array","","",null,null],[12,"size","","",21,null],[12,"alloc","","",21,null],[12,"data","","",21,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",null,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",null,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",null,[[["i32"]],["i32"]]],[19,"wl_argument","","",null,null],[12,"i","","",22,null],[12,"u","","",22,null],[12,"f","","",22,null],[12,"s","","",22,null],[12,"o","","",22,null],[12,"n","","",22,null],[12,"a","","",22,null],[12,"h","","",22,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"protocol","wayland_client","",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","server couldn't find object",23,null],[13,"InvalidMethod","","method doesn't exist on the specified interface",23,null],[13,"NoMemory","","server is out of memory",23,null],[4,"Request","","",null,null],[13,"Sync","","asynchronous roundtrip",24,null],[13,"GetRegistry","","get global registry object",24,null],[4,"Event","","",null,null],[13,"Error","","fatal error event",25,null],[12,"object_id","wayland_client::protocol::wl_display::Event","",26,null],[12,"code","","",26,null],[12,"message","","",26,null],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",25,null],[12,"id","wayland_client::protocol::wl_display::Event","",27,null],[7,"wl_display_requests","wayland_client::protocol::wl_display","C-representation of the messages of this interface, for…",null,null],[7,"wl_display_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_display_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_REGISTRY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ERROR_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DELETE_ID_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",23,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",23,[[["self"]],["u32"]]],[11,"sync","","asynchronous roundtrip",28,[[["self"]],[["main",["wlcallback"]],["wlcallback"]]]],[11,"get_registry","","get global registry object",28,[[["self"]],[["wlregistry"],["main",["wlregistry"]]]]],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[4,"Request","","",null,null],[13,"Bind","","bind an object to the display",29,null],[12,"name","wayland_client::protocol::wl_registry::Request","",30,null],[12,"id","","",30,null],[4,"Event","wayland_client::protocol::wl_registry","",null,null],[13,"Global","","announce global object",31,null],[12,"name","wayland_client::protocol::wl_registry::Event","",32,null],[12,"interface","","",32,null],[12,"version","","",32,null],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",31,null],[12,"name","wayland_client::protocol::wl_registry::Event","",33,null],[7,"wl_registry_requests","wayland_client::protocol::wl_registry","C-representation of the messages of this interface, for…",null,null],[7,"wl_registry_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_registry_interface","","C representation of this interface, for interop",null,null],[17,"REQ_BIND_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GLOBAL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_GLOBAL_REMOVE_SINCE","","The minimal object version supporting this event",null,null],[11,"bind","","bind an object to the display",34,[[["u32"],["self"]],[["from",["proxy"]],["main"],["proxy"],["interface"],["asref",["proxy"]]]]],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",35,null],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",36,null],[7,"wl_callback_events","wayland_client::protocol::wl_callback","C-representation of the messages of this interface, for…",null,null],[7,"wl_callback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",37,null],[13,"CreateRegion","","create new region",37,null],[4,"Event","","",null,null],[7,"wl_compositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_compositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",null,null],[11,"create_surface","","create new surface",38,[[["self"]],[["wlsurface"],["main",["wlsurface"]]]]],[11,"create_region","","create new region",38,[[["self"]],[["main",["wlregion"]],["wlregion"]]]],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",39,null],[12,"offset","wayland_client::protocol::wl_shm_pool::Request","",40,null],[12,"width","","",40,null],[12,"height","","",40,null],[12,"stride","","",40,null],[12,"format","","",40,null],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",39,null],[13,"Resize","","change the size of the pool mapping",39,null],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",41,null],[4,"Event","wayland_client::protocol::wl_shm_pool","",null,null],[7,"wl_shm_pool_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_pool_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[11,"create_buffer","","create a buffer from the pool",42,[[["format"],["self"],["i32"]],[["wlbuffer"],["main",["wlbuffer"]]]]],[11,"destroy","","destroy the pool",42,[[["self"]]]],[11,"resize","","change the size of the pool mapping",42,[[["self"],["i32"]]]],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",43,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",43,null],[13,"InvalidFd","","mmapping the file descriptor failed",43,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",44,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",44,null],[13,"C8","","8-bit color index format, [7:0] C",44,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",44,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",44,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",44,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",44,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",44,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",44,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",44,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",44,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",44,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",44,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",44,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",44,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",44,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",44,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",44,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",44,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",44,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",44,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",44,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",44,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",44,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",44,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",44,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",44,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",44,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",44,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",44,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",44,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",44,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",44,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",44,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",44,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",44,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",44,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",44,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",44,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",44,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",44,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",44,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",44,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",44,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",44,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",44,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",44,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",44,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",44,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",44,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",44,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",44,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",44,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",44,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",44,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",44,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",44,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",44,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",45,null],[12,"fd","wayland_client::protocol::wl_shm::Request","",46,null],[12,"size","","",46,null],[4,"Event","wayland_client::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",47,null],[12,"format","wayland_client::protocol::wl_shm::Event","",48,null],[7,"wl_shm_requests","wayland_client::protocol::wl_shm","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_POOL_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",43,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",43,[[["self"]],["u32"]]],[11,"from_raw","","",44,[[["u32"]],[["format"],["option",["format"]]]]],[11,"to_raw","","",44,[[["self"]],["u32"]]],[11,"create_pool","","create a shm pool",49,[[["rawfd"],["self"],["i32"]],[["main",["wlshmpool"]],["wlshmpool"]]]],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",50,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",51,null],[7,"wl_buffer_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[11,"destroy","","destroy a buffer",52,[[["self"]]]],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",53,null],[13,"InvalidActionMask","","action mask contains invalid values",53,null],[13,"InvalidAction","","action argument has an invalid value",53,null],[13,"InvalidOffer","","offer doesn't accept this request",53,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",54,null],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",55,null],[12,"mime_type","","",55,null],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",54,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",56,null],[12,"fd","","",56,null],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",54,null],[13,"Finish","","the offer will no longer be used",54,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",54,null],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",57,null],[12,"preferred_action","","",57,null],[4,"Event","wayland_client::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",58,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",59,null],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",58,null],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",60,null],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",58,null],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",61,null],[7,"wl_data_offer_requests","wayland_client::protocol::wl_data_offer","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_ACCEPT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",53,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",53,[[["self"]],["u32"]]],[11,"accept","","accept one of the offered mime types",62,[[["u32"],["option",["string"]],["self"],["string"]]]],[11,"receive","","request that the data is transferred",62,[[["rawfd"],["self"],["string"]]]],[11,"destroy","","destroy data offer",62,[[["self"]]]],[11,"finish","","the offer will no longer be used",62,[[["self"]]]],[11,"set_actions","","set the available/preferred drag-and-drop actions",62,[[["u32"],["self"]]]],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",63,null],[13,"InvalidSource","","source doesn't accept this request",63,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",64,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",65,null],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",64,null],[13,"SetActions","","set the available drag-and-drop actions",64,null],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",66,null],[4,"Event","wayland_client::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",67,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",68,null],[13,"Send","wayland_client::protocol::wl_data_source","send the data",67,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",69,null],[12,"fd","","",69,null],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",67,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",67,null],[13,"DndFinished","","the drag-and-drop operation concluded",67,null],[13,"Action","","notify the selected action",67,null],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",70,null],[7,"wl_data_source_requests","wayland_client::protocol::wl_data_source","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",63,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"offer","","add an offered mime type",71,[[["self"],["string"]]]],[11,"destroy","","destroy the data source",71,[[["self"]]]],[11,"set_actions","","set the available drag-and-drop actions",71,[[["u32"],["self"]]]],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",72,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",73,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",74,null],[12,"origin","","",74,null],[12,"icon","","",74,null],[12,"serial","","",74,null],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",73,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",75,null],[12,"serial","","",75,null],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",73,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",76,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",77,null],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",76,null],[12,"serial","wayland_client::protocol::wl_data_device::Event","",78,null],[12,"surface","","",78,null],[12,"x","","",78,null],[12,"y","","",78,null],[12,"id","","",78,null],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",76,null],[13,"Motion","","drag-and-drop session motion",76,null],[12,"time","wayland_client::protocol::wl_data_device::Event","",79,null],[12,"x","","",79,null],[12,"y","","",79,null],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",76,null],[13,"Selection","","advertise new selection",76,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",80,null],[7,"wl_data_device_requests","wayland_client::protocol::wl_data_device","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_START_DRAG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",72,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[11,"start_drag","","start drag-and-drop operation",81,[[["wlsurface"],["option",["wlsurface"]],["option",["wldatasource"]],["u32"],["self"],["wldatasource"]]]],[11,"set_selection","","copy data to the selection",81,[[["u32"],["option",["wldatasource"]],["self"],["wldatasource"]]]],[11,"release","","destroy data device",81,[[["self"]]]],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",82,null],[13,"GetDataDevice","","create a new data device",82,null],[12,"seat","wayland_client::protocol::wl_data_device_manager::Request","",83,null],[4,"Event","wayland_client::protocol::wl_data_device_manager","",null,null],[7,"wl_data_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[18,"None","","no action",84,null],[18,"Copy","","copy action",84,null],[18,"Move","","move action",84,null],[18,"Ask","","ask action",84,null],[11,"empty","","Returns an empty set of flags",84,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",84,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",84,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",84,[[["u32"]],[["dndaction"],["option",["dndaction"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",84,[[["u32"]],["dndaction"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",84,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",84,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",84,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",84,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",84,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",84,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",84,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",84,[[["self"],["dndaction"],["bool"]]]],[11,"from_raw","","",84,[[["u32"]],[["option",["dndaction"]],["dndaction"]]]],[11,"to_raw","","",84,[[["self"]],["u32"]]],[11,"create_data_source","","create a new data source",85,[[["self"]],[["wldatasource"],["main",["wldatasource"]]]]],[11,"get_data_device","","create a new data device",85,[[["wlseat"],["self"]],[["wldatadevice"],["main",["wldatadevice"]]]]],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",86,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",87,null],[12,"surface","wayland_client::protocol::wl_shell::Request","",88,null],[4,"Event","wayland_client::protocol::wl_shell","",null,null],[7,"wl_shell_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",86,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",86,[[["self"]],["u32"]]],[11,"get_shell_surface","","create a shell surface from a surface",89,[[["self"],["wlsurface"]],[["wlshellsurface"],["main",["wlshellsurface"]]]]],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",90,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on…",90,null],[13,"Driver","","switch output mode to the smallest mode that can fit the…",90,null],[13,"Fill","","no upscaling, center on output and add black borders to…",90,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",91,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",92,null],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",91,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",93,null],[12,"serial","","",93,null],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",91,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",94,null],[12,"serial","","",94,null],[12,"edges","","",94,null],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",91,null],[13,"SetTransient","","make the surface a transient surface",91,null],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",95,null],[12,"x","","",95,null],[12,"y","","",95,null],[12,"flags","","",95,null],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",91,null],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",96,null],[12,"framerate","","",96,null],[12,"output","","",96,null],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",91,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",97,null],[12,"serial","","",97,null],[12,"parent","","",97,null],[12,"x","","",97,null],[12,"y","","",97,null],[12,"flags","","",97,null],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",91,null],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",98,null],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",91,null],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",99,null],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",91,null],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",100,null],[4,"Event","wayland_client::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",101,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",102,null],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",101,null],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",103,null],[12,"width","","",103,null],[12,"height","","",103,null],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",101,null],[7,"wl_shell_surface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[18,"None","","no edge",104,null],[18,"Top","","top edge",104,null],[18,"Bottom","","bottom edge",104,null],[18,"Left","","left edge",104,null],[18,"TopLeft","","top and left edges",104,null],[18,"BottomLeft","","bottom and left edges",104,null],[18,"Right","","right edge",104,null],[18,"TopRight","","top and right edges",104,null],[18,"BottomRight","","bottom and right edges",104,null],[11,"empty","","Returns an empty set of flags",104,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",104,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",104,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",104,[[["u32"]],[["resize"],["option",["resize"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",104,[[["u32"]],["resize"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",104,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",104,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",104,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",104,[[["resize"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",104,[[["resize"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",104,[[["resize"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",104,[[["resize"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",104,[[["resize"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",104,[[["resize"],["self"],["bool"]]]],[11,"from_raw","","",104,[[["u32"]],[["resize"],["option",["resize"]]]]],[11,"to_raw","","",104,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",105,null],[11,"empty","","Returns an empty set of flags",105,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",105,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",105,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",105,[[["u32"]],[["transient"],["option",["transient"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",105,[[["u32"]],["transient"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",105,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",105,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",105,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",105,[[["transient"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",105,[[["transient"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",105,[[["transient"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",105,[[["transient"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",105,[[["transient"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",105,[[["transient"],["self"],["bool"]]]],[11,"from_raw","","",105,[[["u32"]],[["transient"],["option",["transient"]]]]],[11,"to_raw","","",105,[[["self"]],["u32"]]],[11,"from_raw","","",90,[[["u32"]],[["option",["fullscreenmethod"]],["fullscreenmethod"]]]],[11,"to_raw","","",90,[[["self"]],["u32"]]],[11,"pong","","respond to a ping event",106,[[["u32"],["self"]]]],[11,"_move","","start an interactive move",106,[[["wlseat"],["self"],["u32"]]]],[11,"resize","","start an interactive resize",106,[[["resize"],["wlseat"],["u32"],["self"]]]],[11,"set_toplevel","","make the surface a toplevel surface",106,[[["self"]]]],[11,"set_transient","","make the surface a transient surface",106,[[["i32"],["transient"],["self"],["wlsurface"]]]],[11,"set_fullscreen","","make the surface a fullscreen surface",106,[[["u32"],["option",["wloutput"]],["fullscreenmethod"],["wloutput"],["self"]]]],[11,"set_popup","","make the surface a popup surface",106,[[["wlseat"],["u32"],["i32"],["transient"],["self"],["wlsurface"]]]],[11,"set_maximized","","make the surface a maximized surface",106,[[["wloutput"],["option",["wloutput"]],["self"]]]],[11,"set_title","","set surface title",106,[[["self"],["string"]]]],[11,"set_class","","set surface class",106,[[["self"],["string"]]]],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",107,null],[13,"InvalidTransform","","buffer transform value is invalid",107,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",108,null],[13,"Attach","","set the surface contents",108,null],[12,"buffer","wayland_client::protocol::wl_surface::Request","",109,null],[12,"x","","",109,null],[12,"y","","",109,null],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",108,null],[12,"x","wayland_client::protocol::wl_surface::Request","",110,null],[12,"y","","",110,null],[12,"width","","",110,null],[12,"height","","",110,null],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",108,null],[13,"SetOpaqueRegion","","set opaque region",108,null],[12,"region","wayland_client::protocol::wl_surface::Request","",111,null],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",108,null],[12,"region","wayland_client::protocol::wl_surface::Request","",112,null],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",108,null],[13,"SetBufferTransform","","sets the buffer transformation",108,null],[12,"transform","wayland_client::protocol::wl_surface::Request","",113,null],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",108,null],[12,"scale","wayland_client::protocol::wl_surface::Request","",114,null],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",108,null],[12,"x","wayland_client::protocol::wl_surface::Request","",115,null],[12,"y","","",115,null],[12,"width","","",115,null],[12,"height","","",115,null],[4,"Event","wayland_client::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",116,null],[12,"output","wayland_client::protocol::wl_surface::Event","",117,null],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",116,null],[12,"output","wayland_client::protocol::wl_surface::Event","",118,null],[7,"wl_surface_requests","wayland_client::protocol::wl_surface","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",107,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",107,[[["self"]],["u32"]]],[11,"destroy","","delete surface",119,[[["self"]]]],[11,"attach","","set the surface contents",119,[[["option",["wlbuffer"]],["wlbuffer"],["i32"],["self"]]]],[11,"damage","","mark part of the surface damaged",119,[[["self"],["i32"]]]],[11,"frame","","request a frame throttling hint",119,[[["self"]],[["main",["wlcallback"]],["wlcallback"]]]],[11,"set_opaque_region","","set opaque region",119,[[["option",["wlregion"]],["self"],["wlregion"]]]],[11,"set_input_region","","set input region",119,[[["option",["wlregion"]],["self"],["wlregion"]]]],[11,"commit","","commit pending surface state",119,[[["self"]]]],[11,"set_buffer_transform","","sets the buffer transformation",119,[[["self"],["transform"]]]],[11,"set_buffer_scale","","sets the buffer scaling factor",119,[[["self"],["i32"]]]],[11,"damage_buffer","","mark part of the surface damaged using buffer coordinates",119,[[["self"],["i32"]]]],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",120,null],[13,"GetKeyboard","","return keyboard object",120,null],[13,"GetTouch","","return touch object",120,null],[13,"Release","","release the seat object",120,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",121,null],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",122,null],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",121,null],[12,"name","wayland_client::protocol::wl_seat::Event","",123,null],[7,"wl_seat_requests","wayland_client::protocol::wl_seat","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_POINTER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[18,"Pointer","","the seat has pointer devices",124,null],[18,"Keyboard","","the seat has one or more keyboards",124,null],[18,"Touch","","the seat has touch devices",124,null],[11,"empty","","Returns an empty set of flags",124,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",124,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",124,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",124,[[["u32"]],[["capability"],["option",["capability"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",124,[[["u32"]],["capability"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",124,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",124,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",124,[[["capability"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",124,[[["capability"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",124,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",124,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",124,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",124,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",124,[[["u32"]],[["capability"],["option",["capability"]]]]],[11,"to_raw","","",124,[[["self"]],["u32"]]],[11,"get_pointer","","return pointer object",125,[[["self"]],[["main",["wlpointer"]],["wlpointer"]]]],[11,"get_keyboard","","return keyboard object",125,[[["self"]],[["main",["wlkeyboard"]],["wlkeyboard"]]]],[11,"get_touch","","return touch object",125,[[["self"]],[["main",["wltouch"]],["wltouch"]]]],[11,"release","","release the seat object",125,[[["self"]]]],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",126,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",127,null],[13,"Pressed","","the button is pressed",127,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",128,null],[13,"HorizontalScroll","","horizontal axis",128,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel rotation",129,null],[13,"Finger","","finger on a touch surface",129,null],[13,"Continuous","","continuous coordinate space",129,null],[13,"WheelTilt","","a physical wheel tilt",129,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",130,null],[12,"serial","wayland_client::protocol::wl_pointer::Request","",131,null],[12,"surface","","",131,null],[12,"hotspot_x","","",131,null],[12,"hotspot_y","","",131,null],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",130,null],[4,"Event","","",null,null],[13,"Enter","","enter event",132,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",133,null],[12,"surface","","",133,null],[12,"surface_x","","",133,null],[12,"surface_y","","",133,null],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",132,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",134,null],[12,"surface","","",134,null],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",132,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",135,null],[12,"surface_x","","",135,null],[12,"surface_y","","",135,null],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",132,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",136,null],[12,"time","","",136,null],[12,"button","","",136,null],[12,"state","","",136,null],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",132,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",137,null],[12,"axis","","",137,null],[12,"value","","",137,null],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",132,null],[13,"AxisSource","","axis source event",132,null],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",138,null],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",132,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",139,null],[12,"axis","","",139,null],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",132,null],[12,"axis","wayland_client::protocol::wl_pointer::Event","",140,null],[12,"discrete","","",140,null],[7,"wl_pointer_requests","wayland_client::protocol::wl_pointer","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",126,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",126,[[["self"]],["u32"]]],[11,"from_raw","","",127,[[["u32"]],[["buttonstate"],["option",["buttonstate"]]]]],[11,"to_raw","","",127,[[["self"]],["u32"]]],[11,"from_raw","","",128,[[["u32"]],[["axis"],["option",["axis"]]]]],[11,"to_raw","","",128,[[["self"]],["u32"]]],[11,"from_raw","","",129,[[["u32"]],[["axissource"],["option",["axissource"]]]]],[11,"to_raw","","",129,[[["self"]],["u32"]]],[11,"set_cursor","","set the pointer surface",141,[[["option",["wlsurface"]],["u32"],["i32"],["self"],["wlsurface"]]]],[11,"release","","release the pointer object",141,[[["self"]]]],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",142,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",142,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",143,null],[13,"Pressed","","key is pressed",143,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",144,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",145,null],[12,"format","wayland_client::protocol::wl_keyboard::Event","",146,null],[12,"fd","","",146,null],[12,"size","","",146,null],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",145,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",147,null],[12,"surface","","",147,null],[12,"keys","","",147,null],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",145,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",148,null],[12,"surface","","",148,null],[13,"Key","wayland_client::protocol::wl_keyboard","key event",145,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",149,null],[12,"time","","",149,null],[12,"key","","",149,null],[12,"state","","",149,null],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",145,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",150,null],[12,"mods_depressed","","",150,null],[12,"mods_latched","","",150,null],[12,"mods_locked","","",150,null],[12,"group","","",150,null],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",145,null],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",151,null],[12,"delay","","",151,null],[7,"wl_keyboard_requests","wayland_client::protocol::wl_keyboard","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",142,[[["u32"]],[["keymapformat"],["option",["keymapformat"]]]]],[11,"to_raw","","",142,[[["self"]],["u32"]]],[11,"from_raw","","",143,[[["u32"]],[["keystate"],["option",["keystate"]]]]],[11,"to_raw","","",143,[[["self"]],["u32"]]],[11,"release","","release the keyboard object",152,[[["self"]]]],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",153,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",154,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",155,null],[12,"time","","",155,null],[12,"surface","","",155,null],[12,"id","","",155,null],[12,"x","","",155,null],[12,"y","","",155,null],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",154,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",156,null],[12,"time","","",156,null],[12,"id","","",156,null],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",154,null],[12,"time","wayland_client::protocol::wl_touch::Event","",157,null],[12,"id","","",157,null],[12,"x","","",157,null],[12,"y","","",157,null],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",154,null],[13,"Cancel","","touch session cancelled",154,null],[13,"Shape","","update shape of touch point",154,null],[12,"id","wayland_client::protocol::wl_touch::Event","",158,null],[12,"major","","",158,null],[12,"minor","","",158,null],[13,"Orientation","wayland_client::protocol::wl_touch","update orientation of touch point",154,null],[12,"id","wayland_client::protocol::wl_touch::Event","",159,null],[12,"orientation","","",159,null],[7,"wl_touch_requests","wayland_client::protocol::wl_touch","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",null,null],[11,"release","","release the touch object",160,[[["self"]]]],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"Mode","wayland_client::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",161,null],[13,"None","","no geometry",161,null],[13,"HorizontalRgb","","horizontal RGB",161,null],[13,"HorizontalBgr","","horizontal BGR",161,null],[13,"VerticalRgb","","vertical RGB",161,null],[13,"VerticalBgr","","vertical BGR",161,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",162,null],[13,"_90","","90 degrees counter-clockwise",162,null],[13,"_180","","180 degrees counter-clockwise",162,null],[13,"_270","","270 degrees counter-clockwise",162,null],[13,"Flipped","","180 degree flip around a vertical axis",162,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",162,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",162,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",162,null],[4,"Request","","",null,null],[13,"Release","","release the output object",163,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",164,null],[12,"x","wayland_client::protocol::wl_output::Event","",165,null],[12,"y","","",165,null],[12,"physical_width","","",165,null],[12,"physical_height","","",165,null],[12,"subpixel","","",165,null],[12,"make","","",165,null],[12,"model","","",165,null],[12,"transform","","",165,null],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",164,null],[12,"flags","wayland_client::protocol::wl_output::Event","",166,null],[12,"width","","",166,null],[12,"height","","",166,null],[12,"refresh","","",166,null],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",164,null],[13,"Scale","","output scaling properties",164,null],[12,"factor","wayland_client::protocol::wl_output::Event","",167,null],[7,"wl_output_requests","wayland_client::protocol::wl_output","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",161,[[["u32"]],[["option",["subpixel"]],["subpixel"]]]],[11,"to_raw","","",161,[[["self"]],["u32"]]],[11,"from_raw","","",162,[[["u32"]],[["option",["transform"]],["transform"]]]],[11,"to_raw","","",162,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",168,null],[18,"Preferred","","indicates this is the preferred mode",168,null],[11,"empty","","Returns an empty set of flags",168,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",168,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",168,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",168,[[["u32"]],[["mode"],["option",["mode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",168,[[["u32"]],["mode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",168,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",168,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",168,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",168,[[["mode"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",168,[[["mode"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",168,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",168,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",168,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",168,[[["self"],["mode"],["bool"]]]],[11,"from_raw","","",168,[[["u32"]],[["option",["mode"]],["mode"]]]],[11,"to_raw","","",168,[[["self"]],["u32"]]],[11,"release","","release the output object",169,[[["self"]]]],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",170,null],[13,"Add","","add rectangle to region",170,null],[12,"x","wayland_client::protocol::wl_region::Request","",171,null],[12,"y","","",171,null],[12,"width","","",171,null],[12,"height","","",171,null],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",170,null],[12,"x","wayland_client::protocol::wl_region::Request","",172,null],[12,"y","","",172,null],[12,"width","","",172,null],[12,"height","","",172,null],[4,"Event","wayland_client::protocol::wl_region","",null,null],[7,"wl_region_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_region_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",null,null],[11,"destroy","","destroy region",173,[[["self"]]]],[11,"add","","add rectangle to region",173,[[["self"],["i32"]]]],[11,"subtract","","subtract rectangle from region",173,[[["self"],["i32"]]]],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",174,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",175,null],[13,"GetSubsurface","","give a surface the role sub-surface",175,null],[12,"surface","wayland_client::protocol::wl_subcompositor::Request","",176,null],[12,"parent","","",176,null],[4,"Event","wayland_client::protocol::wl_subcompositor","",null,null],[7,"wl_subcompositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subcompositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",174,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",174,[[["self"]],["u32"]]],[11,"destroy","","unbind from the subcompositor interface",177,[[["self"]]]],[11,"get_subsurface","","give a surface the role sub-surface",177,[[["self"],["wlsurface"]],[["main",["wlsubsurface"]],["wlsubsurface"]]]],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",178,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",179,null],[13,"SetPosition","","reposition the sub-surface",179,null],[12,"x","wayland_client::protocol::wl_subsurface::Request","",180,null],[12,"y","","",180,null],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",179,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",181,null],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",179,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",182,null],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",179,null],[13,"SetDesync","","set sub-surface to desynchronized mode",179,null],[4,"Event","","",null,null],[7,"wl_subsurface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subsurface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",178,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",178,[[["self"]],["u32"]]],[11,"destroy","","remove sub-surface interface",183,[[["self"]]]],[11,"set_position","","reposition the sub-surface",183,[[["self"],["i32"]]]],[11,"place_above","","restack the sub-surface",183,[[["self"],["wlsurface"]]]],[11,"place_below","","restack the sub-surface",183,[[["self"],["wlsurface"]]]],[11,"set_sync","","set sub-surface to synchronized mode",183,[[["self"]]]],[11,"set_desync","","set sub-surface to desynchronized mode",183,[[["self"]]]],[8,"GlobalImplementor","wayland_client","A trait for implementation of the global advertisement",null,null],[10,"new_global","","A new global of given interface has been instantiated and…",184,[[["self"],["main"],["dispatchdata"]]]],[11,"error","","A global was advertised but its version was lower than the…",184,[[["self"],["u32"],["dispatchdata"]]]],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",null,null],[14,"event_enum","","Generate an enum joining several objects events",null,null],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"into_any","","",185,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",185,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",185,[[["self"]],["any"]]],[11,"as_any_mut","","",185,[[["self"]],["any"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"into_any","","",186,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",186,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",186,[[["self"]],["any"]]],[11,"as_any_mut","","",186,[[["self"]],["any"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"into_any","","",187,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",187,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",187,[[["self"]],["any"]]],[11,"as_any_mut","","",187,[[["self"]],["any"]]],[11,"into_any_arc","","",187,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"into_any","","",188,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",188,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",188,[[["self"]],["any"]]],[11,"as_any_mut","","",188,[[["self"]],["any"]]],[11,"into_any_arc","","",188,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"into_any","","",189,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",189,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",189,[[["self"]],["any"]]],[11,"as_any_mut","","",189,[[["self"]],["any"]]],[11,"into_any_arc","","",189,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",10,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any_arc","","",10,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",2,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any_arc","","",2,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",11,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any_arc","","",11,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"into_any","","",190,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",190,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",190,[[["self"]],["any"]]],[11,"as_any_mut","","",190,[[["self"]],["any"]]],[11,"into_any_arc","","",190,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",12,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any_arc","","",12,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",13,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any_arc","","",13,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",15,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"into_any","","",16,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",16,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",16,[[["self"]],["any"]]],[11,"as_any_mut","","",16,[[["self"]],["any"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",14,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"into_any_arc","","",14,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",3,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"into_any_arc","","",3,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",4,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"into_any_arc","","",4,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",5,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any_arc","","",5,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",6,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"into_any_arc","","",6,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",17,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any_arc","","",17,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",9,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any_arc","","",9,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::sys::client","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"into_any","","",191,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",191,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",191,[[["self"]],["any"]]],[11,"as_any_mut","","",191,[[["self"]],["any"]]],[11,"into_any_arc","","",191,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"into_any","","",192,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",192,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",192,[[["self"]],["any"]]],[11,"as_any_mut","","",192,[[["self"]],["any"]]],[11,"into_any_arc","","",192,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"into_any","","",193,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",193,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",193,[[["self"]],["any"]]],[11,"as_any_mut","","",193,[[["self"]],["any"]]],[11,"into_any_arc","","",193,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::sys::common","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",18,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"into_any","","",19,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",19,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",19,[[["self"]],["any"]]],[11,"as_any_mut","","",19,[[["self"]],["any"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",20,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any_arc","","",20,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",21,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any_arc","","",21,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"into_any","","",22,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",22,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",22,[[["self"]],["any"]]],[11,"as_any_mut","","",22,[[["self"]],["any"]]],[11,"from","wayland_client::protocol::wl_display","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",28,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any_arc","","",28,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",23,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any_arc","","",23,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",24,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any_arc","","",24,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",25,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any_arc","","",25,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_registry","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",34,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any_arc","","",34,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",29,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any_arc","","",29,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",31,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any_arc","","",31,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_callback","",194,[[["t"]],["t"]]],[11,"into","","",194,[[],["u"]]],[11,"to_owned","","",194,[[["self"]],["t"]]],[11,"clone_into","","",194,[[["self"],["t"]]]],[11,"try_from","","",194,[[["u"]],["result"]]],[11,"try_into","","",194,[[],["result"]]],[11,"borrow","","",194,[[["self"]],["t"]]],[11,"borrow_mut","","",194,[[["self"]],["t"]]],[11,"type_id","","",194,[[["self"]],["typeid"]]],[11,"into_any","","",194,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",194,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",194,[[["self"]],["any"]]],[11,"as_any_mut","","",194,[[["self"]],["any"]]],[11,"into_any_arc","","",194,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"into_any","","",195,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",195,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",195,[[["self"]],["any"]]],[11,"as_any_mut","","",195,[[["self"]],["any"]]],[11,"into_any_arc","","",195,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",35,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any_arc","","",35,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_compositor","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",38,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"into_any_arc","","",38,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",37,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any_arc","","",37,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"into_any","","",196,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",196,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",196,[[["self"]],["any"]]],[11,"as_any_mut","","",196,[[["self"]],["any"]]],[11,"into_any_arc","","",196,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_shm_pool","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_any","","",42,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",42,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",42,[[["self"]],["any"]]],[11,"as_any_mut","","",42,[[["self"]],["any"]]],[11,"into_any_arc","","",42,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",39,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any_arc","","",39,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",197,[[["t"]],["t"]]],[11,"into","","",197,[[],["u"]]],[11,"try_from","","",197,[[["u"]],["result"]]],[11,"try_into","","",197,[[],["result"]]],[11,"borrow","","",197,[[["self"]],["t"]]],[11,"borrow_mut","","",197,[[["self"]],["t"]]],[11,"type_id","","",197,[[["self"]],["typeid"]]],[11,"into_any","","",197,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",197,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",197,[[["self"]],["any"]]],[11,"as_any_mut","","",197,[[["self"]],["any"]]],[11,"into_any_arc","","",197,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_shm","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",49,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"into_any_arc","","",49,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",43,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any_arc","","",43,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",44,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"into_any_arc","","",44,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_any","","",45,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",45,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"into_any_arc","","",45,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",47,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"into_any_arc","","",47,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_buffer","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",52,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"into_any_arc","","",52,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_any","","",50,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",50,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",50,[[["self"]],["any"]]],[11,"as_any_mut","","",50,[[["self"]],["any"]]],[11,"into_any_arc","","",50,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",51,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"into_any_arc","","",51,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_data_offer","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",62,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any_arc","","",62,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",53,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"into_any_arc","","",53,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",54,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"into_any_arc","","",54,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",58,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"into_any_arc","","",58,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_data_source","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",71,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any_arc","","",71,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",63,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any_arc","","",63,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_any","","",64,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",64,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",64,[[["self"]],["any"]]],[11,"as_any_mut","","",64,[[["self"]],["any"]]],[11,"into_any_arc","","",64,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",67,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"into_any_arc","","",67,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_data_device","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",81,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any_arc","","",81,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_any","","",72,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",72,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",72,[[["self"]],["any"]]],[11,"as_any_mut","","",72,[[["self"]],["any"]]],[11,"into_any_arc","","",72,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_any","","",73,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",73,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",73,[[["self"]],["any"]]],[11,"as_any_mut","","",73,[[["self"]],["any"]]],[11,"into_any_arc","","",73,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_any","","",76,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",76,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",76,[[["self"]],["any"]]],[11,"as_any_mut","","",76,[[["self"]],["any"]]],[11,"into_any_arc","","",76,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",84,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"into_any_arc","","",84,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",85,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"into_any_arc","","",85,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_any","","",82,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",82,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",82,[[["self"]],["any"]]],[11,"as_any_mut","","",82,[[["self"]],["any"]]],[11,"into_any_arc","","",82,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",198,[[["t"]],["t"]]],[11,"into","","",198,[[],["u"]]],[11,"try_from","","",198,[[["u"]],["result"]]],[11,"try_into","","",198,[[],["result"]]],[11,"borrow","","",198,[[["self"]],["t"]]],[11,"borrow_mut","","",198,[[["self"]],["t"]]],[11,"type_id","","",198,[[["self"]],["typeid"]]],[11,"into_any","","",198,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",198,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",198,[[["self"]],["any"]]],[11,"as_any_mut","","",198,[[["self"]],["any"]]],[11,"into_any_arc","","",198,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_shell","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",89,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"into_any_arc","","",89,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",86,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"into_any_arc","","",86,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",87,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"into_any_arc","","",87,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",199,[[["t"]],["t"]]],[11,"into","","",199,[[],["u"]]],[11,"try_from","","",199,[[["u"]],["result"]]],[11,"try_into","","",199,[[],["result"]]],[11,"borrow","","",199,[[["self"]],["t"]]],[11,"borrow_mut","","",199,[[["self"]],["t"]]],[11,"type_id","","",199,[[["self"]],["typeid"]]],[11,"into_any","","",199,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",199,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",199,[[["self"]],["any"]]],[11,"as_any_mut","","",199,[[["self"]],["any"]]],[11,"into_any_arc","","",199,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_shell_surface","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",104,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"into_any_arc","","",104,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",105,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"into_any_arc","","",105,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",106,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"into_any_arc","","",106,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_any","","",90,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",90,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",90,[[["self"]],["any"]]],[11,"as_any_mut","","",90,[[["self"]],["any"]]],[11,"into_any_arc","","",90,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",91,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"into_any_arc","","",91,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",101,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any_arc","","",101,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_surface","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"into_any","","",119,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",119,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",119,[[["self"]],["any"]]],[11,"as_any_mut","","",119,[[["self"]],["any"]]],[11,"into_any_arc","","",119,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"into_any","","",107,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",107,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",107,[[["self"]],["any"]]],[11,"as_any_mut","","",107,[[["self"]],["any"]]],[11,"into_any_arc","","",107,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"into_any","","",108,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",108,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"into_any_arc","","",108,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"into_any","","",116,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",116,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",116,[[["self"]],["any"]]],[11,"as_any_mut","","",116,[[["self"]],["any"]]],[11,"into_any_arc","","",116,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_seat","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"into_any","","",124,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",124,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",124,[[["self"]],["any"]]],[11,"as_any_mut","","",124,[[["self"]],["any"]]],[11,"into_any_arc","","",124,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"into_any","","",125,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",125,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",125,[[["self"]],["any"]]],[11,"as_any_mut","","",125,[[["self"]],["any"]]],[11,"into_any_arc","","",125,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"into_any","","",120,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",120,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",120,[[["self"]],["any"]]],[11,"as_any_mut","","",120,[[["self"]],["any"]]],[11,"into_any_arc","","",120,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"into_any","","",121,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",121,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",121,[[["self"]],["any"]]],[11,"as_any_mut","","",121,[[["self"]],["any"]]],[11,"into_any_arc","","",121,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_pointer","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"into_any","","",141,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",141,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",141,[[["self"]],["any"]]],[11,"as_any_mut","","",141,[[["self"]],["any"]]],[11,"into_any_arc","","",141,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"into_any","","",126,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",126,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",126,[[["self"]],["any"]]],[11,"as_any_mut","","",126,[[["self"]],["any"]]],[11,"into_any_arc","","",126,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"into_any","","",127,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",127,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",127,[[["self"]],["any"]]],[11,"as_any_mut","","",127,[[["self"]],["any"]]],[11,"into_any_arc","","",127,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"into_any","","",128,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",128,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",128,[[["self"]],["any"]]],[11,"as_any_mut","","",128,[[["self"]],["any"]]],[11,"into_any_arc","","",128,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"into_any","","",129,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",129,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",129,[[["self"]],["any"]]],[11,"as_any_mut","","",129,[[["self"]],["any"]]],[11,"into_any_arc","","",129,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"into_any","","",130,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",130,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",130,[[["self"]],["any"]]],[11,"as_any_mut","","",130,[[["self"]],["any"]]],[11,"into_any_arc","","",130,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"into_any","","",132,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",132,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",132,[[["self"]],["any"]]],[11,"as_any_mut","","",132,[[["self"]],["any"]]],[11,"into_any_arc","","",132,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_keyboard","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"into_any","","",152,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",152,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",152,[[["self"]],["any"]]],[11,"as_any_mut","","",152,[[["self"]],["any"]]],[11,"into_any_arc","","",152,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"into_any","","",142,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",142,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",142,[[["self"]],["any"]]],[11,"as_any_mut","","",142,[[["self"]],["any"]]],[11,"into_any_arc","","",142,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"into_any","","",143,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",143,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",143,[[["self"]],["any"]]],[11,"as_any_mut","","",143,[[["self"]],["any"]]],[11,"into_any_arc","","",143,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"into_any","","",144,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",144,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",144,[[["self"]],["any"]]],[11,"as_any_mut","","",144,[[["self"]],["any"]]],[11,"into_any_arc","","",144,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"into_any","","",145,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",145,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",145,[[["self"]],["any"]]],[11,"as_any_mut","","",145,[[["self"]],["any"]]],[11,"into_any_arc","","",145,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_touch","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"into_any","","",160,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",160,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",160,[[["self"]],["any"]]],[11,"as_any_mut","","",160,[[["self"]],["any"]]],[11,"into_any_arc","","",160,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"into_any","","",153,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",153,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",153,[[["self"]],["any"]]],[11,"as_any_mut","","",153,[[["self"]],["any"]]],[11,"into_any_arc","","",153,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"into_any","","",154,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",154,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",154,[[["self"]],["any"]]],[11,"as_any_mut","","",154,[[["self"]],["any"]]],[11,"into_any_arc","","",154,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_output","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"into_any","","",168,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",168,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",168,[[["self"]],["any"]]],[11,"as_any_mut","","",168,[[["self"]],["any"]]],[11,"into_any_arc","","",168,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"into_any","","",169,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",169,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",169,[[["self"]],["any"]]],[11,"as_any_mut","","",169,[[["self"]],["any"]]],[11,"into_any_arc","","",169,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"into_any","","",161,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",161,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",161,[[["self"]],["any"]]],[11,"as_any_mut","","",161,[[["self"]],["any"]]],[11,"into_any_arc","","",161,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"into_any","","",162,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",162,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",162,[[["self"]],["any"]]],[11,"as_any_mut","","",162,[[["self"]],["any"]]],[11,"into_any_arc","","",162,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"into_any","","",163,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",163,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",163,[[["self"]],["any"]]],[11,"as_any_mut","","",163,[[["self"]],["any"]]],[11,"into_any_arc","","",163,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"into_any","","",164,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",164,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",164,[[["self"]],["any"]]],[11,"as_any_mut","","",164,[[["self"]],["any"]]],[11,"into_any_arc","","",164,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_region","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"into_any","","",173,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",173,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",173,[[["self"]],["any"]]],[11,"as_any_mut","","",173,[[["self"]],["any"]]],[11,"into_any_arc","","",173,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"into_any","","",170,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",170,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",170,[[["self"]],["any"]]],[11,"as_any_mut","","",170,[[["self"]],["any"]]],[11,"into_any_arc","","",170,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",200,[[["t"]],["t"]]],[11,"into","","",200,[[],["u"]]],[11,"try_from","","",200,[[["u"]],["result"]]],[11,"try_into","","",200,[[],["result"]]],[11,"borrow","","",200,[[["self"]],["t"]]],[11,"borrow_mut","","",200,[[["self"]],["t"]]],[11,"type_id","","",200,[[["self"]],["typeid"]]],[11,"into_any","","",200,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",200,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",200,[[["self"]],["any"]]],[11,"as_any_mut","","",200,[[["self"]],["any"]]],[11,"into_any_arc","","",200,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_subcompositor","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"into_any","","",177,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",177,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",177,[[["self"]],["any"]]],[11,"as_any_mut","","",177,[[["self"]],["any"]]],[11,"into_any_arc","","",177,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"into_any","","",174,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",174,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",174,[[["self"]],["any"]]],[11,"as_any_mut","","",174,[[["self"]],["any"]]],[11,"into_any_arc","","",174,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"into_any","","",175,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",175,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",175,[[["self"]],["any"]]],[11,"as_any_mut","","",175,[[["self"]],["any"]]],[11,"into_any_arc","","",175,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",201,[[["t"]],["t"]]],[11,"into","","",201,[[],["u"]]],[11,"try_from","","",201,[[["u"]],["result"]]],[11,"try_into","","",201,[[],["result"]]],[11,"borrow","","",201,[[["self"]],["t"]]],[11,"borrow_mut","","",201,[[["self"]],["t"]]],[11,"type_id","","",201,[[["self"]],["typeid"]]],[11,"into_any","","",201,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",201,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",201,[[["self"]],["any"]]],[11,"as_any_mut","","",201,[[["self"]],["any"]]],[11,"into_any_arc","","",201,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_client::protocol::wl_subsurface","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"into_any","","",183,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",183,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",183,[[["self"]],["any"]]],[11,"as_any_mut","","",183,[[["self"]],["any"]]],[11,"into_any_arc","","",183,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"into_any","","",178,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",178,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",178,[[["self"]],["any"]]],[11,"as_any_mut","","",178,[[["self"]],["any"]]],[11,"into_any_arc","","",178,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"into_any","","",179,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",179,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",179,[[["self"]],["any"]]],[11,"as_any_mut","","",179,[[["self"]],["any"]]],[11,"into_any_arc","","",179,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"into_any","","",202,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",202,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",202,[[["self"]],["any"]]],[11,"as_any_mut","","",202,[[["self"]],["any"]]],[11,"into_any_arc","","",202,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"drop","wayland_client","",187,[[["self"]]]],[11,"is_destructor","","",188,[[["self"]],["bool"]]],[11,"opcode","","",188,[[["self"]],["u16"]]],[11,"since","","",188,[[["self"]],["u32"]]],[11,"child","","",188,[[["u16"],["u32"],["m"]],[["option",["object"]],["object"]]]],[11,"from_raw","","",188,[[["message"]],[["result",["nomessage"]],["nomessage"]]]],[11,"into_raw","","",188,[[["u32"]],["message"]]],[11,"from_raw_c","","",188,[[["u32"]],[["result",["nomessage"]],["nomessage"]]]],[11,"as_raw_c_in","","",188,[[["f"]],["t"]]],[11,"clone","","",186,[[["self"]],["filter"]]],[11,"drop","","",12,[[["self"]]]],[11,"as_ref","wayland_client::protocol::wl_display","",28,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_registry","",34,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_callback","",194,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_compositor","",38,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shm_pool","",42,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shm","",49,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_buffer","",52,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_offer","",62,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_source","",71,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_device","",81,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_data_device_manager","",85,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shell","",89,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_shell_surface","",106,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_surface","",119,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_seat","",125,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_pointer","",141,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_keyboard","",152,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_touch","",160,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_output","",169,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_region","",173,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_subcompositor","",177,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client::protocol::wl_subsurface","",183,[[["self"]],["proxy"]]],[11,"as_ref","wayland_client","",189,[[["self"]],["proxy"]]],[11,"from","wayland_client::protocol::wl_display","",28,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wldisplay"]],["self"]]],[11,"from","wayland_client::protocol::wl_registry","",34,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlregistry"]],["self"]]],[11,"from","wayland_client::protocol::wl_callback","",194,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlcallback"]],["self"]]],[11,"from","wayland_client::protocol::wl_compositor","",38,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlcompositor"]],["self"]]],[11,"from","wayland_client::protocol::wl_shm_pool","",42,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlshmpool"]],["self"]]],[11,"from","wayland_client::protocol::wl_shm","",49,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlshm"]],["self"]]],[11,"from","wayland_client::protocol::wl_buffer","",52,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlbuffer"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_offer","",62,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wldataoffer"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_source","",71,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wldatasource"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_device","",81,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wldatadevice"]],["self"]]],[11,"from","wayland_client::protocol::wl_data_device_manager","",85,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wldatadevicemanager"]],["self"]]],[11,"from","wayland_client::protocol::wl_shell","",89,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlshell"]],["self"]]],[11,"from","wayland_client::protocol::wl_shell_surface","",106,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlshellsurface"]],["self"]]],[11,"from","wayland_client::protocol::wl_surface","",119,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlsurface"]],["self"]]],[11,"from","wayland_client::protocol::wl_seat","",125,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlseat"]],["self"]]],[11,"from","wayland_client::protocol::wl_pointer","",141,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlpointer"]],["self"]]],[11,"from","wayland_client::protocol::wl_keyboard","",152,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlkeyboard"]],["self"]]],[11,"from","wayland_client::protocol::wl_touch","",160,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wltouch"]],["self"]]],[11,"from","wayland_client::protocol::wl_output","",169,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wloutput"]],["self"]]],[11,"from","wayland_client::protocol::wl_region","",173,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlregion"]],["self"]]],[11,"from","wayland_client::protocol::wl_subcompositor","",177,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlsubcompositor"]],["self"]]],[11,"from","wayland_client::protocol::wl_subsurface","",183,[[["proxy"]],["self"]]],[11,"from","wayland_client","",14,[[["wlsubsurface"]],["self"]]],[11,"from","","",189,[[["proxy"]],["self"]]],[11,"from","","",14,[[["anonymousobject"]],["self"]]],[11,"extend","wayland_client::protocol::wl_data_device_manager","",84,[[["intoiterator"],["self"]]]],[11,"extend","wayland_client::protocol::wl_shell_surface","",104,[[["intoiterator"],["self"]]]],[11,"extend","","",105,[[["self"],["intoiterator"]]]],[11,"extend","wayland_client::protocol::wl_seat","",124,[[["self"],["intoiterator"]]]],[11,"extend","wayland_client::protocol::wl_output","",168,[[["self"],["intoiterator"]]]],[11,"clone","wayland_client","",2,[[["self"]],["protocolerror"]]],[11,"clone","","",10,[[["self"]],["display"]]],[11,"clone","","",13,[[["self"]],["globalmanager"]]],[11,"clone","","",14,[[["self"]],["proxy"]]],[11,"clone","","",15,[[["self"]],["attached"]]],[11,"clone","","",16,[[["self"]],["main"]]],[11,"clone","wayland_client::protocol::wl_display","",23,[[["self"]],["error"]]],[11,"clone","","",28,[[["self"]],["wldisplay"]]],[11,"clone","wayland_client::protocol::wl_registry","",34,[[["self"]],["wlregistry"]]],[11,"clone","wayland_client::protocol::wl_callback","",194,[[["self"]],["wlcallback"]]],[11,"clone","wayland_client::protocol::wl_compositor","",38,[[["self"]],["wlcompositor"]]],[11,"clone","wayland_client::protocol::wl_shm_pool","",42,[[["self"]],["wlshmpool"]]],[11,"clone","wayland_client::protocol::wl_shm","",43,[[["self"]],["error"]]],[11,"clone","","",44,[[["self"]],["format"]]],[11,"clone","","",49,[[["self"]],["wlshm"]]],[11,"clone","wayland_client::protocol::wl_buffer","",52,[[["self"]],["wlbuffer"]]],[11,"clone","wayland_client::protocol::wl_data_offer","",53,[[["self"]],["error"]]],[11,"clone","","",62,[[["self"]],["wldataoffer"]]],[11,"clone","wayland_client::protocol::wl_data_source","",63,[[["self"]],["error"]]],[11,"clone","","",71,[[["self"]],["wldatasource"]]],[11,"clone","wayland_client::protocol::wl_data_device","",72,[[["self"]],["error"]]],[11,"clone","","",81,[[["self"]],["wldatadevice"]]],[11,"clone","wayland_client::protocol::wl_data_device_manager","",84,[[["self"]],["dndaction"]]],[11,"clone","","",85,[[["self"]],["wldatadevicemanager"]]],[11,"clone","wayland_client::protocol::wl_shell","",86,[[["self"]],["error"]]],[11,"clone","","",89,[[["self"]],["wlshell"]]],[11,"clone","wayland_client::protocol::wl_shell_surface","",104,[[["self"]],["resize"]]],[11,"clone","","",105,[[["self"]],["transient"]]],[11,"clone","","",90,[[["self"]],["fullscreenmethod"]]],[11,"clone","","",106,[[["self"]],["wlshellsurface"]]],[11,"clone","wayland_client::protocol::wl_surface","",107,[[["self"]],["error"]]],[11,"clone","","",119,[[["self"]],["wlsurface"]]],[11,"clone","wayland_client::protocol::wl_seat","",124,[[["self"]],["capability"]]],[11,"clone","","",125,[[["self"]],["wlseat"]]],[11,"clone","wayland_client::protocol::wl_pointer","",126,[[["self"]],["error"]]],[11,"clone","","",127,[[["self"]],["buttonstate"]]],[11,"clone","","",128,[[["self"]],["axis"]]],[11,"clone","","",129,[[["self"]],["axissource"]]],[11,"clone","","",141,[[["self"]],["wlpointer"]]],[11,"clone","wayland_client::protocol::wl_keyboard","",142,[[["self"]],["keymapformat"]]],[11,"clone","","",143,[[["self"]],["keystate"]]],[11,"clone","","",152,[[["self"]],["wlkeyboard"]]],[11,"clone","wayland_client::protocol::wl_touch","",160,[[["self"]],["wltouch"]]],[11,"clone","wayland_client::protocol::wl_output","",161,[[["self"]],["subpixel"]]],[11,"clone","","",162,[[["self"]],["transform"]]],[11,"clone","","",168,[[["self"]],["mode"]]],[11,"clone","","",169,[[["self"]],["wloutput"]]],[11,"clone","wayland_client::protocol::wl_region","",173,[[["self"]],["wlregion"]]],[11,"clone","wayland_client::protocol::wl_subcompositor","",174,[[["self"]],["error"]]],[11,"clone","","",177,[[["self"]],["wlsubcompositor"]]],[11,"clone","wayland_client::protocol::wl_subsurface","",178,[[["self"]],["error"]]],[11,"clone","","",183,[[["self"]],["wlsubsurface"]]],[11,"clone","wayland_client","",189,[[["self"]],["anonymousobject"]]],[11,"cmp","wayland_client::protocol::wl_data_device_manager","",84,[[["dndaction"],["self"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["resize"]],["ordering"]]],[11,"cmp","","",105,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_seat","",124,[[["self"],["capability"]],["ordering"]]],[11,"cmp","wayland_client::protocol::wl_output","",168,[[["mode"],["self"]],["ordering"]]],[11,"eq","wayland_client","",5,[[["globalerror"],["self"]],["bool"]]],[11,"ne","","",5,[[["globalerror"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["proxy"]],["bool"]]],[11,"eq","","",15,[[["attached"],["self"]],["bool"]]],[11,"ne","","",15,[[["attached"],["self"]],["bool"]]],[11,"eq","","",16,[[["main"],["self"]],["bool"]]],[11,"ne","","",16,[[["main"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_display","",23,[[["self"],["error"]],["bool"]]],[11,"eq","","",28,[[["self"],["wldisplay"]],["bool"]]],[11,"ne","","",28,[[["self"],["wldisplay"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_registry","",34,[[["wlregistry"],["self"]],["bool"]]],[11,"ne","","",34,[[["wlregistry"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_callback","",194,[[["wlcallback"],["self"]],["bool"]]],[11,"ne","","",194,[[["wlcallback"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_compositor","",38,[[["self"],["wlcompositor"]],["bool"]]],[11,"ne","","",38,[[["self"],["wlcompositor"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm_pool","",42,[[["wlshmpool"],["self"]],["bool"]]],[11,"ne","","",42,[[["wlshmpool"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shm","",43,[[["error"],["self"]],["bool"]]],[11,"eq","","",44,[[["format"],["self"]],["bool"]]],[11,"eq","","",49,[[["wlshm"],["self"]],["bool"]]],[11,"ne","","",49,[[["wlshm"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_buffer","",52,[[["wlbuffer"],["self"]],["bool"]]],[11,"ne","","",52,[[["wlbuffer"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_offer","",53,[[["error"],["self"]],["bool"]]],[11,"eq","","",62,[[["wldataoffer"],["self"]],["bool"]]],[11,"ne","","",62,[[["wldataoffer"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_source","",63,[[["error"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["wldatasource"]],["bool"]]],[11,"ne","","",71,[[["self"],["wldatasource"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device","",72,[[["self"],["error"]],["bool"]]],[11,"eq","","",81,[[["self"],["wldatadevice"]],["bool"]]],[11,"ne","","",81,[[["self"],["wldatadevice"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_data_device_manager","",84,[[["dndaction"],["self"]],["bool"]]],[11,"ne","","",84,[[["dndaction"],["self"]],["bool"]]],[11,"eq","","",85,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"ne","","",85,[[["self"],["wldatadevicemanager"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell","",86,[[["self"],["error"]],["bool"]]],[11,"eq","","",89,[[["self"],["wlshell"]],["bool"]]],[11,"ne","","",89,[[["self"],["wlshell"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["resize"]],["bool"]]],[11,"ne","","",104,[[["self"],["resize"]],["bool"]]],[11,"eq","","",105,[[["self"],["transient"]],["bool"]]],[11,"ne","","",105,[[["self"],["transient"]],["bool"]]],[11,"eq","","",90,[[["fullscreenmethod"],["self"]],["bool"]]],[11,"eq","","",106,[[["wlshellsurface"],["self"]],["bool"]]],[11,"ne","","",106,[[["wlshellsurface"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_surface","",107,[[["self"],["error"]],["bool"]]],[11,"eq","","",119,[[["wlsurface"],["self"]],["bool"]]],[11,"ne","","",119,[[["wlsurface"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_seat","",124,[[["self"],["capability"]],["bool"]]],[11,"ne","","",124,[[["self"],["capability"]],["bool"]]],[11,"eq","","",125,[[["wlseat"],["self"]],["bool"]]],[11,"ne","","",125,[[["wlseat"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_pointer","",126,[[["self"],["error"]],["bool"]]],[11,"eq","","",127,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",128,[[["self"],["axis"]],["bool"]]],[11,"eq","","",129,[[["self"],["axissource"]],["bool"]]],[11,"eq","","",141,[[["wlpointer"],["self"]],["bool"]]],[11,"ne","","",141,[[["wlpointer"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_keyboard","",142,[[["keymapformat"],["self"]],["bool"]]],[11,"eq","","",143,[[["keystate"],["self"]],["bool"]]],[11,"eq","","",152,[[["wlkeyboard"],["self"]],["bool"]]],[11,"ne","","",152,[[["wlkeyboard"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_touch","",160,[[["wltouch"],["self"]],["bool"]]],[11,"ne","","",160,[[["wltouch"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_output","",161,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",162,[[["transform"],["self"]],["bool"]]],[11,"eq","","",168,[[["mode"],["self"]],["bool"]]],[11,"ne","","",168,[[["mode"],["self"]],["bool"]]],[11,"eq","","",169,[[["wloutput"],["self"]],["bool"]]],[11,"ne","","",169,[[["wloutput"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_region","",173,[[["self"],["wlregion"]],["bool"]]],[11,"ne","","",173,[[["self"],["wlregion"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subcompositor","",174,[[["self"],["error"]],["bool"]]],[11,"eq","","",177,[[["wlsubcompositor"],["self"]],["bool"]]],[11,"ne","","",177,[[["wlsubcompositor"],["self"]],["bool"]]],[11,"eq","wayland_client::protocol::wl_subsurface","",178,[[["self"],["error"]],["bool"]]],[11,"eq","","",183,[[["wlsubsurface"],["self"]],["bool"]]],[11,"ne","","",183,[[["wlsubsurface"],["self"]],["bool"]]],[11,"eq","wayland_client","",189,[[["self"],["anonymousobject"]],["bool"]]],[11,"ne","","",189,[[["self"],["anonymousobject"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_data_device_manager","",84,[[["dndaction"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",84,[[["dndaction"],["self"]],["bool"]]],[11,"le","","",84,[[["dndaction"],["self"]],["bool"]]],[11,"gt","","",84,[[["dndaction"],["self"]],["bool"]]],[11,"ge","","",84,[[["dndaction"],["self"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["resize"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",104,[[["self"],["resize"]],["bool"]]],[11,"le","","",104,[[["self"],["resize"]],["bool"]]],[11,"gt","","",104,[[["self"],["resize"]],["bool"]]],[11,"ge","","",104,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",105,[[["self"],["transient"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",105,[[["self"],["transient"]],["bool"]]],[11,"le","","",105,[[["self"],["transient"]],["bool"]]],[11,"gt","","",105,[[["self"],["transient"]],["bool"]]],[11,"ge","","",105,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_seat","",124,[[["self"],["capability"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",124,[[["self"],["capability"]],["bool"]]],[11,"le","","",124,[[["self"],["capability"]],["bool"]]],[11,"gt","","",124,[[["self"],["capability"]],["bool"]]],[11,"ge","","",124,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","wayland_client::protocol::wl_output","",168,[[["mode"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",168,[[["mode"],["self"]],["bool"]]],[11,"le","","",168,[[["mode"],["self"]],["bool"]]],[11,"gt","","",168,[[["mode"],["self"]],["bool"]]],[11,"ge","","",168,[[["mode"],["self"]],["bool"]]],[11,"deref","wayland_client","",10,[[["self"]],["proxy"]]],[11,"deref","","",15,[[["self"]],["i"]]],[11,"deref","","",16,[[["self"]],["attached"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_display","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shm","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_offer","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_source","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_surface","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_pointer","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",128,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",129,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_keyboard","",142,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",161,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",162,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subcompositor","",174,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_subsurface","",178,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_client","",4,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"sub","wayland_client::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",84,[[["dndaction"]],["dndaction"]]],[11,"sub","wayland_client::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",104,[[["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",105,[[["transient"]],["transient"]]],[11,"sub","wayland_client::protocol::wl_seat","Returns the set difference of the two sets of flags.",124,[[["capability"]],["capability"]]],[11,"sub","wayland_client::protocol::wl_output","Returns the set difference of the two sets of flags.",168,[[["mode"]],["mode"]]],[11,"sub_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags enabled in the set.",84,[[["self"],["dndaction"]]]],[11,"sub_assign","wayland_client::protocol::wl_shell_surface","Disables all flags enabled in the set.",104,[[["resize"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",105,[[["transient"],["self"]]]],[11,"sub_assign","wayland_client::protocol::wl_seat","Disables all flags enabled in the set.",124,[[["self"],["capability"]]]],[11,"sub_assign","wayland_client::protocol::wl_output","Disables all flags enabled in the set.",168,[[["self"],["mode"]]]],[11,"not","wayland_client::protocol::wl_data_device_manager","Returns the complement of this set of flags.",84,[[],["dndaction"]]],[11,"not","wayland_client::protocol::wl_shell_surface","Returns the complement of this set of flags.",104,[[],["resize"]]],[11,"not","","Returns the complement of this set of flags.",105,[[],["transient"]]],[11,"not","wayland_client::protocol::wl_seat","Returns the complement of this set of flags.",124,[[],["capability"]]],[11,"not","wayland_client::protocol::wl_output","Returns the complement of this set of flags.",168,[[],["mode"]]],[11,"bitand","wayland_client::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",84,[[["dndaction"]],["dndaction"]]],[11,"bitand","wayland_client::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",104,[[["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",105,[[["transient"]],["transient"]]],[11,"bitand","wayland_client::protocol::wl_seat","Returns the intersection between the two sets of flags.",124,[[["capability"]],["capability"]]],[11,"bitand","wayland_client::protocol::wl_output","Returns the intersection between the two sets of flags.",168,[[["mode"]],["mode"]]],[11,"bitor","wayland_client::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",84,[[["dndaction"]],["dndaction"]]],[11,"bitor","wayland_client::protocol::wl_shell_surface","Returns the union of the two sets of flags.",104,[[["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",105,[[["transient"]],["transient"]]],[11,"bitor","wayland_client::protocol::wl_seat","Returns the union of the two sets of flags.",124,[[["capability"]],["capability"]]],[11,"bitor","wayland_client::protocol::wl_output","Returns the union of the two sets of flags.",168,[[["mode"]],["mode"]]],[11,"bitxor","wayland_client::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",84,[[["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_client::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",104,[[["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",105,[[["transient"]],["transient"]]],[11,"bitxor","wayland_client::protocol::wl_seat","Returns the left flags, but with all the right flags…",124,[[["capability"]],["capability"]]],[11,"bitxor","wayland_client::protocol::wl_output","Returns the left flags, but with all the right flags…",168,[[["mode"]],["mode"]]],[11,"bitand_assign","wayland_client::protocol::wl_data_device_manager","Disables all flags disabled in the set.",84,[[["self"],["dndaction"]]]],[11,"bitand_assign","wayland_client::protocol::wl_shell_surface","Disables all flags disabled in the set.",104,[[["resize"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",105,[[["transient"],["self"]]]],[11,"bitand_assign","wayland_client::protocol::wl_seat","Disables all flags disabled in the set.",124,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_client::protocol::wl_output","Disables all flags disabled in the set.",168,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_client::protocol::wl_data_device_manager","Adds the set of flags.",84,[[["self"],["dndaction"]]]],[11,"bitor_assign","wayland_client::protocol::wl_shell_surface","Adds the set of flags.",104,[[["resize"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",105,[[["transient"],["self"]]]],[11,"bitor_assign","wayland_client::protocol::wl_seat","Adds the set of flags.",124,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_client::protocol::wl_output","Adds the set of flags.",168,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_data_device_manager","Toggles the set of flags.",84,[[["self"],["dndaction"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_shell_surface","Toggles the set of flags.",104,[[["resize"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",105,[[["transient"],["self"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_seat","Toggles the set of flags.",124,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_client::protocol::wl_output","Toggles the set of flags.",168,[[["self"],["mode"]]]],[11,"hash","wayland_client::protocol::wl_data_device_manager","",84,[[["self"],["__h"]]]],[11,"hash","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","wayland_client::protocol::wl_seat","",124,[[["self"],["__h"]]]],[11,"hash","wayland_client::protocol::wl_output","",168,[[["self"],["__h"]]]],[11,"from_iter","wayland_client::protocol::wl_data_device_manager","",84,[[["intoiterator"]],["dndaction"]]],[11,"from_iter","wayland_client::protocol::wl_shell_surface","",104,[[["intoiterator"]],["resize"]]],[11,"from_iter","","",105,[[["intoiterator"]],["transient"]]],[11,"from_iter","wayland_client::protocol::wl_seat","",124,[[["intoiterator"]],["capability"]]],[11,"from_iter","wayland_client::protocol::wl_output","",168,[[["intoiterator"]],["mode"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",168,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_data_device_manager","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_shell_surface","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_seat","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_client::protocol::wl_output","",168,[[["self"],["formatter"]],["result"]]],[11,"description","wayland_client","",2,[[["self"]],["str"]]],[11,"c_interface","wayland_client::protocol::wl_display","",28,[[]]],[11,"c_interface","wayland_client::protocol::wl_registry","",34,[[]]],[11,"c_interface","wayland_client::protocol::wl_callback","",194,[[]]],[11,"c_interface","wayland_client::protocol::wl_compositor","",38,[[]]],[11,"c_interface","wayland_client::protocol::wl_shm_pool","",42,[[]]],[11,"c_interface","wayland_client::protocol::wl_shm","",49,[[]]],[11,"c_interface","wayland_client::protocol::wl_buffer","",52,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_offer","",62,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_source","",71,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_device","",81,[[]]],[11,"c_interface","wayland_client::protocol::wl_data_device_manager","",85,[[]]],[11,"c_interface","wayland_client::protocol::wl_shell","",89,[[]]],[11,"c_interface","wayland_client::protocol::wl_shell_surface","",106,[[]]],[11,"c_interface","wayland_client::protocol::wl_surface","",119,[[]]],[11,"c_interface","wayland_client::protocol::wl_seat","",125,[[]]],[11,"c_interface","wayland_client::protocol::wl_pointer","",141,[[]]],[11,"c_interface","wayland_client::protocol::wl_keyboard","",152,[[]]],[11,"c_interface","wayland_client::protocol::wl_touch","",160,[[]]],[11,"c_interface","wayland_client::protocol::wl_output","",169,[[]]],[11,"c_interface","wayland_client::protocol::wl_region","",173,[[]]],[11,"c_interface","wayland_client::protocol::wl_subcompositor","",177,[[]]],[11,"c_interface","wayland_client::protocol::wl_subsurface","",183,[[]]],[11,"c_interface","wayland_client","",189,[[]]],[11,"is_destructor","wayland_client::protocol::wl_display","",24,[[["self"]],["bool"]]],[11,"opcode","","",24,[[["self"]],["u16"]]],[11,"since","","",24,[[["self"]],["u32"]]],[11,"child","","",24,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",24,[[["message"]],["result"]]],[11,"into_raw","","",24,[[["u32"]],["message"]]],[11,"from_raw_c","","",24,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",24,[[["f"]],["t"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"since","","",25,[[["self"]],["u32"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",25,[[["message"]],["result"]]],[11,"into_raw","","",25,[[["u32"]],["message"]]],[11,"from_raw_c","","",25,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",25,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_registry","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"since","","",29,[[["self"]],["u32"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",29,[[["message"]],["result"]]],[11,"into_raw","","",29,[[["u32"]],["message"]]],[11,"from_raw_c","","",29,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",29,[[["f"]],["t"]]],[11,"is_destructor","","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"since","","",31,[[["self"]],["u32"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",31,[[["message"]],["result"]]],[11,"into_raw","","",31,[[["u32"]],["message"]]],[11,"from_raw_c","","",31,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",31,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_callback","",195,[[["self"]],["bool"]]],[11,"opcode","","",195,[[["self"]],["u16"]]],[11,"since","","",195,[[["self"]],["u32"]]],[11,"child","","",195,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",195,[[["message"]],["result"]]],[11,"into_raw","","",195,[[["u32"]],["message"]]],[11,"from_raw_c","","",195,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",195,[[["f"]],["t"]]],[11,"is_destructor","","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"since","","",35,[[["self"]],["u32"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",35,[[["message"]],["result"]]],[11,"into_raw","","",35,[[["u32"]],["message"]]],[11,"from_raw_c","","",35,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",35,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_compositor","",37,[[["self"]],["bool"]]],[11,"opcode","","",37,[[["self"]],["u16"]]],[11,"since","","",37,[[["self"]],["u32"]]],[11,"child","","",37,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",37,[[["message"]],["result"]]],[11,"into_raw","","",37,[[["u32"]],["message"]]],[11,"from_raw_c","","",37,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",37,[[["f"]],["t"]]],[11,"is_destructor","","",196,[[["self"]],["bool"]]],[11,"opcode","","",196,[[["self"]],["u16"]]],[11,"since","","",196,[[["self"]],["u32"]]],[11,"child","","",196,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",196,[[["message"]],["result"]]],[11,"into_raw","","",196,[[["u32"]],["message"]]],[11,"from_raw_c","","",196,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",196,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"since","","",39,[[["self"]],["u32"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",39,[[["message"]],["result"]]],[11,"into_raw","","",39,[[["u32"]],["message"]]],[11,"from_raw_c","","",39,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",39,[[["f"]],["t"]]],[11,"is_destructor","","",197,[[["self"]],["bool"]]],[11,"opcode","","",197,[[["self"]],["u16"]]],[11,"since","","",197,[[["self"]],["u32"]]],[11,"child","","",197,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",197,[[["message"]],["result"]]],[11,"into_raw","","",197,[[["u32"]],["message"]]],[11,"from_raw_c","","",197,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",197,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shm","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"since","","",45,[[["self"]],["u32"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",45,[[["message"]],["result"]]],[11,"into_raw","","",45,[[["u32"]],["message"]]],[11,"from_raw_c","","",45,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",45,[[["f"]],["t"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"since","","",47,[[["self"]],["u32"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",47,[[["message"]],["result"]]],[11,"into_raw","","",47,[[["u32"]],["message"]]],[11,"from_raw_c","","",47,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",47,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_buffer","",50,[[["self"]],["bool"]]],[11,"opcode","","",50,[[["self"]],["u16"]]],[11,"since","","",50,[[["self"]],["u32"]]],[11,"child","","",50,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",50,[[["message"]],["result"]]],[11,"into_raw","","",50,[[["u32"]],["message"]]],[11,"from_raw_c","","",50,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",50,[[["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"since","","",51,[[["self"]],["u32"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",51,[[["message"]],["result"]]],[11,"into_raw","","",51,[[["u32"]],["message"]]],[11,"from_raw_c","","",51,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",51,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_offer","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"since","","",54,[[["self"]],["u32"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",54,[[["message"]],["result"]]],[11,"into_raw","","",54,[[["u32"]],["message"]]],[11,"from_raw_c","","",54,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",54,[[["f"]],["t"]]],[11,"is_destructor","","",58,[[["self"]],["bool"]]],[11,"opcode","","",58,[[["self"]],["u16"]]],[11,"since","","",58,[[["self"]],["u32"]]],[11,"child","","",58,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",58,[[["message"]],["result"]]],[11,"into_raw","","",58,[[["u32"]],["message"]]],[11,"from_raw_c","","",58,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",58,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_source","",64,[[["self"]],["bool"]]],[11,"opcode","","",64,[[["self"]],["u16"]]],[11,"since","","",64,[[["self"]],["u32"]]],[11,"child","","",64,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",64,[[["message"]],["result"]]],[11,"into_raw","","",64,[[["u32"]],["message"]]],[11,"from_raw_c","","",64,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",64,[[["f"]],["t"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"opcode","","",67,[[["self"]],["u16"]]],[11,"since","","",67,[[["self"]],["u32"]]],[11,"child","","",67,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",67,[[["message"]],["result"]]],[11,"into_raw","","",67,[[["u32"]],["message"]]],[11,"from_raw_c","","",67,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",67,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device","",73,[[["self"]],["bool"]]],[11,"opcode","","",73,[[["self"]],["u16"]]],[11,"since","","",73,[[["self"]],["u32"]]],[11,"child","","",73,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",73,[[["message"]],["result"]]],[11,"into_raw","","",73,[[["u32"]],["message"]]],[11,"from_raw_c","","",73,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",73,[[["f"]],["t"]]],[11,"is_destructor","","",76,[[["self"]],["bool"]]],[11,"opcode","","",76,[[["self"]],["u16"]]],[11,"since","","",76,[[["self"]],["u32"]]],[11,"child","","",76,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",76,[[["message"]],["result"]]],[11,"into_raw","","",76,[[["u32"]],["message"]]],[11,"from_raw_c","","",76,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",76,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_data_device_manager","",82,[[["self"]],["bool"]]],[11,"opcode","","",82,[[["self"]],["u16"]]],[11,"since","","",82,[[["self"]],["u32"]]],[11,"child","","",82,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",82,[[["message"]],["result"]]],[11,"into_raw","","",82,[[["u32"]],["message"]]],[11,"from_raw_c","","",82,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",82,[[["f"]],["t"]]],[11,"is_destructor","","",198,[[["self"]],["bool"]]],[11,"opcode","","",198,[[["self"]],["u16"]]],[11,"since","","",198,[[["self"]],["u32"]]],[11,"child","","",198,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",198,[[["message"]],["result"]]],[11,"into_raw","","",198,[[["u32"]],["message"]]],[11,"from_raw_c","","",198,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",198,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shell","",87,[[["self"]],["bool"]]],[11,"opcode","","",87,[[["self"]],["u16"]]],[11,"since","","",87,[[["self"]],["u32"]]],[11,"child","","",87,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",87,[[["message"]],["result"]]],[11,"into_raw","","",87,[[["u32"]],["message"]]],[11,"from_raw_c","","",87,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",87,[[["f"]],["t"]]],[11,"is_destructor","","",199,[[["self"]],["bool"]]],[11,"opcode","","",199,[[["self"]],["u16"]]],[11,"since","","",199,[[["self"]],["u32"]]],[11,"child","","",199,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",199,[[["message"]],["result"]]],[11,"into_raw","","",199,[[["u32"]],["message"]]],[11,"from_raw_c","","",199,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",199,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_shell_surface","",91,[[["self"]],["bool"]]],[11,"opcode","","",91,[[["self"]],["u16"]]],[11,"since","","",91,[[["self"]],["u32"]]],[11,"child","","",91,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",91,[[["message"]],["result"]]],[11,"into_raw","","",91,[[["u32"]],["message"]]],[11,"from_raw_c","","",91,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",91,[[["f"]],["t"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",101,[[["message"]],["result"]]],[11,"into_raw","","",101,[[["u32"]],["message"]]],[11,"from_raw_c","","",101,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",101,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_surface","",108,[[["self"]],["bool"]]],[11,"opcode","","",108,[[["self"]],["u16"]]],[11,"since","","",108,[[["self"]],["u32"]]],[11,"child","","",108,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",108,[[["message"]],["result"]]],[11,"into_raw","","",108,[[["u32"]],["message"]]],[11,"from_raw_c","","",108,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",108,[[["f"]],["t"]]],[11,"is_destructor","","",116,[[["self"]],["bool"]]],[11,"opcode","","",116,[[["self"]],["u16"]]],[11,"since","","",116,[[["self"]],["u32"]]],[11,"child","","",116,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",116,[[["message"]],["result"]]],[11,"into_raw","","",116,[[["u32"]],["message"]]],[11,"from_raw_c","","",116,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",116,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_seat","",120,[[["self"]],["bool"]]],[11,"opcode","","",120,[[["self"]],["u16"]]],[11,"since","","",120,[[["self"]],["u32"]]],[11,"child","","",120,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",120,[[["message"]],["result"]]],[11,"into_raw","","",120,[[["u32"]],["message"]]],[11,"from_raw_c","","",120,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",120,[[["f"]],["t"]]],[11,"is_destructor","","",121,[[["self"]],["bool"]]],[11,"opcode","","",121,[[["self"]],["u16"]]],[11,"since","","",121,[[["self"]],["u32"]]],[11,"child","","",121,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",121,[[["message"]],["result"]]],[11,"into_raw","","",121,[[["u32"]],["message"]]],[11,"from_raw_c","","",121,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",121,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_pointer","",130,[[["self"]],["bool"]]],[11,"opcode","","",130,[[["self"]],["u16"]]],[11,"since","","",130,[[["self"]],["u32"]]],[11,"child","","",130,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",130,[[["message"]],["result"]]],[11,"into_raw","","",130,[[["u32"]],["message"]]],[11,"from_raw_c","","",130,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",130,[[["f"]],["t"]]],[11,"is_destructor","","",132,[[["self"]],["bool"]]],[11,"opcode","","",132,[[["self"]],["u16"]]],[11,"since","","",132,[[["self"]],["u32"]]],[11,"child","","",132,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",132,[[["message"]],["result"]]],[11,"into_raw","","",132,[[["u32"]],["message"]]],[11,"from_raw_c","","",132,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",132,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_keyboard","",144,[[["self"]],["bool"]]],[11,"opcode","","",144,[[["self"]],["u16"]]],[11,"since","","",144,[[["self"]],["u32"]]],[11,"child","","",144,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",144,[[["message"]],["result"]]],[11,"into_raw","","",144,[[["u32"]],["message"]]],[11,"from_raw_c","","",144,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",144,[[["f"]],["t"]]],[11,"is_destructor","","",145,[[["self"]],["bool"]]],[11,"opcode","","",145,[[["self"]],["u16"]]],[11,"since","","",145,[[["self"]],["u32"]]],[11,"child","","",145,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",145,[[["message"]],["result"]]],[11,"into_raw","","",145,[[["u32"]],["message"]]],[11,"from_raw_c","","",145,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",145,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_touch","",153,[[["self"]],["bool"]]],[11,"opcode","","",153,[[["self"]],["u16"]]],[11,"since","","",153,[[["self"]],["u32"]]],[11,"child","","",153,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",153,[[["message"]],["result"]]],[11,"into_raw","","",153,[[["u32"]],["message"]]],[11,"from_raw_c","","",153,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",153,[[["f"]],["t"]]],[11,"is_destructor","","",154,[[["self"]],["bool"]]],[11,"opcode","","",154,[[["self"]],["u16"]]],[11,"since","","",154,[[["self"]],["u32"]]],[11,"child","","",154,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",154,[[["message"]],["result"]]],[11,"into_raw","","",154,[[["u32"]],["message"]]],[11,"from_raw_c","","",154,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",154,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_output","",163,[[["self"]],["bool"]]],[11,"opcode","","",163,[[["self"]],["u16"]]],[11,"since","","",163,[[["self"]],["u32"]]],[11,"child","","",163,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",163,[[["message"]],["result"]]],[11,"into_raw","","",163,[[["u32"]],["message"]]],[11,"from_raw_c","","",163,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",163,[[["f"]],["t"]]],[11,"is_destructor","","",164,[[["self"]],["bool"]]],[11,"opcode","","",164,[[["self"]],["u16"]]],[11,"since","","",164,[[["self"]],["u32"]]],[11,"child","","",164,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",164,[[["message"]],["result"]]],[11,"into_raw","","",164,[[["u32"]],["message"]]],[11,"from_raw_c","","",164,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",164,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_region","",170,[[["self"]],["bool"]]],[11,"opcode","","",170,[[["self"]],["u16"]]],[11,"since","","",170,[[["self"]],["u32"]]],[11,"child","","",170,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",170,[[["message"]],["result"]]],[11,"into_raw","","",170,[[["u32"]],["message"]]],[11,"from_raw_c","","",170,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",170,[[["f"]],["t"]]],[11,"is_destructor","","",200,[[["self"]],["bool"]]],[11,"opcode","","",200,[[["self"]],["u16"]]],[11,"since","","",200,[[["self"]],["u32"]]],[11,"child","","",200,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",200,[[["message"]],["result"]]],[11,"into_raw","","",200,[[["u32"]],["message"]]],[11,"from_raw_c","","",200,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",200,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_subcompositor","",175,[[["self"]],["bool"]]],[11,"opcode","","",175,[[["self"]],["u16"]]],[11,"since","","",175,[[["self"]],["u32"]]],[11,"child","","",175,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",175,[[["message"]],["result"]]],[11,"into_raw","","",175,[[["u32"]],["message"]]],[11,"from_raw_c","","",175,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",175,[[["f"]],["t"]]],[11,"is_destructor","","",201,[[["self"]],["bool"]]],[11,"opcode","","",201,[[["self"]],["u16"]]],[11,"since","","",201,[[["self"]],["u32"]]],[11,"child","","",201,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",201,[[["message"]],["result"]]],[11,"into_raw","","",201,[[["u32"]],["message"]]],[11,"from_raw_c","","",201,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",201,[[["f"]],["t"]]],[11,"is_destructor","wayland_client::protocol::wl_subsurface","",179,[[["self"]],["bool"]]],[11,"opcode","","",179,[[["self"]],["u16"]]],[11,"since","","",179,[[["self"]],["u32"]]],[11,"child","","",179,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",179,[[["message"]],["result"]]],[11,"into_raw","","",179,[[["u32"]],["message"]]],[11,"from_raw_c","","",179,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",179,[[["f"]],["t"]]],[11,"is_destructor","","",202,[[["self"]],["bool"]]],[11,"opcode","","",202,[[["self"]],["u16"]]],[11,"since","","",202,[[["self"]],["u32"]]],[11,"child","","",202,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",202,[[["message"]],["result"]]],[11,"into_raw","","",202,[[["u32"]],["message"]]],[11,"from_raw_c","","",202,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",202,[[["f"]],["t"]]],[11,"get","wayland_client","Access the dispatch data knowing its type",185,[[["self"]],[["option"],["t"]]]],[11,"wrap","","Wrap a mutable reference",185,[[["t"]],["dispatchdata"]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",185,[[["self"]],["dispatchdata"]]],[11,"new","","Create a new filter from given closure",186,[[["f"]],["filter"]]],[11,"send","","Send a message to this filter",186,[[["dispatchdata"],["self"],["e"]]]],[11,"new","","Create a new UserData instance",187,[[],["userdata"]]],[11,"set","","Sets the UserData to a given value",187,[[["self"],["f"]]]],[11,"set_threadsafe","","Sets the UserData to a given threadsafe value",187,[[["self"],["f"]]]],[11,"get","","Attempt to access the wrapped user data",187,[[["self"]],[["option"],["t"]]]],[11,"error","","A global was advertised but its version was lower than the…",184,[[["self"],["u32"],["dispatchdata"]]]]],"p":[[8,"Interface"],[8,"MessageGroup"],[3,"ProtocolError"],[3,"RawEvent"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[13,"New"],[13,"Removed"],[4,"Argument"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"Attached"],[3,"Main"],[4,"ProxyMap"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[13,"Error"],[13,"DeleteId"],[3,"WlDisplay"],[4,"Request"],[13,"Bind"],[4,"Event"],[13,"Global"],[13,"GlobalRemove"],[3,"WlRegistry"],[4,"Event"],[13,"Done"],[4,"Request"],[3,"WlCompositor"],[4,"Request"],[13,"CreateBuffer"],[13,"Resize"],[3,"WlShmPool"],[4,"Error"],[4,"Format"],[4,"Request"],[13,"CreatePool"],[4,"Event"],[13,"Format"],[3,"WlShm"],[4,"Request"],[4,"Event"],[3,"WlBuffer"],[4,"Error"],[4,"Request"],[13,"Accept"],[13,"Receive"],[13,"SetActions"],[4,"Event"],[13,"Offer"],[13,"SourceActions"],[13,"Action"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[13,"Offer"],[13,"SetActions"],[4,"Event"],[13,"Target"],[13,"Send"],[13,"Action"],[3,"WlDataSource"],[4,"Error"],[4,"Request"],[13,"StartDrag"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Enter"],[13,"Motion"],[13,"Selection"],[3,"WlDataDevice"],[4,"Request"],[13,"GetDataDevice"],[3,"DndAction"],[3,"WlDataDeviceManager"],[4,"Error"],[4,"Request"],[13,"GetShellSurface"],[3,"WlShell"],[4,"FullscreenMethod"],[4,"Request"],[13,"Pong"],[13,"Move"],[13,"Resize"],[13,"SetTransient"],[13,"SetFullscreen"],[13,"SetPopup"],[13,"SetMaximized"],[13,"SetTitle"],[13,"SetClass"],[4,"Event"],[13,"Ping"],[13,"Configure"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[4,"Error"],[4,"Request"],[13,"Attach"],[13,"Damage"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferTransform"],[13,"SetBufferScale"],[13,"DamageBuffer"],[4,"Event"],[13,"Enter"],[13,"Leave"],[3,"WlSurface"],[4,"Request"],[4,"Event"],[13,"Capabilities"],[13,"Name"],[3,"Capability"],[3,"WlSeat"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[13,"SetCursor"],[4,"Event"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"Button"],[13,"Axis"],[13,"AxisSource"],[13,"AxisStop"],[13,"AxisDiscrete"],[3,"WlPointer"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[13,"Keymap"],[13,"Enter"],[13,"Leave"],[13,"Key"],[13,"Modifiers"],[13,"RepeatInfo"],[3,"WlKeyboard"],[4,"Request"],[4,"Event"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"],[3,"WlTouch"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[13,"Geometry"],[13,"Mode"],[13,"Scale"],[3,"Mode"],[3,"WlOutput"],[4,"Request"],[13,"Add"],[13,"Subtract"],[3,"WlRegion"],[4,"Error"],[4,"Request"],[13,"GetSubsurface"],[3,"WlSubcompositor"],[4,"Error"],[4,"Request"],[13,"SetPosition"],[13,"PlaceAbove"],[13,"PlaceBelow"],[3,"WlSubsurface"],[8,"GlobalImplementor"],[3,"DispatchData"],[3,"Filter"],[3,"UserData"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"QueueToken"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[3,"WlCallback"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"]]};
searchIndex["wayland_commons"] = {"doc":"Common definitions for wayland","i":[[14,"smallvec","wayland_commons","Creates a [`SmallVec`] containing the arguments.",null,null],[3,"ThreadGuard","","Stores a value in a threadafe container that only lets you…",null,null],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[0,"filter","","Filter",null,null],[3,"DispatchData","wayland_commons::filter","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[11,"get","","Access the dispatch data knowing its type",0,[[["self"]],[["option"],["t"]]]],[11,"wrap","","Wrap a mutable reference",0,[[["t"]],["dispatchdata"]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",0,[[["self"]],["dispatchdata"]]],[11,"new","","Create a new filter from given closure",1,[[["fnmut"]],["filter"]]],[11,"send","","Send a message to this filter",1,[[["dispatchdata"],["self"],["e"]]]],[0,"map","wayland_commons","Wayland objects map",null,null],[3,"Object","wayland_commons::map","The representation of a protocol object",null,null],[12,"interface","","Interface name of this object",2,null],[12,"version","","Version of this object",2,null],[12,"requests","","Description of the requests of this object",2,null],[12,"events","","Description of the events of this object",2,null],[12,"meta","","Metadata associated to this object (ex: its event queue…",2,null],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta,…",2,null],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta,…",2,null],[3,"ObjectMap","","A holder for the object store of a connection",null,null],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created…",null,null],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation…",null,null],[10,"child","","Create the metadata for a child object",3,[[["self"]],["self"]]],[11,"from_interface","","Create an Object corresponding to given interface and…",2,[[["u32"],["meta"]],["object"]]],[11,"event_child","","Create an optional `Object` corresponding to the possible…",2,[[["u16"],["self"]],[["option",["object"]],["object"]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible…",2,[[["u16"],["self"]],[["option",["object"]],["object"]]]],[11,"is_interface","","Check whether this object is of given interface",2,[[["self"]],["bool"]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the…",2,[[["meta"]],["object"]]],[11,"new","","Create a new empty object map",4,[[],["objectmap"]]],[11,"find","","Find an object in the store",4,[[["u32"],["self"]],[["option",["object"]],["object"]]]],[11,"remove","","Remove an object from the store",4,[[["self"],["u32"]]]],[11,"insert_at","","Insert given object for given id",4,[[["self"],["u32"],["object"]],["result"]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",4,[[["self"],["object"]],["u32"]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",4,[[["self"],["object"]],["u32"]]],[11,"with","","Mutably access an object of the map",4,[[["self"],["u32"],["fnonce"]],["result"]]],[11,"with_all","","Mutably access all objects of the map in sequence",4,[[["self"],["fnmut"]]]],[0,"socket","wayland_commons","Wayland socket manipulation",null,null],[3,"Socket","wayland_commons::socket","A wayland socket",null,null],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles…",null,null],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket…",null,null],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single…",null,null],[11,"send_msg","","Send a single message to the socket",5,[[["self"]],["nixresult"]]],[11,"rcv_msg","","Receive a single message from the socket",5,[[["self"]],["nixresult"]]],[11,"new","","Wrap a Socket into a Buffered Socket",6,[[["socket"]],["bufferedsocket"]]],[11,"get_socket","","Get direct access to the underlying socket",6,[[["self"]],["socket"]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",6,[[],["socket"]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",6,[[["self"]],["nixresult"]]],[11,"write_message","","Write a message to the outgoing buffer",6,[[["message"],["self"]],["nixresult"]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to…",6,[[["self"]],["nixresult"]]],[11,"read_one_message","","Read and deserialize a single message from the incoming…",6,[[["self"],["f"]],[["message"],["result",["message","messageparseerror"]],["messageparseerror"]]]],[11,"read_messages","","Read and deserialize messages from the socket",6,[[["f1"],["self"],["f2"]],[["result",["usize","messageparseerror"]],["nixresult",["result"]]]]],[0,"user_data","wayland_commons","Various utilities used for other implementations",null,null],[3,"UserData","wayland_commons::user_data","A wrapper for user data, able to store any type, and…",null,null],[3,"UserDataMap","","A storage able to store several values of `UserData` of…",null,null],[11,"new","","Create a new UserData instance",7,[[],["userdata"]]],[11,"set","","Sets the UserData to a given value",7,[[["fnonce"],["self"]]]],[11,"set_threadsafe","","Sets the UserData to a given threadsafe value",7,[[["fnonce"],["self"]]]],[11,"get","","Attempt to access the wrapped user data",7,[[["self"]],[["t"],["option"]]]],[11,"new","","Create a new map",8,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",8,[[["self"]],[["t"],["option"]]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",8,[[["fnonce"],["self"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",8,[[["fnonce"],["self"]],["bool"]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the…",null,null],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",null,null],[12,"name","","Name of this message",9,null],[12,"signature","","Signature of the message",9,null],[12,"since","","Minimum required version of the interface",9,null],[12,"destructor","","Whether this message is a destructor",9,null],[3,"Message","","A wire message",null,null],[12,"sender_id","","ID of the object sending this message",10,null],[12,"opcode","","Opcode of the message",10,null],[12,"args","","Arguments of the message",10,null],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",null,null],[13,"Int","","i32",11,null],[13,"Uint","","u32",11,null],[13,"Fixed","","fixed point, 1/256 precision",11,null],[13,"Str","","CString",11,null],[13,"Object","","id of a wayland object",11,null],[13,"NewId","","id of a newly created wayland object",11,null],[13,"Array","","Vec",11,null],[13,"Fd","","RawFd",11,null],[4,"Argument","","Enum of possible argument as recognized by the wire,…",null,null],[13,"Int","","i32",12,null],[13,"Uint","","u32",12,null],[13,"Fixed","","fixed point, 1/256 precision",12,null],[13,"Str","","CString",12,null],[13,"Object","","id of a wayland object",12,null],[13,"NewId","","id of a newly created wayland object",12,null],[13,"Array","","Vec",12,null],[13,"Fd","","RawFd",12,null],[4,"MessageWriteError","","Error generated when trying to serialize a message into…",null,null],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",13,null],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",13,null],[4,"MessageParseError","","Error generated when trying to deserialize a message from…",null,null],[13,"MissingFD","","The message references a FD but the buffer FD is empty",14,null],[13,"MissingData","","More data is needed to deserialize the message",14,null],[13,"Malformed","","The message is malformed and cannot be parsed",14,null],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",null,[[["rawfd"]],[["nixresult",["rawfd"]],["rawfd"]]]],[11,"get_type","","Retrieve the type of a given argument instance",12,[[["self"]],["argumenttype"]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",10,[[["self"]],[["result",["messagewriteerror"]],["messagewriteerror"]]]],[11,"from_raw","","Attempts to parse a single wayland message with the given…",10,[[],[["result",["messageparseerror"]],["messageparseerror"]]]],[8,"MessageGroup","wayland_commons","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",15,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",15,null],[10,"opcode","","The opcode of this message",15,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",15,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",15,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",15,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[10,"from_raw","","Construct a message from its raw representation",15,[[["message"]],["result"]]],[10,"into_raw","","Turn this message into its raw representation",15,[[["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",15,[[["u32"]],["result"]]],[10,"as_raw_c_in","","Build a C representation of this message",15,[[["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",16,null],[16,"Event","","Set of events associated to this interface",16,null],[18,"NAME","","Name of this interface",16,null],[18,"VERSION","","Maximum supported version of this interface",16,null],[10,"c_interface","","Pointer to the C representation of this interface",16,[[]]],[11,"new","","Create a new ThreadGuard wrapper",17,[[["t"]],["threadguard"]]],[11,"get","","Access the underlying value",17,[[["self"]],["t"]]],[11,"get_mut","","Mutably access the underlying value",17,[[["self"]],["t"]]],[11,"try_get","","Try to access the underlying value",17,[[["self"]],[["t"],["option"]]]],[11,"try_get_mut","","Try to mutably access the underlying value",17,[[["self"]],[["option"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","wayland_commons::filter","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","wayland_commons::map","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_commons::socket","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","wayland_commons::user_data","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","wayland_commons::wire","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"to_string","","",14,[[["self"]],["string"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"is_destructor","wayland_commons","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["m"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",18,[[["message"]],["result"]]],[11,"into_raw","","",18,[[["u32"]],["message"]]],[11,"from_raw_c","","",18,[[["u32"]],["result"]]],[11,"as_raw_c_in","","",18,[[["f"]],["t"]]],[11,"drop","wayland_commons::socket","",5,[[["self"]]]],[11,"drop","wayland_commons::user_data","",7,[[["self"]]]],[11,"drop","wayland_commons","",17,[[["self"]]]],[11,"clone","wayland_commons::filter","",1,[[["self"]],["filter"]]],[11,"clone","wayland_commons::map","",2,[[["self"]],["object"]]],[11,"clone","wayland_commons::wire","",9,[[["self"]],["messagedesc"]]],[11,"clone","","",11,[[["self"]],["argumenttype"]]],[11,"clone","","",12,[[["self"]],["argument"]]],[11,"clone","","",10,[[["self"]],["message"]]],[11,"clone","","",13,[[["self"]],["messagewriteerror"]]],[11,"clone","","",14,[[["self"]],["messageparseerror"]]],[11,"default","wayland_commons::map","",4,[[],["objectmap"]]],[11,"default","wayland_commons::user_data","",8,[[],["userdatamap"]]],[11,"eq","wayland_commons::wire","",11,[[["argumenttype"],["self"]],["bool"]]],[11,"eq","","",12,[[["argument"],["self"]],["bool"]]],[11,"ne","","",12,[[["argument"],["self"]],["bool"]]],[11,"eq","","",10,[[["message"],["self"]],["bool"]]],[11,"ne","","",10,[[["message"],["self"]],["bool"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"as_raw_fd","wayland_commons::socket","",5,[[["self"]],["rawfd"]]],[11,"from_raw_fd","","",5,[[["rawfd"]],["socket"]]],[11,"into_raw_fd","","",5,[[],["rawfd"]]]],"p":[[3,"DispatchData"],[3,"Filter"],[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"ThreadGuard"],[4,"NoMessage"]]};
searchIndex["wayland_cursor"] = {"doc":"Wayland cursor utilities","i":[[3,"CursorTheme","wayland_cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if…",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[3,"FrameAndDuration","","Which frame to show, and for how long.",null,null],[12,"frame_index","","The index of the frame which should be shown.",0,null],[12,"frame_duration","","The duration that the frame should be shown for (in…",0,null],[11,"load","","Load a cursor theme from system defaults.",1,[[["u32"],["attached"]],["self"]]],[11,"load_or","","Load a cursor theme, using `name` as fallback.",1,[[["str"],["u32"],["attached"]],["self"]]],[11,"load_from_name","","Create a new cursor theme, ignoring the system defaults.",1,[[["str"],["u32"],["attached"]],["self"]]],[11,"get_cursor","","Retrieve a cursor from the theme.",1,[[["str"],["self"]],[["cursor"],["option",["cursor"]]]]],[11,"frame_and_duration","","Given a time, calculate which frame to show, and how much…",2,[[["u32"],["self"]],["frameandduration"]]],[11,"image_count","","Total number of images forming this cursor animation",2,[[["self"]],["usize"]]],[11,"dimensions","","Dimensions of this image",3,[[["self"]]]],[11,"hotspot","","Location of the pointer hotspot in this image",3,[[["self"]]]],[11,"delay","","Time (in milliseconds) for which this image should be…",3,[[["self"]],["u32"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["cursor"]]],[11,"clone","","",3,[[["self"]],["cursorimagebuffer"]]],[11,"clone","","",0,[[["self"]],["frameandduration"]]],[11,"eq","","",0,[[["frameandduration"],["self"]],["bool"]]],[11,"ne","","",0,[[["frameandduration"],["self"]],["bool"]]],[11,"deref","","",3,[[["self"]],["wlbuffer"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"index","","",2,[[["self"],["usize"]]]]],"p":[[3,"FrameAndDuration"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"]]};
searchIndex["wayland_egl"] = {"doc":"EGL utilities","i":[[3,"WlEglSurface","wayland_egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,[[],["bool"]]],[11,"new","","Create an EGL surface from a wayland surface",0,[[["wlsurface"],["i32"]],["wleglsurface"]]],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland…",0,[[["i32"]],["wleglsurface"]]],[11,"get_size","","Fetch current size of the EGL surface",0,[[["self"]]]],[11,"resize","","Resize the EGL surface",0,[[["self"],["i32"]]]],[11,"ptr","","Raw pointer to the EGL surface",0,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",0,[[["self"]]]]],"p":[[3,"WlEglSurface"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland…","i":[[0,"misc","wayland_protocols","Misc protocols",null,null],[0,"gtk_primary_selection","wayland_protocols::misc","Gtk primary selection protocol",null,null],[0,"client","wayland_protocols::misc::gtk_primary_selection","Client-side API of this protocol",null,null],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::client","X primary selection emulation",null,null],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",null,null],[4,"Request","","",null,null],[13,"CreateSource","","create a new primary selection source",0,null],[13,"GetDevice","","create a new primary selection device",0,null],[12,"seat","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager::Request","",1,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","destroy the primary selection device manager",0,null],[4,"Event","","",null,null],[7,"gtk_primary_selection_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::client","",null,null],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",null,null],[4,"Request","","",null,null],[13,"SetSelection","","set the primary selection",2,null],[12,"source","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Request","",3,null],[12,"serial","","",3,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","destroy the primary selection device",2,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wp_primary_selection_offer",4,null],[12,"offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event","",5,null],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","advertise a new primary selection",4,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device::Event","",6,null],[7,"gtk_primary_selection_device_requests","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::client","offer to transfer primary selection contents",null,null],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",7,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Request","",8,null],[12,"fd","","",8,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","destroy the primary selection offer",7,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered mime type",9,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer::Event","",10,null],[7,"gtk_primary_selection_offer_requests","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::client","offer to replace the contents of the primary selection",null,null],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",null,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",11,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Request","",12,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","destroy the primary selection source",11,null],[4,"Event","","",null,null],[13,"Send","","send the primary selection contents",13,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source::Event","",14,null],[12,"fd","","",14,null],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","request for primary selection contents was canceled",13,null],[7,"gtk_primary_selection_source_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[0,"server","wayland_protocols::misc::gtk_primary_selection","Server-side API of this protocol",null,null],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::server","X primary selection emulation",null,null],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",null,null],[4,"Request","","",null,null],[13,"CreateSource","","create a new primary selection source",15,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",16,null],[13,"GetDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","create a new primary selection device",15,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",17,null],[12,"seat","","",17,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","destroy the primary selection device manager",15,null],[4,"Event","","",null,null],[7,"gtk_primary_selection_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::server","",null,null],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",null,null],[4,"Request","","",null,null],[13,"SetSelection","","set the primary selection",18,null],[12,"source","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Request","",19,null],[12,"serial","","",19,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","destroy the primary selection device",18,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wp_primary_selection_offer",20,null],[12,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",21,null],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","advertise a new primary selection",20,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",22,null],[7,"gtk_primary_selection_device_requests","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::server","offer to transfer primary selection contents",null,null],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",23,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Request","",24,null],[12,"fd","","",24,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","destroy the primary selection offer",23,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered mime type",25,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Event","",26,null],[7,"gtk_primary_selection_offer_requests","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::server","offer to replace the contents of the primary selection",null,null],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",null,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",27,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Request","",28,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","destroy the primary selection source",27,null],[4,"Event","","",null,null],[13,"Send","","send the primary selection contents",29,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Event","",30,null],[12,"fd","","",30,null],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","request for primary selection contents was canceled",29,null],[7,"gtk_primary_selection_source_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[11,"create_source","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","create a new primary selection source",31,[[["self"]],[["main",["gtkprimaryselectionsource"]],["gtkprimaryselectionsource"]]]],[11,"get_device","","create a new primary selection device",31,[[["wlseat"],["self"]],[["gtkprimaryselectiondevice"],["main",["gtkprimaryselectiondevice"]]]]],[11,"destroy","","destroy the primary selection device manager",31,[[["self"]]]],[11,"set_selection","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","set the primary selection",32,[[["u32"],["gtkprimaryselectionsource"],["option",["gtkprimaryselectionsource"]],["self"]]]],[11,"destroy","","destroy the primary selection device",32,[[["self"]]]],[11,"receive","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","request that the data is transferred",33,[[["rawfd"],["self"],["string"]]]],[11,"destroy","","destroy the primary selection offer",33,[[["self"]]]],[11,"offer","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","add an offered mime type",34,[[["self"],["string"]]]],[11,"destroy","","destroy the primary selection source",34,[[["self"]]]],[11,"data_offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","introduce a new wp_primary_selection_offer",35,[[["self"],["gtkprimaryselectionoffer"]]]],[11,"selection","","advertise a new primary selection",35,[[["option",["gtkprimaryselectionoffer"]],["self"],["gtkprimaryselectionoffer"]]]],[11,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","advertise offered mime type",36,[[["self"],["string"]]]],[11,"send","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","send the primary selection contents",37,[[["rawfd"],["self"],["string"]]]],[11,"cancelled","","request for primary selection contents was canceled",37,[[["self"]]]],[0,"wlr","wayland_protocols","wlr-procotols extension family",null,null],[0,"presentation_time","","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",38,null],[13,"InvalidFlag","","invalid flag",38,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",39,null],[13,"Feedback","","request presentation feedback information",39,null],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",40,null],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",41,null],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",42,null],[7,"wp_presentation_requests","wayland_protocols::presentation_time::client::wp_presentation","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",null,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"Kind","wayland_protocols::presentation_time::client::wp_presentation_feedback","bitmask of flags in presented event",null,null],[3,"WpPresentationFeedback","","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",43,null],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",44,null],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",43,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",45,null],[12,"tv_sec_lo","","",45,null],[12,"tv_nsec","","",45,null],[12,"refresh","","",45,null],[12,"seq_hi","","",45,null],[12,"seq_lo","","",45,null],[12,"flags","","",45,null],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",43,null],[7,"wp_presentation_feedback_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_feedback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",null,null],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",46,null],[13,"InvalidFlag","","invalid flag",46,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",47,null],[13,"Feedback","","request presentation feedback information",47,null],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",48,null],[12,"callback","","",48,null],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",49,null],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",50,null],[7,"wp_presentation_requests","wayland_protocols::presentation_time::server::wp_presentation","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",null,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"Kind","wayland_protocols::presentation_time::server::wp_presentation_feedback","bitmask of flags in presented event",null,null],[3,"WpPresentationFeedback","","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",51,null],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",52,null],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",51,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",53,null],[12,"tv_sec_lo","","",53,null],[12,"tv_nsec","","",53,null],[12,"refresh","","",53,null],[12,"seq_hi","","",53,null],[12,"seq_lo","","",53,null],[12,"flags","","",53,null],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",51,null],[7,"wp_presentation_feedback_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_feedback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",null,null],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",54,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",54,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",54,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",54,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",54,null],[13,"InvalidPositioner","","the client provided an invalid positioner",54,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",55,null],[13,"CreatePositioner","","create a positioner object",55,null],[13,"GetXdgSurface","","create a shell surface from a surface",55,null],[12,"surface","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",56,null],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",55,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",57,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",58,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",59,null],[7,"xdg_wm_base_requests","wayland_protocols::xdg_shell::client::xdg_wm_base","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",60,null],[4,"Anchor","","",null,null],[13,"None","","",61,null],[13,"Top","","",61,null],[13,"Bottom","","",61,null],[13,"Left","","",61,null],[13,"Right","","",61,null],[13,"TopLeft","","",61,null],[13,"BottomLeft","","",61,null],[13,"TopRight","","",61,null],[13,"BottomRight","","",61,null],[4,"Gravity","","",null,null],[13,"None","","",62,null],[13,"Top","","",62,null],[13,"Bottom","","",62,null],[13,"Left","","",62,null],[13,"Right","","",62,null],[13,"TopLeft","","",62,null],[13,"BottomLeft","","",62,null],[13,"TopRight","","",62,null],[13,"BottomRight","","",62,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",63,null],[13,"SetSize","","set the size of the to-be positioned rectangle",63,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",64,null],[12,"height","","",64,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",63,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",65,null],[12,"y","","",65,null],[12,"width","","",65,null],[12,"height","","",65,null],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",63,null],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",66,null],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",63,null],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",67,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",63,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",68,null],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",63,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",69,null],[12,"y","","",69,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",null,null],[7,"xdg_positioner_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_positioner_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",70,null],[13,"AlreadyConstructed","","",70,null],[13,"UnconfiguredBuffer","","",70,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",71,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",71,null],[13,"GetPopup","","assign the xdg_popup surface role",71,null],[12,"parent","wayland_protocols::xdg_shell::client::xdg_surface::Request","",72,null],[12,"positioner","","",72,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",71,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",73,null],[12,"y","","",73,null],[12,"width","","",73,null],[12,"height","","",73,null],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",71,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",74,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",75,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",76,null],[7,"xdg_surface_requests","wayland_protocols::xdg_shell::client::xdg_surface","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",77,null],[13,"Top","","",77,null],[13,"Bottom","","",77,null],[13,"Left","","",77,null],[13,"TopLeft","","",77,null],[13,"BottomLeft","","",77,null],[13,"Right","","",77,null],[13,"TopRight","","",77,null],[13,"BottomRight","","",77,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",78,null],[13,"Fullscreen","","the surface is fullscreen",78,null],[13,"Resizing","","the surface is being resized",78,null],[13,"Activated","","the surface is now activated",78,null],[13,"TiledLeft","","the surface is tiled",78,null],[13,"TiledRight","","the surface is tiled",78,null],[13,"TiledTop","","the surface is tiled",78,null],[13,"TiledBottom","","the surface is tiled",78,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",79,null],[13,"SetParent","","set the parent of this surface",79,null],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",80,null],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",79,null],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",81,null],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",79,null],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",82,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",79,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",83,null],[12,"serial","","",83,null],[12,"x","","",83,null],[12,"y","","",83,null],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",79,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",84,null],[12,"serial","","",84,null],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",79,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",85,null],[12,"serial","","",85,null],[12,"edges","","",85,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",79,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",86,null],[12,"height","","",86,null],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",79,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",87,null],[12,"height","","",87,null],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",79,null],[13,"UnsetMaximized","","unmaximize the window",79,null],[13,"SetFullscreen","","set the window as fullscreen on an output",79,null],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",88,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",79,null],[13,"SetMinimized","","set the window as minimized",79,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",89,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",90,null],[12,"height","","",90,null],[12,"states","","",90,null],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",89,null],[7,"xdg_toplevel_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",91,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",92,null],[13,"Grab","","make the popup take an explicit grab",92,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",93,null],[12,"serial","","",93,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",94,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",95,null],[12,"y","","",95,null],[12,"width","","",95,null],[12,"height","","",95,null],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",94,null],[7,"xdg_popup_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",96,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",96,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",96,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",96,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",96,null],[13,"InvalidPositioner","","the client provided an invalid positioner",96,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",97,null],[13,"CreatePositioner","","create a positioner object",97,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",98,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",97,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",99,null],[12,"surface","","",99,null],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",97,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",100,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",101,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",102,null],[7,"xdg_wm_base_requests","wayland_protocols::xdg_shell::server::xdg_wm_base","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",103,null],[4,"Anchor","","",null,null],[13,"None","","",104,null],[13,"Top","","",104,null],[13,"Bottom","","",104,null],[13,"Left","","",104,null],[13,"Right","","",104,null],[13,"TopLeft","","",104,null],[13,"BottomLeft","","",104,null],[13,"TopRight","","",104,null],[13,"BottomRight","","",104,null],[4,"Gravity","","",null,null],[13,"None","","",105,null],[13,"Top","","",105,null],[13,"Bottom","","",105,null],[13,"Left","","",105,null],[13,"Right","","",105,null],[13,"TopLeft","","",105,null],[13,"BottomLeft","","",105,null],[13,"TopRight","","",105,null],[13,"BottomRight","","",105,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",106,null],[13,"SetSize","","set the size of the to-be positioned rectangle",106,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",107,null],[12,"height","","",107,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",106,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",108,null],[12,"y","","",108,null],[12,"width","","",108,null],[12,"height","","",108,null],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",106,null],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",109,null],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",106,null],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",110,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",106,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",111,null],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",106,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",112,null],[12,"y","","",112,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",null,null],[7,"xdg_positioner_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_positioner_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",113,null],[13,"AlreadyConstructed","","",113,null],[13,"UnconfiguredBuffer","","",113,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",114,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",114,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",115,null],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",114,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",116,null],[12,"parent","","",116,null],[12,"positioner","","",116,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",114,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",117,null],[12,"y","","",117,null],[12,"width","","",117,null],[12,"height","","",117,null],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",114,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",118,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",119,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",120,null],[7,"xdg_surface_requests","wayland_protocols::xdg_shell::server::xdg_surface","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",121,null],[13,"Top","","",121,null],[13,"Bottom","","",121,null],[13,"Left","","",121,null],[13,"TopLeft","","",121,null],[13,"BottomLeft","","",121,null],[13,"Right","","",121,null],[13,"TopRight","","",121,null],[13,"BottomRight","","",121,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",122,null],[13,"Fullscreen","","the surface is fullscreen",122,null],[13,"Resizing","","the surface is being resized",122,null],[13,"Activated","","the surface is now activated",122,null],[13,"TiledLeft","","the surface is tiled",122,null],[13,"TiledRight","","the surface is tiled",122,null],[13,"TiledTop","","the surface is tiled",122,null],[13,"TiledBottom","","the surface is tiled",122,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",123,null],[13,"SetParent","","set the parent of this surface",123,null],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",124,null],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",123,null],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",125,null],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",123,null],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",126,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",123,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",127,null],[12,"serial","","",127,null],[12,"x","","",127,null],[12,"y","","",127,null],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",123,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",128,null],[12,"serial","","",128,null],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",123,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",129,null],[12,"serial","","",129,null],[12,"edges","","",129,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",123,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",130,null],[12,"height","","",130,null],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",123,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",131,null],[12,"height","","",131,null],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",123,null],[13,"UnsetMaximized","","unmaximize the window",123,null],[13,"SetFullscreen","","set the window as fullscreen on an output",123,null],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",132,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",123,null],[13,"SetMinimized","","set the window as minimized",123,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",133,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",134,null],[12,"height","","",134,null],[12,"states","","",134,null],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",133,null],[7,"xdg_toplevel_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",135,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",136,null],[13,"Grab","","make the popup take an explicit grab",136,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",137,null],[12,"serial","","",137,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",138,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",139,null],[12,"y","","",139,null],[12,"width","","",139,null],[12,"height","","",139,null],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",138,null],[7,"xdg_popup_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",140,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",141,null],[13,"GetViewport","","extend surface interface for crop and scale",141,null],[12,"surface","wayland_protocols::viewporter::client::wp_viewporter::Request","",142,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[7,"wp_viewporter_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewporter_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",143,null],[13,"BadSize","","destination size is not integer",143,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",143,null],[13,"NoSurface","","the wl_surface was destroyed",143,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",144,null],[13,"SetSource","","set the source rectangle for cropping",144,null],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",145,null],[12,"y","","",145,null],[12,"width","","",145,null],[12,"height","","",145,null],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",144,null],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",146,null],[12,"height","","",146,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",null,null],[7,"wp_viewport_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewport_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",null,null],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",147,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",148,null],[13,"GetViewport","","extend surface interface for crop and scale",148,null],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",149,null],[12,"surface","","",149,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[7,"wp_viewporter_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewporter_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",150,null],[13,"BadSize","","destination size is not integer",150,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",150,null],[13,"NoSurface","","the wl_surface was destroyed",150,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",151,null],[13,"SetSource","","set the source rectangle for cropping",151,null],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",152,null],[12,"y","","",152,null],[12,"width","","",152,null],[12,"height","","",152,null],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",151,null],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",153,null],[12,"height","","",153,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",null,null],[7,"wp_viewport_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewport_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",null,null],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",31,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any_arc","","",31,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_any","","",0,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",0,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",0,[[["self"]],["any"]]],[11,"as_any_mut","","",0,[[["self"]],["any"]]],[11,"into_any_arc","","",0,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"into_any","","",154,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",154,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",154,[[["self"]],["any"]]],[11,"as_any_mut","","",154,[[["self"]],["any"]]],[11,"into_any_arc","","",154,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",32,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any_arc","","",32,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",2,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any_arc","","",2,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",4,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"into_any_arc","","",4,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",33,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any_arc","","",33,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",7,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"into_any_arc","","",7,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",9,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any_arc","","",9,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",34,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any_arc","","",34,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",11,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"into_any_arc","","",11,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",13,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any_arc","","",13,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"into_any","","",155,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",155,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",155,[[["self"]],["any"]]],[11,"as_any_mut","","",155,[[["self"]],["any"]]],[11,"into_any_arc","","",155,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",15,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any_arc","","",15,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"into_any","","",156,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",156,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",156,[[["self"]],["any"]]],[11,"as_any_mut","","",156,[[["self"]],["any"]]],[11,"into_any_arc","","",156,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",35,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any_arc","","",35,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",18,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any_arc","","",18,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"into_any","","",20,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",20,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",20,[[["self"]],["any"]]],[11,"as_any_mut","","",20,[[["self"]],["any"]]],[11,"into_any_arc","","",20,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_any","","",36,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",36,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",36,[[["self"]],["any"]]],[11,"as_any_mut","","",36,[[["self"]],["any"]]],[11,"into_any_arc","","",36,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"into_any","","",23,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",23,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",23,[[["self"]],["any"]]],[11,"as_any_mut","","",23,[[["self"]],["any"]]],[11,"into_any_arc","","",23,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",25,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any_arc","","",25,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_any","","",37,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",37,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",37,[[["self"]],["any"]]],[11,"as_any_mut","","",37,[[["self"]],["any"]]],[11,"into_any_arc","","",37,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_any","","",27,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",27,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",27,[[["self"]],["any"]]],[11,"as_any_mut","","",27,[[["self"]],["any"]]],[11,"into_any_arc","","",27,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_any","","",29,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",29,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",29,[[["self"]],["any"]]],[11,"as_any_mut","","",29,[[["self"]],["any"]]],[11,"into_any_arc","","",29,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"into_any","","",157,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",157,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",157,[[["self"]],["any"]]],[11,"as_any_mut","","",157,[[["self"]],["any"]]],[11,"into_any_arc","","",157,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_any","","",38,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",38,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",38,[[["self"]],["any"]]],[11,"as_any_mut","","",38,[[["self"]],["any"]]],[11,"into_any_arc","","",38,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",39,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any_arc","","",39,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_any","","",41,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",41,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",41,[[["self"]],["any"]]],[11,"as_any_mut","","",41,[[["self"]],["any"]]],[11,"into_any_arc","","",41,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"into_any","","",158,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",158,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",158,[[["self"]],["any"]]],[11,"as_any_mut","","",158,[[["self"]],["any"]]],[11,"into_any_arc","","",158,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"into_any","","",159,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",159,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",159,[[["self"]],["any"]]],[11,"as_any_mut","","",159,[[["self"]],["any"]]],[11,"into_any_arc","","",159,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"into_any","","",160,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",160,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",160,[[["self"]],["any"]]],[11,"as_any_mut","","",160,[[["self"]],["any"]]],[11,"into_any_arc","","",160,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",43,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any_arc","","",43,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"into_any","","",161,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",161,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",161,[[["self"]],["any"]]],[11,"as_any_mut","","",161,[[["self"]],["any"]]],[11,"into_any_arc","","",161,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_any","","",46,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",46,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",46,[[["self"]],["any"]]],[11,"as_any_mut","","",46,[[["self"]],["any"]]],[11,"into_any_arc","","",46,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_any","","",47,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",47,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",47,[[["self"]],["any"]]],[11,"as_any_mut","","",47,[[["self"]],["any"]]],[11,"into_any_arc","","",47,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_any","","",49,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",49,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",49,[[["self"]],["any"]]],[11,"as_any_mut","","",49,[[["self"]],["any"]]],[11,"into_any_arc","","",49,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"into_any","","",162,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",162,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",162,[[["self"]],["any"]]],[11,"as_any_mut","","",162,[[["self"]],["any"]]],[11,"into_any_arc","","",162,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"into_any","","",163,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",163,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",163,[[["self"]],["any"]]],[11,"as_any_mut","","",163,[[["self"]],["any"]]],[11,"into_any_arc","","",163,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"into_any","","",164,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",164,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",164,[[["self"]],["any"]]],[11,"as_any_mut","","",164,[[["self"]],["any"]]],[11,"into_any_arc","","",164,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_any","","",51,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",51,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",51,[[["self"]],["any"]]],[11,"as_any_mut","","",51,[[["self"]],["any"]]],[11,"into_any_arc","","",51,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"into_any","","",165,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",165,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",165,[[["self"]],["any"]]],[11,"as_any_mut","","",165,[[["self"]],["any"]]],[11,"into_any_arc","","",165,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",54,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"into_any_arc","","",54,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_any","","",55,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",55,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",55,[[["self"]],["any"]]],[11,"as_any_mut","","",55,[[["self"]],["any"]]],[11,"into_any_arc","","",55,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_any","","",58,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",58,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",58,[[["self"]],["any"]]],[11,"as_any_mut","","",58,[[["self"]],["any"]]],[11,"into_any_arc","","",58,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"into_any","","",166,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",166,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",166,[[["self"]],["any"]]],[11,"as_any_mut","","",166,[[["self"]],["any"]]],[11,"into_any_arc","","",166,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"into_any","","",167,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",167,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",167,[[["self"]],["any"]]],[11,"as_any_mut","","",167,[[["self"]],["any"]]],[11,"into_any_arc","","",167,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_any","","",60,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",60,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",60,[[["self"]],["any"]]],[11,"as_any_mut","","",60,[[["self"]],["any"]]],[11,"into_any_arc","","",60,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_any","","",61,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",61,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",61,[[["self"]],["any"]]],[11,"as_any_mut","","",61,[[["self"]],["any"]]],[11,"into_any_arc","","",61,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",62,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any_arc","","",62,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",63,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any_arc","","",63,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"into_any","","",168,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",168,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",168,[[["self"]],["any"]]],[11,"as_any_mut","","",168,[[["self"]],["any"]]],[11,"into_any_arc","","",168,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"into_any","","",169,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",169,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",169,[[["self"]],["any"]]],[11,"as_any_mut","","",169,[[["self"]],["any"]]],[11,"into_any_arc","","",169,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_any","","",70,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",70,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"into_any_arc","","",70,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",71,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any_arc","","",71,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_any","","",75,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",75,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",75,[[["self"]],["any"]]],[11,"as_any_mut","","",75,[[["self"]],["any"]]],[11,"into_any_arc","","",75,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"into_any","","",170,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",170,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",170,[[["self"]],["any"]]],[11,"as_any_mut","","",170,[[["self"]],["any"]]],[11,"into_any_arc","","",170,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_any","","",77,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",77,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",77,[[["self"]],["any"]]],[11,"as_any_mut","","",77,[[["self"]],["any"]]],[11,"into_any_arc","","",77,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_any","","",78,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",78,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",78,[[["self"]],["any"]]],[11,"as_any_mut","","",78,[[["self"]],["any"]]],[11,"into_any_arc","","",78,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_any","","",79,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",79,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",79,[[["self"]],["any"]]],[11,"as_any_mut","","",79,[[["self"]],["any"]]],[11,"into_any_arc","","",79,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_any","","",89,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",89,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",89,[[["self"]],["any"]]],[11,"as_any_mut","","",89,[[["self"]],["any"]]],[11,"into_any_arc","","",89,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"into_any","","",171,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",171,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",171,[[["self"]],["any"]]],[11,"as_any_mut","","",171,[[["self"]],["any"]]],[11,"into_any_arc","","",171,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_any","","",91,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",91,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",91,[[["self"]],["any"]]],[11,"as_any_mut","","",91,[[["self"]],["any"]]],[11,"into_any_arc","","",91,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_any","","",92,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",92,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",92,[[["self"]],["any"]]],[11,"as_any_mut","","",92,[[["self"]],["any"]]],[11,"into_any_arc","","",92,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_any","","",94,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",94,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",94,[[["self"]],["any"]]],[11,"as_any_mut","","",94,[[["self"]],["any"]]],[11,"into_any_arc","","",94,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"into_any","","",172,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",172,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",172,[[["self"]],["any"]]],[11,"as_any_mut","","",172,[[["self"]],["any"]]],[11,"into_any_arc","","",172,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_any","","",96,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",96,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",96,[[["self"]],["any"]]],[11,"as_any_mut","","",96,[[["self"]],["any"]]],[11,"into_any_arc","","",96,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",97,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"into_any_arc","","",97,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",101,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any_arc","","",101,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"into_any","","",173,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",173,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",173,[[["self"]],["any"]]],[11,"as_any_mut","","",173,[[["self"]],["any"]]],[11,"into_any_arc","","",173,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"into_any","","",174,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",174,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",174,[[["self"]],["any"]]],[11,"as_any_mut","","",174,[[["self"]],["any"]]],[11,"into_any_arc","","",174,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_any","","",103,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",103,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",103,[[["self"]],["any"]]],[11,"as_any_mut","","",103,[[["self"]],["any"]]],[11,"into_any_arc","","",103,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_any","","",104,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",104,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",104,[[["self"]],["any"]]],[11,"as_any_mut","","",104,[[["self"]],["any"]]],[11,"into_any_arc","","",104,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",105,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"into_any_arc","","",105,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"into_any","","",106,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",106,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",106,[[["self"]],["any"]]],[11,"as_any_mut","","",106,[[["self"]],["any"]]],[11,"into_any_arc","","",106,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"into_any","","",175,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",175,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",175,[[["self"]],["any"]]],[11,"as_any_mut","","",175,[[["self"]],["any"]]],[11,"into_any_arc","","",175,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"into_any","","",176,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",176,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",176,[[["self"]],["any"]]],[11,"as_any_mut","","",176,[[["self"]],["any"]]],[11,"into_any_arc","","",176,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"into_any","","",113,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",113,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",113,[[["self"]],["any"]]],[11,"as_any_mut","","",113,[[["self"]],["any"]]],[11,"into_any_arc","","",113,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"into_any","","",114,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",114,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",114,[[["self"]],["any"]]],[11,"as_any_mut","","",114,[[["self"]],["any"]]],[11,"into_any_arc","","",114,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"into_any","","",119,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",119,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",119,[[["self"]],["any"]]],[11,"as_any_mut","","",119,[[["self"]],["any"]]],[11,"into_any_arc","","",119,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"into_any","","",177,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",177,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",177,[[["self"]],["any"]]],[11,"as_any_mut","","",177,[[["self"]],["any"]]],[11,"into_any_arc","","",177,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"into_any","","",121,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",121,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",121,[[["self"]],["any"]]],[11,"as_any_mut","","",121,[[["self"]],["any"]]],[11,"into_any_arc","","",121,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"into_any","","",122,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",122,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",122,[[["self"]],["any"]]],[11,"as_any_mut","","",122,[[["self"]],["any"]]],[11,"into_any_arc","","",122,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"into_any","","",123,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",123,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",123,[[["self"]],["any"]]],[11,"as_any_mut","","",123,[[["self"]],["any"]]],[11,"into_any_arc","","",123,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"into_any","","",133,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",133,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",133,[[["self"]],["any"]]],[11,"as_any_mut","","",133,[[["self"]],["any"]]],[11,"into_any_arc","","",133,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"into_any","","",178,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",178,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",178,[[["self"]],["any"]]],[11,"as_any_mut","","",178,[[["self"]],["any"]]],[11,"into_any_arc","","",178,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"into_any","","",135,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",135,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",135,[[["self"]],["any"]]],[11,"as_any_mut","","",135,[[["self"]],["any"]]],[11,"into_any_arc","","",135,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"into_any","","",136,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",136,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",136,[[["self"]],["any"]]],[11,"as_any_mut","","",136,[[["self"]],["any"]]],[11,"into_any_arc","","",136,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"into_any","","",138,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",138,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",138,[[["self"]],["any"]]],[11,"as_any_mut","","",138,[[["self"]],["any"]]],[11,"into_any_arc","","",138,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"into_any","","",179,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",179,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",179,[[["self"]],["any"]]],[11,"as_any_mut","","",179,[[["self"]],["any"]]],[11,"into_any_arc","","",179,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"into_any","","",140,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",140,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",140,[[["self"]],["any"]]],[11,"as_any_mut","","",140,[[["self"]],["any"]]],[11,"into_any_arc","","",140,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"into_any","","",141,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",141,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",141,[[["self"]],["any"]]],[11,"as_any_mut","","",141,[[["self"]],["any"]]],[11,"into_any_arc","","",141,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"into_any","","",180,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",180,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",180,[[["self"]],["any"]]],[11,"as_any_mut","","",180,[[["self"]],["any"]]],[11,"into_any_arc","","",180,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"into_any","","",181,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",181,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",181,[[["self"]],["any"]]],[11,"as_any_mut","","",181,[[["self"]],["any"]]],[11,"into_any_arc","","",181,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"into_any","","",143,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",143,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",143,[[["self"]],["any"]]],[11,"as_any_mut","","",143,[[["self"]],["any"]]],[11,"into_any_arc","","",143,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"into_any","","",144,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",144,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",144,[[["self"]],["any"]]],[11,"as_any_mut","","",144,[[["self"]],["any"]]],[11,"into_any_arc","","",144,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"into_any","","",182,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",182,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",182,[[["self"]],["any"]]],[11,"as_any_mut","","",182,[[["self"]],["any"]]],[11,"into_any_arc","","",182,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"into_any","","",183,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",183,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",183,[[["self"]],["any"]]],[11,"as_any_mut","","",183,[[["self"]],["any"]]],[11,"into_any_arc","","",183,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"into_any","","",147,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",147,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",147,[[["self"]],["any"]]],[11,"as_any_mut","","",147,[[["self"]],["any"]]],[11,"into_any_arc","","",147,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"into_any","","",148,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",148,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",148,[[["self"]],["any"]]],[11,"as_any_mut","","",148,[[["self"]],["any"]]],[11,"into_any_arc","","",148,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"into_any","","",184,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",184,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",184,[[["self"]],["any"]]],[11,"as_any_mut","","",184,[[["self"]],["any"]]],[11,"into_any_arc","","",184,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"into_any","","",185,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",185,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",185,[[["self"]],["any"]]],[11,"as_any_mut","","",185,[[["self"]],["any"]]],[11,"into_any_arc","","",185,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"into_any","","",150,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",150,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",150,[[["self"]],["any"]]],[11,"as_any_mut","","",150,[[["self"]],["any"]]],[11,"into_any_arc","","",150,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"into_any","","",151,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",151,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",151,[[["self"]],["any"]]],[11,"as_any_mut","","",151,[[["self"]],["any"]]],[11,"into_any_arc","","",151,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"into_any","","",186,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",186,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",186,[[["self"]],["any"]]],[11,"as_any_mut","","",186,[[["self"]],["any"]]],[11,"into_any_arc","","",186,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",31,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",32,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",33,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",34,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",155,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",35,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",36,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",37,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::presentation_time::client::wp_presentation","",157,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::presentation_time::client::wp_presentation_feedback","",159,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation","",161,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation_feedback","",163,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_wm_base","",165,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_positioner","",167,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_surface","",169,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_toplevel","",170,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::client::xdg_popup","",171,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_wm_base","",172,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_positioner","",174,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_surface","",176,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_toplevel","",177,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_popup","",178,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::viewporter::client::wp_viewporter","",179,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::viewporter::client::wp_viewport","",181,[[["self"]],["proxy"]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewporter","",183,[[["self"]],["resource"]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewport","",185,[[["self"]],["resource"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",31,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",32,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",33,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",34,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",155,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",35,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",36,[[["resource"]],["self"]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",37,[[["resource"]],["self"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation","",157,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::presentation_time::client::wp_presentation_feedback","",159,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",161,[[["resource"]],["self"]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",163,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_wm_base","",165,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_positioner","",167,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_surface","",169,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_toplevel","",170,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::client::xdg_popup","",171,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",172,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",174,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",176,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",177,[[["resource"]],["self"]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",178,[[["resource"]],["self"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewporter","",179,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::viewporter::client::wp_viewport","",181,[[["proxy"]],["self"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",183,[[["resource"]],["self"]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",185,[[["resource"]],["self"]]],[11,"extend","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["intoiterator"]]]],[11,"extend","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["intoiterator"]]]],[11,"extend","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["self"],["intoiterator"]]]],[11,"extend","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["intoiterator"]]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",31,[[["self"]],["gtkprimaryselectiondevicemanager"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",32,[[["self"]],["gtkprimaryselectiondevice"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",33,[[["self"]],["gtkprimaryselectionoffer"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",34,[[["self"]],["gtkprimaryselectionsource"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",155,[[["self"]],["gtkprimaryselectiondevicemanager"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",35,[[["self"]],["gtkprimaryselectiondevice"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",36,[[["self"]],["gtkprimaryselectionoffer"]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",37,[[["self"]],["gtkprimaryselectionsource"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",38,[[["self"]],["error"]]],[11,"clone","","",157,[[["self"]],["wppresentation"]]],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"]],["kind"]]],[11,"clone","","",159,[[["self"]],["wppresentationfeedback"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",46,[[["self"]],["error"]]],[11,"clone","","",161,[[["self"]],["wppresentation"]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"]],["kind"]]],[11,"clone","","",163,[[["self"]],["wppresentationfeedback"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",54,[[["self"]],["error"]]],[11,"clone","","",165,[[["self"]],["xdgwmbase"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",60,[[["self"]],["error"]]],[11,"clone","","",61,[[["self"]],["anchor"]]],[11,"clone","","",62,[[["self"]],["gravity"]]],[11,"clone","","",166,[[["self"]],["constraintadjustment"]]],[11,"clone","","",167,[[["self"]],["xdgpositioner"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",70,[[["self"]],["error"]]],[11,"clone","","",169,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",77,[[["self"]],["resizeedge"]]],[11,"clone","","",78,[[["self"]],["state"]]],[11,"clone","","",170,[[["self"]],["xdgtoplevel"]]],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",91,[[["self"]],["error"]]],[11,"clone","","",171,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",96,[[["self"]],["error"]]],[11,"clone","","",172,[[["self"]],["xdgwmbase"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",103,[[["self"]],["error"]]],[11,"clone","","",104,[[["self"]],["anchor"]]],[11,"clone","","",105,[[["self"]],["gravity"]]],[11,"clone","","",173,[[["self"]],["constraintadjustment"]]],[11,"clone","","",174,[[["self"]],["xdgpositioner"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",113,[[["self"]],["error"]]],[11,"clone","","",176,[[["self"]],["xdgsurface"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",121,[[["self"]],["resizeedge"]]],[11,"clone","","",122,[[["self"]],["state"]]],[11,"clone","","",177,[[["self"]],["xdgtoplevel"]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",135,[[["self"]],["error"]]],[11,"clone","","",178,[[["self"]],["xdgpopup"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",140,[[["self"]],["error"]]],[11,"clone","","",179,[[["self"]],["wpviewporter"]]],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",143,[[["self"]],["error"]]],[11,"clone","","",181,[[["self"]],["wpviewport"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",147,[[["self"]],["error"]]],[11,"clone","","",183,[[["self"]],["wpviewporter"]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",150,[[["self"]],["error"]]],[11,"clone","","",185,[[["self"]],["wpviewport"]]],[11,"cmp","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["kind"],["self"]],["ordering"]]],[11,"cmp","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["kind"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["constraintadjustment"],["self"]],["ordering"]]],[11,"cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",31,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"ne","","",31,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",32,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"ne","","",32,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",33,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"ne","","",33,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",34,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"ne","","",34,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",155,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"ne","","",155,[[["self"],["gtkprimaryselectiondevicemanager"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",35,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"ne","","",35,[[["self"],["gtkprimaryselectiondevice"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",36,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"ne","","",36,[[["gtkprimaryselectionoffer"],["self"]],["bool"]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",37,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"ne","","",37,[[["self"],["gtkprimaryselectionsource"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation","",38,[[["error"],["self"]],["bool"]]],[11,"eq","","",157,[[["wppresentation"],["self"]],["bool"]]],[11,"ne","","",157,[[["wppresentation"],["self"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["kind"],["self"]],["bool"]]],[11,"ne","","",158,[[["kind"],["self"]],["bool"]]],[11,"eq","","",159,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"ne","","",159,[[["self"],["wppresentationfeedback"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation","",46,[[["self"],["error"]],["bool"]]],[11,"eq","","",161,[[["self"],["wppresentation"]],["bool"]]],[11,"ne","","",161,[[["self"],["wppresentation"]],["bool"]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["kind"]],["bool"]]],[11,"ne","","",162,[[["self"],["kind"]],["bool"]]],[11,"eq","","",163,[[["wppresentationfeedback"],["self"]],["bool"]]],[11,"ne","","",163,[[["wppresentationfeedback"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_wm_base","",54,[[["self"],["error"]],["bool"]]],[11,"eq","","",165,[[["xdgwmbase"],["self"]],["bool"]]],[11,"ne","","",165,[[["xdgwmbase"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_positioner","",60,[[["self"],["error"]],["bool"]]],[11,"eq","","",61,[[["self"],["anchor"]],["bool"]]],[11,"eq","","",62,[[["self"],["gravity"]],["bool"]]],[11,"eq","","",166,[[["constraintadjustment"],["self"]],["bool"]]],[11,"ne","","",166,[[["constraintadjustment"],["self"]],["bool"]]],[11,"eq","","",167,[[["self"],["xdgpositioner"]],["bool"]]],[11,"ne","","",167,[[["self"],["xdgpositioner"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_surface","",70,[[["self"],["error"]],["bool"]]],[11,"eq","","",169,[[["xdgsurface"],["self"]],["bool"]]],[11,"ne","","",169,[[["xdgsurface"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_toplevel","",77,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","","",78,[[["self"],["state"]],["bool"]]],[11,"eq","","",170,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"ne","","",170,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::client::xdg_popup","",91,[[["error"],["self"]],["bool"]]],[11,"eq","","",171,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",171,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_wm_base","",96,[[["error"],["self"]],["bool"]]],[11,"eq","","",172,[[["xdgwmbase"],["self"]],["bool"]]],[11,"ne","","",172,[[["xdgwmbase"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_positioner","",103,[[["self"],["error"]],["bool"]]],[11,"eq","","",104,[[["anchor"],["self"]],["bool"]]],[11,"eq","","",105,[[["gravity"],["self"]],["bool"]]],[11,"eq","","",173,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",173,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","","",174,[[["self"],["xdgpositioner"]],["bool"]]],[11,"ne","","",174,[[["self"],["xdgpositioner"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_surface","",113,[[["error"],["self"]],["bool"]]],[11,"eq","","",176,[[["self"],["xdgsurface"]],["bool"]]],[11,"ne","","",176,[[["self"],["xdgsurface"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_toplevel","",121,[[["resizeedge"],["self"]],["bool"]]],[11,"eq","","",122,[[["self"],["state"]],["bool"]]],[11,"eq","","",177,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"ne","","",177,[[["xdgtoplevel"],["self"]],["bool"]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_popup","",135,[[["self"],["error"]],["bool"]]],[11,"eq","","",178,[[["self"],["xdgpopup"]],["bool"]]],[11,"ne","","",178,[[["self"],["xdgpopup"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewporter","",140,[[["self"],["error"]],["bool"]]],[11,"eq","","",179,[[["wpviewporter"],["self"]],["bool"]]],[11,"ne","","",179,[[["wpviewporter"],["self"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::client::wp_viewport","",143,[[["self"],["error"]],["bool"]]],[11,"eq","","",181,[[["self"],["wpviewport"]],["bool"]]],[11,"ne","","",181,[[["self"],["wpviewport"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewporter","",147,[[["error"],["self"]],["bool"]]],[11,"eq","","",183,[[["self"],["wpviewporter"]],["bool"]]],[11,"ne","","",183,[[["self"],["wpviewporter"]],["bool"]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewport","",150,[[["error"],["self"]],["bool"]]],[11,"eq","","",185,[[["wpviewport"],["self"]],["bool"]]],[11,"ne","","",185,[[["wpviewport"],["self"]],["bool"]]],[11,"partial_cmp","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["kind"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",158,[[["kind"],["self"]],["bool"]]],[11,"le","","",158,[[["kind"],["self"]],["bool"]]],[11,"gt","","",158,[[["kind"],["self"]],["bool"]]],[11,"ge","","",158,[[["kind"],["self"]],["bool"]]],[11,"partial_cmp","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["kind"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",162,[[["self"],["kind"]],["bool"]]],[11,"le","","",162,[[["self"],["kind"]],["bool"]]],[11,"gt","","",162,[[["self"],["kind"]],["bool"]]],[11,"ge","","",162,[[["self"],["kind"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["constraintadjustment"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",166,[[["constraintadjustment"],["self"]],["bool"]]],[11,"le","","",166,[[["constraintadjustment"],["self"]],["bool"]]],[11,"gt","","",166,[[["constraintadjustment"],["self"]],["bool"]]],[11,"ge","","",166,[[["constraintadjustment"],["self"]],["bool"]]],[11,"partial_cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["constraintadjustment"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",173,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",173,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",173,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",173,[[["self"],["constraintadjustment"]],["bool"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_wm_base","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_surface","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_toplevel","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_popup","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_wm_base","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_surface","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_toplevel","",121,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_popup","",135,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewporter","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::client::wp_viewport","",143,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewporter","",147,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewport","",150,[[["formatter"],["self"]],["result"]]],[11,"sub","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the set difference of the two sets of flags.",158,[[["kind"]],["kind"]]],[11,"sub","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the set difference of the two sets of flags.",162,[[["kind"]],["kind"]]],[11,"sub","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the set difference of the two sets of flags.",166,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the set difference of the two sets of flags.",173,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Disables all flags enabled in the set.",158,[[["self"],["kind"]]]],[11,"sub_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Disables all flags enabled in the set.",162,[[["self"],["kind"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags enabled in the set.",166,[[["self"],["constraintadjustment"]]]],[11,"sub_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags enabled in the set.",173,[[["constraintadjustment"],["self"]]]],[11,"not","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the complement of this set of flags.",158,[[],["kind"]]],[11,"not","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the complement of this set of flags.",162,[[],["kind"]]],[11,"not","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the complement of this set of flags.",166,[[],["constraintadjustment"]]],[11,"not","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the complement of this set of flags.",173,[[],["constraintadjustment"]]],[11,"bitand","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the intersection between the two sets of flags.",158,[[["kind"]],["kind"]]],[11,"bitand","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the intersection between the two sets of flags.",162,[[["kind"]],["kind"]]],[11,"bitand","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the intersection between the two sets of flags.",166,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the intersection between the two sets of flags.",173,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the union of the two sets of flags.",158,[[["kind"]],["kind"]]],[11,"bitor","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the union of the two sets of flags.",162,[[["kind"]],["kind"]]],[11,"bitor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the union of the two sets of flags.",166,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the union of the two sets of flags.",173,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::presentation_time::client::wp_presentation_feedback","Returns the left flags, but with all the right flags…",158,[[["kind"]],["kind"]]],[11,"bitxor","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the left flags, but with all the right flags…",162,[[["kind"]],["kind"]]],[11,"bitxor","wayland_protocols::xdg_shell::client::xdg_positioner","Returns the left flags, but with all the right flags…",166,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the left flags, but with all the right flags…",173,[[["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Disables all flags disabled in the set.",158,[[["self"],["kind"]]]],[11,"bitand_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Disables all flags disabled in the set.",162,[[["self"],["kind"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Disables all flags disabled in the set.",166,[[["self"],["constraintadjustment"]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags disabled in the set.",173,[[["constraintadjustment"],["self"]]]],[11,"bitor_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Adds the set of flags.",158,[[["self"],["kind"]]]],[11,"bitor_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Adds the set of flags.",162,[[["self"],["kind"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Adds the set of flags.",166,[[["self"],["constraintadjustment"]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Adds the set of flags.",173,[[["constraintadjustment"],["self"]]]],[11,"bitxor_assign","wayland_protocols::presentation_time::client::wp_presentation_feedback","Toggles the set of flags.",158,[[["self"],["kind"]]]],[11,"bitxor_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Toggles the set of flags.",162,[[["self"],["kind"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::client::xdg_positioner","Toggles the set of flags.",166,[[["self"],["constraintadjustment"]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Toggles the set of flags.",173,[[["constraintadjustment"],["self"]]]],[11,"hash","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["__h"]]]],[11,"hash","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["__h"]]]],[11,"hash","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["self"],["__h"]]]],[11,"hash","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["__h"]]]],[11,"from_iter","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["intoiterator"]],["kind"]]],[11,"from_iter","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["intoiterator"]],["kind"]]],[11,"from_iter","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["intoiterator"]],["constraintadjustment"]]],[11,"from_iter","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["intoiterator"]],["constraintadjustment"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::client::wp_presentation_feedback","",158,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",162,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::client::xdg_positioner","",166,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",173,[[["self"],["formatter"]],["result"]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",31,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",32,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",33,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",34,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",155,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",35,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",36,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",37,[[]]],[11,"c_interface","wayland_protocols::presentation_time::client::wp_presentation","",157,[[]]],[11,"c_interface","wayland_protocols::presentation_time::client::wp_presentation_feedback","",159,[[]]],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation","",161,[[]]],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation_feedback","",163,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_wm_base","",165,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_positioner","",167,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_surface","",169,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_toplevel","",170,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::client::xdg_popup","",171,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_wm_base","",172,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_positioner","",174,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_surface","",176,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_toplevel","",177,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_popup","",178,[[]]],[11,"c_interface","wayland_protocols::viewporter::client::wp_viewporter","",179,[[]]],[11,"c_interface","wayland_protocols::viewporter::client::wp_viewport","",181,[[]]],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewporter","",183,[[]]],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewport","",185,[[]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device_manager","",0,[[["self"]],["bool"]]],[11,"opcode","","",0,[[["self"]],["u16"]]],[11,"since","","",0,[[["self"]],["u32"]]],[11,"child","","",0,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",0,[[["message"]],["result"]]],[11,"into_raw","","",0,[[["u32"]],["message"]]],[11,"from_raw_c","","",0,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",0,[[["f"]],["t"]]],[11,"is_destructor","","",154,[[["self"]],["bool"]]],[11,"opcode","","",154,[[["self"]],["u16"]]],[11,"since","","",154,[[["self"]],["u32"]]],[11,"child","","",154,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",154,[[["message"]],["result"]]],[11,"into_raw","","",154,[[["u32"]],["message"]]],[11,"from_raw_c","","",154,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",154,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_device","",2,[[["self"]],["bool"]]],[11,"opcode","","",2,[[["self"]],["u16"]]],[11,"since","","",2,[[["self"]],["u32"]]],[11,"child","","",2,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",2,[[["message"]],["result"]]],[11,"into_raw","","",2,[[["u32"]],["message"]]],[11,"from_raw_c","","",2,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",2,[[["f"]],["t"]]],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"opcode","","",4,[[["self"]],["u16"]]],[11,"since","","",4,[[["self"]],["u32"]]],[11,"child","","",4,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",4,[[["message"]],["result"]]],[11,"into_raw","","",4,[[["u32"]],["message"]]],[11,"from_raw_c","","",4,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",4,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_offer","",7,[[["self"]],["bool"]]],[11,"opcode","","",7,[[["self"]],["u16"]]],[11,"since","","",7,[[["self"]],["u32"]]],[11,"child","","",7,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",7,[[["message"]],["result"]]],[11,"into_raw","","",7,[[["u32"]],["message"]]],[11,"from_raw_c","","",7,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",7,[[["f"]],["t"]]],[11,"is_destructor","","",9,[[["self"]],["bool"]]],[11,"opcode","","",9,[[["self"]],["u16"]]],[11,"since","","",9,[[["self"]],["u32"]]],[11,"child","","",9,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",9,[[["message"]],["result"]]],[11,"into_raw","","",9,[[["u32"]],["message"]]],[11,"from_raw_c","","",9,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",9,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::client::gtk_primary_selection_source","",11,[[["self"]],["bool"]]],[11,"opcode","","",11,[[["self"]],["u16"]]],[11,"since","","",11,[[["self"]],["u32"]]],[11,"child","","",11,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",11,[[["message"]],["result"]]],[11,"into_raw","","",11,[[["u32"]],["message"]]],[11,"from_raw_c","","",11,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",11,[[["f"]],["t"]]],[11,"is_destructor","","",13,[[["self"]],["bool"]]],[11,"opcode","","",13,[[["self"]],["u16"]]],[11,"since","","",13,[[["self"]],["u32"]]],[11,"child","","",13,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",13,[[["message"]],["result"]]],[11,"into_raw","","",13,[[["u32"]],["message"]]],[11,"from_raw_c","","",13,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",13,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",15,[[["self"]],["bool"]]],[11,"opcode","","",15,[[["self"]],["u16"]]],[11,"since","","",15,[[["self"]],["u32"]]],[11,"child","","",15,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",15,[[["message"]],["result"]]],[11,"into_raw","","",15,[[["u32"]],["message"]]],[11,"from_raw_c","","",15,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",15,[[["f"]],["t"]]],[11,"is_destructor","","",156,[[["self"]],["bool"]]],[11,"opcode","","",156,[[["self"]],["u16"]]],[11,"since","","",156,[[["self"]],["u32"]]],[11,"child","","",156,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",156,[[["message"]],["result"]]],[11,"into_raw","","",156,[[["u32"]],["message"]]],[11,"from_raw_c","","",156,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",156,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",18,[[["message"]],["result"]]],[11,"into_raw","","",18,[[["u32"]],["message"]]],[11,"from_raw_c","","",18,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",18,[[["f"]],["t"]]],[11,"is_destructor","","",20,[[["self"]],["bool"]]],[11,"opcode","","",20,[[["self"]],["u16"]]],[11,"since","","",20,[[["self"]],["u32"]]],[11,"child","","",20,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",20,[[["message"]],["result"]]],[11,"into_raw","","",20,[[["u32"]],["message"]]],[11,"from_raw_c","","",20,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",20,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",23,[[["self"]],["bool"]]],[11,"opcode","","",23,[[["self"]],["u16"]]],[11,"since","","",23,[[["self"]],["u32"]]],[11,"child","","",23,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",23,[[["message"]],["result"]]],[11,"into_raw","","",23,[[["u32"]],["message"]]],[11,"from_raw_c","","",23,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",23,[[["f"]],["t"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"opcode","","",25,[[["self"]],["u16"]]],[11,"since","","",25,[[["self"]],["u32"]]],[11,"child","","",25,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",25,[[["message"]],["result"]]],[11,"into_raw","","",25,[[["u32"]],["message"]]],[11,"from_raw_c","","",25,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",25,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",27,[[["self"]],["bool"]]],[11,"opcode","","",27,[[["self"]],["u16"]]],[11,"since","","",27,[[["self"]],["u32"]]],[11,"child","","",27,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",27,[[["message"]],["result"]]],[11,"into_raw","","",27,[[["u32"]],["message"]]],[11,"from_raw_c","","",27,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",27,[[["f"]],["t"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"opcode","","",29,[[["self"]],["u16"]]],[11,"since","","",29,[[["self"]],["u32"]]],[11,"child","","",29,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",29,[[["message"]],["result"]]],[11,"into_raw","","",29,[[["u32"]],["message"]]],[11,"from_raw_c","","",29,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",29,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"since","","",39,[[["self"]],["u32"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",39,[[["message"]],["result"]]],[11,"into_raw","","",39,[[["u32"]],["message"]]],[11,"from_raw_c","","",39,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",39,[[["f"]],["t"]]],[11,"is_destructor","","",41,[[["self"]],["bool"]]],[11,"opcode","","",41,[[["self"]],["u16"]]],[11,"since","","",41,[[["self"]],["u32"]]],[11,"child","","",41,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",41,[[["message"]],["result"]]],[11,"into_raw","","",41,[[["u32"]],["message"]]],[11,"from_raw_c","","",41,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",41,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::client::wp_presentation_feedback","",160,[[["self"]],["bool"]]],[11,"opcode","","",160,[[["self"]],["u16"]]],[11,"since","","",160,[[["self"]],["u32"]]],[11,"child","","",160,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",160,[[["message"]],["result"]]],[11,"into_raw","","",160,[[["u32"]],["message"]]],[11,"from_raw_c","","",160,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",160,[[["f"]],["t"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"opcode","","",43,[[["self"]],["u16"]]],[11,"since","","",43,[[["self"]],["u32"]]],[11,"child","","",43,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",43,[[["message"]],["result"]]],[11,"into_raw","","",43,[[["u32"]],["message"]]],[11,"from_raw_c","","",43,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",43,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation","",47,[[["self"]],["bool"]]],[11,"opcode","","",47,[[["self"]],["u16"]]],[11,"since","","",47,[[["self"]],["u32"]]],[11,"child","","",47,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",47,[[["message"]],["result"]]],[11,"into_raw","","",47,[[["u32"]],["message"]]],[11,"from_raw_c","","",47,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",47,[[["f"]],["t"]]],[11,"is_destructor","","",49,[[["self"]],["bool"]]],[11,"opcode","","",49,[[["self"]],["u16"]]],[11,"since","","",49,[[["self"]],["u32"]]],[11,"child","","",49,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",49,[[["message"]],["result"]]],[11,"into_raw","","",49,[[["u32"]],["message"]]],[11,"from_raw_c","","",49,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",49,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation_feedback","",164,[[["self"]],["bool"]]],[11,"opcode","","",164,[[["self"]],["u16"]]],[11,"since","","",164,[[["self"]],["u32"]]],[11,"child","","",164,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",164,[[["message"]],["result"]]],[11,"into_raw","","",164,[[["u32"]],["message"]]],[11,"from_raw_c","","",164,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",164,[[["f"]],["t"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"opcode","","",51,[[["self"]],["u16"]]],[11,"since","","",51,[[["self"]],["u32"]]],[11,"child","","",51,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",51,[[["message"]],["result"]]],[11,"into_raw","","",51,[[["u32"]],["message"]]],[11,"from_raw_c","","",51,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",51,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_wm_base","",55,[[["self"]],["bool"]]],[11,"opcode","","",55,[[["self"]],["u16"]]],[11,"since","","",55,[[["self"]],["u32"]]],[11,"child","","",55,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",55,[[["message"]],["result"]]],[11,"into_raw","","",55,[[["u32"]],["message"]]],[11,"from_raw_c","","",55,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",55,[[["f"]],["t"]]],[11,"is_destructor","","",58,[[["self"]],["bool"]]],[11,"opcode","","",58,[[["self"]],["u16"]]],[11,"since","","",58,[[["self"]],["u32"]]],[11,"child","","",58,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",58,[[["message"]],["result"]]],[11,"into_raw","","",58,[[["u32"]],["message"]]],[11,"from_raw_c","","",58,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",58,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_positioner","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"since","","",63,[[["self"]],["u32"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",63,[[["message"]],["result"]]],[11,"into_raw","","",63,[[["u32"]],["message"]]],[11,"from_raw_c","","",63,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",63,[[["f"]],["t"]]],[11,"is_destructor","","",168,[[["self"]],["bool"]]],[11,"opcode","","",168,[[["self"]],["u16"]]],[11,"since","","",168,[[["self"]],["u32"]]],[11,"child","","",168,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",168,[[["message"]],["result"]]],[11,"into_raw","","",168,[[["u32"]],["message"]]],[11,"from_raw_c","","",168,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",168,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_surface","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"since","","",71,[[["self"]],["u32"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",71,[[["message"]],["result"]]],[11,"into_raw","","",71,[[["u32"]],["message"]]],[11,"from_raw_c","","",71,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",71,[[["f"]],["t"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"opcode","","",75,[[["self"]],["u16"]]],[11,"since","","",75,[[["self"]],["u32"]]],[11,"child","","",75,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",75,[[["message"]],["result"]]],[11,"into_raw","","",75,[[["u32"]],["message"]]],[11,"from_raw_c","","",75,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",75,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_toplevel","",79,[[["self"]],["bool"]]],[11,"opcode","","",79,[[["self"]],["u16"]]],[11,"since","","",79,[[["self"]],["u32"]]],[11,"child","","",79,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",79,[[["message"]],["result"]]],[11,"into_raw","","",79,[[["u32"]],["message"]]],[11,"from_raw_c","","",79,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",79,[[["f"]],["t"]]],[11,"is_destructor","","",89,[[["self"]],["bool"]]],[11,"opcode","","",89,[[["self"]],["u16"]]],[11,"since","","",89,[[["self"]],["u32"]]],[11,"child","","",89,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",89,[[["message"]],["result"]]],[11,"into_raw","","",89,[[["u32"]],["message"]]],[11,"from_raw_c","","",89,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",89,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::client::xdg_popup","",92,[[["self"]],["bool"]]],[11,"opcode","","",92,[[["self"]],["u16"]]],[11,"since","","",92,[[["self"]],["u32"]]],[11,"child","","",92,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",92,[[["message"]],["result"]]],[11,"into_raw","","",92,[[["u32"]],["message"]]],[11,"from_raw_c","","",92,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",92,[[["f"]],["t"]]],[11,"is_destructor","","",94,[[["self"]],["bool"]]],[11,"opcode","","",94,[[["self"]],["u16"]]],[11,"since","","",94,[[["self"]],["u32"]]],[11,"child","","",94,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",94,[[["message"]],["result"]]],[11,"into_raw","","",94,[[["u32"]],["message"]]],[11,"from_raw_c","","",94,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",94,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_wm_base","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",97,[[["message"]],["result"]]],[11,"into_raw","","",97,[[["u32"]],["message"]]],[11,"from_raw_c","","",97,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",97,[[["f"]],["t"]]],[11,"is_destructor","","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",101,[[["message"]],["result"]]],[11,"into_raw","","",101,[[["u32"]],["message"]]],[11,"from_raw_c","","",101,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",101,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_positioner","",106,[[["self"]],["bool"]]],[11,"opcode","","",106,[[["self"]],["u16"]]],[11,"since","","",106,[[["self"]],["u32"]]],[11,"child","","",106,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",106,[[["message"]],["result"]]],[11,"into_raw","","",106,[[["u32"]],["message"]]],[11,"from_raw_c","","",106,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",106,[[["f"]],["t"]]],[11,"is_destructor","","",175,[[["self"]],["bool"]]],[11,"opcode","","",175,[[["self"]],["u16"]]],[11,"since","","",175,[[["self"]],["u32"]]],[11,"child","","",175,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",175,[[["message"]],["result"]]],[11,"into_raw","","",175,[[["u32"]],["message"]]],[11,"from_raw_c","","",175,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",175,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_surface","",114,[[["self"]],["bool"]]],[11,"opcode","","",114,[[["self"]],["u16"]]],[11,"since","","",114,[[["self"]],["u32"]]],[11,"child","","",114,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",114,[[["message"]],["result"]]],[11,"into_raw","","",114,[[["u32"]],["message"]]],[11,"from_raw_c","","",114,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",114,[[["f"]],["t"]]],[11,"is_destructor","","",119,[[["self"]],["bool"]]],[11,"opcode","","",119,[[["self"]],["u16"]]],[11,"since","","",119,[[["self"]],["u32"]]],[11,"child","","",119,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",119,[[["message"]],["result"]]],[11,"into_raw","","",119,[[["u32"]],["message"]]],[11,"from_raw_c","","",119,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",119,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_toplevel","",123,[[["self"]],["bool"]]],[11,"opcode","","",123,[[["self"]],["u16"]]],[11,"since","","",123,[[["self"]],["u32"]]],[11,"child","","",123,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",123,[[["message"]],["result"]]],[11,"into_raw","","",123,[[["u32"]],["message"]]],[11,"from_raw_c","","",123,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",123,[[["f"]],["t"]]],[11,"is_destructor","","",133,[[["self"]],["bool"]]],[11,"opcode","","",133,[[["self"]],["u16"]]],[11,"since","","",133,[[["self"]],["u32"]]],[11,"child","","",133,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",133,[[["message"]],["result"]]],[11,"into_raw","","",133,[[["u32"]],["message"]]],[11,"from_raw_c","","",133,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",133,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_popup","",136,[[["self"]],["bool"]]],[11,"opcode","","",136,[[["self"]],["u16"]]],[11,"since","","",136,[[["self"]],["u32"]]],[11,"child","","",136,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",136,[[["message"]],["result"]]],[11,"into_raw","","",136,[[["u32"]],["message"]]],[11,"from_raw_c","","",136,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",136,[[["f"]],["t"]]],[11,"is_destructor","","",138,[[["self"]],["bool"]]],[11,"opcode","","",138,[[["self"]],["u16"]]],[11,"since","","",138,[[["self"]],["u32"]]],[11,"child","","",138,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",138,[[["message"]],["result"]]],[11,"into_raw","","",138,[[["u32"]],["message"]]],[11,"from_raw_c","","",138,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",138,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewporter","",141,[[["self"]],["bool"]]],[11,"opcode","","",141,[[["self"]],["u16"]]],[11,"since","","",141,[[["self"]],["u32"]]],[11,"child","","",141,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",141,[[["message"]],["result"]]],[11,"into_raw","","",141,[[["u32"]],["message"]]],[11,"from_raw_c","","",141,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",141,[[["f"]],["t"]]],[11,"is_destructor","","",180,[[["self"]],["bool"]]],[11,"opcode","","",180,[[["self"]],["u16"]]],[11,"since","","",180,[[["self"]],["u32"]]],[11,"child","","",180,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",180,[[["message"]],["result"]]],[11,"into_raw","","",180,[[["u32"]],["message"]]],[11,"from_raw_c","","",180,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",180,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::client::wp_viewport","",144,[[["self"]],["bool"]]],[11,"opcode","","",144,[[["self"]],["u16"]]],[11,"since","","",144,[[["self"]],["u32"]]],[11,"child","","",144,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",144,[[["message"]],["result"]]],[11,"into_raw","","",144,[[["u32"]],["message"]]],[11,"from_raw_c","","",144,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",144,[[["f"]],["t"]]],[11,"is_destructor","","",182,[[["self"]],["bool"]]],[11,"opcode","","",182,[[["self"]],["u16"]]],[11,"since","","",182,[[["self"]],["u32"]]],[11,"child","","",182,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",182,[[["message"]],["result"]]],[11,"into_raw","","",182,[[["u32"]],["message"]]],[11,"from_raw_c","","",182,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",182,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewporter","",148,[[["self"]],["bool"]]],[11,"opcode","","",148,[[["self"]],["u16"]]],[11,"since","","",148,[[["self"]],["u32"]]],[11,"child","","",148,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",148,[[["message"]],["result"]]],[11,"into_raw","","",148,[[["u32"]],["message"]]],[11,"from_raw_c","","",148,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",148,[[["f"]],["t"]]],[11,"is_destructor","","",184,[[["self"]],["bool"]]],[11,"opcode","","",184,[[["self"]],["u16"]]],[11,"since","","",184,[[["self"]],["u32"]]],[11,"child","","",184,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",184,[[["message"]],["result"]]],[11,"into_raw","","",184,[[["u32"]],["message"]]],[11,"from_raw_c","","",184,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",184,[[["f"]],["t"]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewport","",151,[[["self"]],["bool"]]],[11,"opcode","","",151,[[["self"]],["u16"]]],[11,"since","","",151,[[["self"]],["u32"]]],[11,"child","","",151,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",151,[[["message"]],["result"]]],[11,"into_raw","","",151,[[["u32"]],["message"]]],[11,"from_raw_c","","",151,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",151,[[["f"]],["t"]]],[11,"is_destructor","","",186,[[["self"]],["bool"]]],[11,"opcode","","",186,[[["self"]],["u16"]]],[11,"since","","",186,[[["self"]],["u32"]]],[11,"child","","",186,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",186,[[["message"]],["result"]]],[11,"into_raw","","",186,[[["u32"]],["message"]]],[11,"from_raw_c","","",186,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",186,[[["f"]],["t"]]],[11,"from_raw","wayland_protocols::presentation_time::client::wp_presentation","",38,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",38,[[["self"]],["u32"]]],[11,"destroy","","unbind from the presentation interface",157,[[["self"]]]],[11,"feedback","","request presentation feedback information",157,[[["wlsurface"],["self"]],[["wppresentationfeedback"],["main",["wppresentationfeedback"]]]]],[18,"Vsync","wayland_protocols::presentation_time::client::wp_presentation_feedback","presentation was vsync'd",158,null],[18,"HwClock","","hardware provided the presentation timestamp",158,null],[18,"HwCompletion","","hardware signalled the start of the presentation",158,null],[18,"ZeroCopy","","presentation was done zero-copy",158,null],[11,"empty","","Returns an empty set of flags",158,[[],["kind"]]],[11,"all","","Returns the set containing all flags.",158,[[],["kind"]]],[11,"bits","","Returns the raw value of the flags currently stored.",158,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",158,[[["u32"]],[["option",["kind"]],["kind"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",158,[[["u32"]],["kind"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",158,[[["u32"]],["kind"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",158,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",158,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",158,[[["self"],["kind"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",158,[[["self"],["kind"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",158,[[["self"],["kind"]]]],[11,"remove","","Removes the specified flags in-place.",158,[[["self"],["kind"]]]],[11,"toggle","","Toggles the specified flags in-place.",158,[[["self"],["kind"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",158,[[["self"],["kind"],["bool"]]]],[11,"from_raw","","",158,[[["u32"]],[["kind"],["option",["kind"]]]]],[11,"to_raw","","",158,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::presentation_time::server::wp_presentation","",46,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"clock_id","","clock ID for timestamps",161,[[["u32"],["self"]]]],[18,"Vsync","wayland_protocols::presentation_time::server::wp_presentation_feedback","presentation was vsync'd",162,null],[18,"HwClock","","hardware provided the presentation timestamp",162,null],[18,"HwCompletion","","hardware signalled the start of the presentation",162,null],[18,"ZeroCopy","","presentation was done zero-copy",162,null],[11,"empty","","Returns an empty set of flags",162,[[],["kind"]]],[11,"all","","Returns the set containing all flags.",162,[[],["kind"]]],[11,"bits","","Returns the raw value of the flags currently stored.",162,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",162,[[["u32"]],[["option",["kind"]],["kind"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",162,[[["u32"]],["kind"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",162,[[["u32"]],["kind"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",162,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",162,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",162,[[["self"],["kind"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",162,[[["self"],["kind"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",162,[[["self"],["kind"]]]],[11,"remove","","Removes the specified flags in-place.",162,[[["self"],["kind"]]]],[11,"toggle","","Toggles the specified flags in-place.",162,[[["self"],["kind"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",162,[[["bool"],["self"],["kind"]]]],[11,"from_raw","","",162,[[["u32"]],[["option",["kind"]],["kind"]]]],[11,"to_raw","","",162,[[["self"]],["u32"]]],[11,"sync_output","","presentation synchronized to this output",163,[[["self"],["wloutput"]]]],[11,"presented","","the content update was displayed",163,[[["u32"],["self"]]]],[11,"discarded","","the content update was not displayed",163,[[["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_wm_base","",54,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",54,[[["self"]],["u32"]]],[11,"destroy","","destroy xdg_wm_base",165,[[["self"]]]],[11,"create_positioner","","create a positioner object",165,[[["self"]],[["main",["xdgpositioner"]],["xdgpositioner"]]]],[11,"get_xdg_surface","","create a shell surface from a surface",165,[[["wlsurface"],["self"]],[["xdgsurface"],["main",["xdgsurface"]]]]],[11,"pong","","respond to a ping event",165,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_positioner","",60,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",60,[[["self"]],["u32"]]],[11,"from_raw","","",61,[[["u32"]],[["option",["anchor"]],["anchor"]]]],[11,"to_raw","","",61,[[["self"]],["u32"]]],[11,"from_raw","","",62,[[["u32"]],[["gravity"],["option",["gravity"]]]]],[11,"to_raw","","",62,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",166,null],[18,"SlideX","","move along the x axis until unconstrained",166,null],[18,"SlideY","","move along the y axis until unconstrained",166,null],[18,"FlipX","","invert the anchor and gravity on the x axis",166,null],[18,"FlipY","","invert the anchor and gravity on the y axis",166,null],[18,"ResizeX","","horizontally resize the surface",166,null],[18,"ResizeY","","vertically resize the surface",166,null],[11,"empty","","Returns an empty set of flags",166,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",166,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",166,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",166,[[["u32"]],[["option",["constraintadjustment"]],["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",166,[[["u32"]],["constraintadjustment"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",166,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",166,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",166,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",166,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",166,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",166,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",166,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",166,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",166,[[["bool"],["self"],["constraintadjustment"]]]],[11,"from_raw","","",166,[[["u32"]],[["option",["constraintadjustment"]],["constraintadjustment"]]]],[11,"to_raw","","",166,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_positioner object",167,[[["self"]]]],[11,"set_size","","set the size of the to-be positioned rectangle",167,[[["self"],["i32"]]]],[11,"set_anchor_rect","","set the anchor rectangle within the parent surface",167,[[["self"],["i32"]]]],[11,"set_anchor","","set anchor rectangle anchor",167,[[["anchor"],["self"]]]],[11,"set_gravity","","set child surface gravity",167,[[["gravity"],["self"]]]],[11,"set_constraint_adjustment","","set the adjustment to be done when constrained",167,[[["u32"],["self"]]]],[11,"set_offset","","set surface position offset",167,[[["self"],["i32"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_surface","",70,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",70,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_surface",169,[[["self"]]]],[11,"get_toplevel","","assign the xdg_toplevel surface role",169,[[["self"]],[["main",["xdgtoplevel"]],["xdgtoplevel"]]]],[11,"get_popup","","assign the xdg_popup surface role",169,[[["xdgpositioner"],["xdgsurface"],["option",["xdgsurface"]],["self"]],[["main",["xdgpopup"]],["xdgpopup"]]]],[11,"set_window_geometry","","set the new window geometry",169,[[["self"],["i32"]]]],[11,"ack_configure","","ack a configure event",169,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_toplevel","",77,[[["u32"]],[["resizeedge"],["option",["resizeedge"]]]]],[11,"to_raw","","",77,[[["self"]],["u32"]]],[11,"from_raw","","",78,[[["u32"]],[["state"],["option",["state"]]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"destroy","","destroy the xdg_toplevel",170,[[["self"]]]],[11,"set_parent","","set the parent of this surface",170,[[["xdgtoplevel"],["self"],["option",["xdgtoplevel"]]]]],[11,"set_title","","set surface title",170,[[["self"],["string"]]]],[11,"set_app_id","","set application ID",170,[[["self"],["string"]]]],[11,"show_window_menu","","show the window menu",170,[[["u32"],["i32"],["wlseat"],["self"]]]],[11,"_move","","start an interactive move",170,[[["wlseat"],["self"],["u32"]]]],[11,"resize","","start an interactive resize",170,[[["resizeedge"],["u32"],["wlseat"],["self"]]]],[11,"set_max_size","","set the maximum size",170,[[["self"],["i32"]]]],[11,"set_min_size","","set the minimum size",170,[[["self"],["i32"]]]],[11,"set_maximized","","maximize the window",170,[[["self"]]]],[11,"unset_maximized","","unmaximize the window",170,[[["self"]]]],[11,"set_fullscreen","","set the window as fullscreen on an output",170,[[["wloutput"],["self"],["option",["wloutput"]]]]],[11,"unset_fullscreen","","unset the window as fullscreen",170,[[["self"]]]],[11,"set_minimized","","set the window as minimized",170,[[["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::client::xdg_popup","",91,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",91,[[["self"]],["u32"]]],[11,"destroy","","remove xdg_popup interface",171,[[["self"]]]],[11,"grab","","make the popup take an explicit grab",171,[[["wlseat"],["self"],["u32"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_wm_base","",96,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",96,[[["self"]],["u32"]]],[11,"ping","","check if the client is alive",172,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_positioner","",103,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",103,[[["self"]],["u32"]]],[11,"from_raw","","",104,[[["u32"]],[["anchor"],["option",["anchor"]]]]],[11,"to_raw","","",104,[[["self"]],["u32"]]],[11,"from_raw","","",105,[[["u32"]],[["gravity"],["option",["gravity"]]]]],[11,"to_raw","","",105,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",173,null],[18,"SlideX","","move along the x axis until unconstrained",173,null],[18,"SlideY","","move along the y axis until unconstrained",173,null],[18,"FlipX","","invert the anchor and gravity on the x axis",173,null],[18,"FlipY","","invert the anchor and gravity on the y axis",173,null],[18,"ResizeX","","horizontally resize the surface",173,null],[18,"ResizeY","","vertically resize the surface",173,null],[11,"empty","","Returns an empty set of flags",173,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",173,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",173,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",173,[[["u32"]],[["constraintadjustment"],["option",["constraintadjustment"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",173,[[["u32"]],["constraintadjustment"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",173,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",173,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",173,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",173,[[["constraintadjustment"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",173,[[["constraintadjustment"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",173,[[["constraintadjustment"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",173,[[["constraintadjustment"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",173,[[["constraintadjustment"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",173,[[["constraintadjustment"],["self"],["bool"]]]],[11,"from_raw","","",173,[[["u32"]],[["option",["constraintadjustment"]],["constraintadjustment"]]]],[11,"to_raw","","",173,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_surface","",113,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",113,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",176,[[["u32"],["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_toplevel","",121,[[["u32"]],[["resizeedge"],["option",["resizeedge"]]]]],[11,"to_raw","","",121,[[["self"]],["u32"]]],[11,"from_raw","","",122,[[["u32"]],[["state"],["option",["state"]]]]],[11,"to_raw","","",122,[[["self"]],["u32"]]],[11,"configure","","suggest a surface change",177,[[["u8"],["i32"],["vec",["u8"]],["self"]]]],[11,"close","","surface wants to be closed",177,[[["self"]]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_popup","",135,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",135,[[["self"]],["u32"]]],[11,"configure","","configure the popup surface",178,[[["self"],["i32"]]]],[11,"popup_done","","popup interaction is done",178,[[["self"]]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewporter","",140,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",140,[[["self"]],["u32"]]],[11,"destroy","","unbind from the cropping and scaling interface",179,[[["self"]]]],[11,"get_viewport","","extend surface interface for crop and scale",179,[[["wlsurface"],["self"]],[["main",["wpviewport"]],["wpviewport"]]]],[11,"from_raw","wayland_protocols::viewporter::client::wp_viewport","",143,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",143,[[["self"]],["u32"]]],[11,"destroy","","remove scaling and cropping from the surface",181,[[["self"]]]],[11,"set_source","","set the source rectangle for cropping",181,[[["f64"],["self"]]]],[11,"set_destination","","set the surface size for scaling",181,[[["self"],["i32"]]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewporter","",147,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",147,[[["self"]],["u32"]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewport","",150,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",150,[[["self"]],["u32"]]]],"p":[[4,"Request"],[13,"GetDevice"],[4,"Request"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Selection"],[4,"Request"],[13,"Receive"],[4,"Event"],[13,"Offer"],[4,"Request"],[13,"Offer"],[4,"Event"],[13,"Send"],[4,"Request"],[13,"CreateSource"],[13,"GetDevice"],[4,"Request"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Selection"],[4,"Request"],[13,"Receive"],[4,"Event"],[13,"Offer"],[4,"Request"],[13,"Offer"],[4,"Event"],[13,"Send"],[3,"GtkPrimarySelectionDeviceManager"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[4,"Error"],[4,"Request"],[13,"Feedback"],[4,"Event"],[13,"ClockId"],[4,"Event"],[13,"SyncOutput"],[13,"Presented"],[4,"Error"],[4,"Request"],[13,"Feedback"],[4,"Event"],[13,"ClockId"],[4,"Event"],[13,"SyncOutput"],[13,"Presented"],[4,"Error"],[4,"Request"],[13,"GetXdgSurface"],[13,"Pong"],[4,"Event"],[13,"Ping"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetAnchor"],[13,"SetGravity"],[13,"SetConstraintAdjustment"],[13,"SetOffset"],[4,"Error"],[4,"Request"],[13,"GetPopup"],[13,"SetWindowGeometry"],[13,"AckConfigure"],[4,"Event"],[13,"Configure"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[13,"SetParent"],[13,"SetTitle"],[13,"SetAppId"],[13,"ShowWindowMenu"],[13,"Move"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"Grab"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"CreatePositioner"],[13,"GetXdgSurface"],[13,"Pong"],[4,"Event"],[13,"Ping"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetAnchor"],[13,"SetGravity"],[13,"SetConstraintAdjustment"],[13,"SetOffset"],[4,"Error"],[4,"Request"],[13,"GetToplevel"],[13,"GetPopup"],[13,"SetWindowGeometry"],[13,"AckConfigure"],[4,"Event"],[13,"Configure"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[13,"SetParent"],[13,"SetTitle"],[13,"SetAppId"],[13,"ShowWindowMenu"],[13,"Move"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"Grab"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"GetViewport"],[4,"Error"],[4,"Request"],[13,"SetSource"],[13,"SetDestination"],[4,"Error"],[4,"Request"],[13,"GetViewport"],[4,"Error"],[4,"Request"],[13,"SetSource"],[13,"SetDestination"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[4,"Event"],[3,"WpPresentation"],[3,"Kind"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"WpPresentation"],[3,"Kind"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"]]};
searchIndex["wayland_scanner"] = {"doc":"Wayland scanner crate","i":[[4,"Side","wayland_scanner","Side to generate",null,null],[13,"Client","","wayland client applications",0,null],[13,"Server","","wayland compositors",0,null],[5,"generate_code","","Generate the code for a protocol",null,[[["path"],["side"],["asref",["path"]]]]],[5,"generate_code_with_destructor_events","","Generate the code for a protocol with aditionnal…",null,[[["path"],["asref",["path"]],["side"]]]],[5,"generate_code_streams","","Generate the code for a protocol from/to IO streams",null,[[["p2"],["read"],["side"]]]],[5,"generate_code_streams_with_destructor_events","","Generate the code for a protocol from/to IO streams with…",null,[[["p2"],["read"],["side"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["side"]]],[11,"eq","","",0,[[["self"],["side"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[4,"Side"]]};
searchIndex["wayland_server"] = {"doc":"Server-side Wayland connector","i":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of…",null,null],[3,"DispatchData","","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,[[]]],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,null],[10,"opcode","","The opcode of this message",1,[[["self"]],["u16"]]],[10,"is_destructor","","Whether this message is a destructor",1,[[["self"]],["bool"]]],[10,"since","","The minimal object version for which this message exists",1,[[["self"]],["u32"]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[["u16"],["u32"],["meta"]],[["option",["object"]],["object"]]]],[10,"from_raw","","Construct a message from its raw representation",1,[[["message"]],["result"]]],[10,"into_raw","","Turn this message into its raw representation",1,[[["u32"]],["message"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,[[["u32"]],["result"]]],[10,"as_raw_c_in","","Build a C representation of this message",1,[[["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Client","","A handle to a client connected to your server",null,null],[3,"Display","","The wayland display",null,null],[3,"Global","","A handle to a global object",null,null],[3,"Main","","A main handle to a proxy",null,null],[3,"Resource","","An handle to a wayland resource",null,null],[3,"AnonymousObject","","Anonymous interface",null,null],[3,"ResourceMap","","A handle to the object map internal to the library state",null,null],[11,"alive","","Checks whether this client is still connected to the server",2,[[["self"]],["bool"]]],[11,"equals","","Checks whether `self` and `other` refer to the same client",2,[[["client"],["self"]],["bool"]]],[11,"flush","","Flushes the pending events to this client",2,[[["self"]]]],[11,"kill","","Kills this client",2,[[["self"]]]],[11,"data_map","","Returns a reference to the `UserDataMap` associated with…",2,[[["self"]],["userdatamap"]]],[11,"add_destructor","","Adds a destructor for this client",2,[[["arc",["userdatamap"]],["self"],["filter",["arc"]]]]],[11,"create_resource","","Creates a new resource for this client",2,[[["u32"],["self"]],[["option",["main"]],["main"]]]],[11,"new","","Create a new display",3,[[],["display"]]],[11,"create_global","","Create a new global object",3,[[["self"],["u32"],["filter"]],["global"]]],[11,"create_global_with_filter","","Create a new global object with a client filter",3,[[["u32"],["self"],["f"],["filter"]],["global"]]],[11,"flush_clients","","Flush events to the clients",3,[[["self"],["t"]]]],[11,"dispatch","","Dispatches all pending messages to their respective filters",3,[[["self"],["t"],["duration"]],["ioresult"]]],[11,"get_poll_fd","","Retrieve the underlying file descriptor",3,[[["self"]],["rawfd"]]],[11,"add_socket","","Add a listening socket to this display",3,[[["self"],["option"]],["ioresult"]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",3,[[["self"]],[["ioresult",["osstring"]],["osstring"]]]],[11,"add_socket_from","","Add existing listening socket to this display",3,[[["self"],["t"]],["ioresult"]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw…",3,[[["self"],["rawfd"]],["ioresult"]]],[11,"create_client","","Create a new client to this display from an…",3,[[["self"],["rawfd"],["t"]],["client"]]],[11,"destroy","","Destroys the associated global object.",4,[[]]],[11,"send","","Send an event through this object",5,[[["self"]]]],[11,"is_alive","","Check if the object associated with this resource is still…",5,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object…",5,[[["self"]],["u32"]]],[11,"equals","","Check if the other resource refers to the same underlying…",5,[[["self"],["resource"]],["bool"]]],[11,"same_client_as","","Check if this resource and the other belong to the same…",5,[[["resource"],["self"]],["bool"]]],[11,"post_error","","Posts a protocol error to this resource",5,[[["u32"],["self"],["string"]]]],[11,"user_data","","Access the UserData associated to this object",5,[[["self"]],["userdata"]]],[11,"client","","Retrieve an handle to the client associated with this…",5,[[["self"]],[["client"],["option",["client"]]]]],[11,"id","","Retrieve the object id of this wayland object",5,[[["self"]],["u32"]]],[11,"is_external","","Check whether this resource is managed by the library or not",5,[[["self"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",5,[[["self"]]]],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",5,[[],["self"]]],[11,"assign","","Assign this object to given filter",6,[[["self"],["filter"]]]],[11,"quick_assign","","Shorthand for assigning a closure to an object",6,[[["self"],["f"]]]],[11,"assign_destructor","","Assign a destructor to this object",6,[[["self"],["filter"]]]],[11,"init_from_c_ptr","","Create a `Main` instance from a C pointer to a new object",6,[[],["self"]]],[0,"sys","","C-associated types",null,null],[0,"common","wayland_server::sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_server::sys::common","",null,null],[12,"name","","",7,null],[12,"signature","","",7,null],[12,"types","","",7,null],[3,"wl_interface","","",null,null],[12,"name","","",8,null],[12,"version","","",8,null],[12,"request_count","","",8,null],[12,"requests","","",8,null],[12,"event_count","","",8,null],[12,"events","","",8,null],[3,"wl_list","","",null,null],[12,"prev","","",9,null],[12,"next","","",9,null],[3,"wl_array","","",null,null],[12,"size","","",10,null],[12,"alloc","","",10,null],[12,"data","","",10,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",null,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",null,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",null,[[["i32"]],["i32"]]],[19,"wl_argument","","",null,null],[12,"i","","",11,null],[12,"u","","",11,null],[12,"f","","",11,null],[12,"s","","",11,null],[12,"o","","",11,null],[12,"n","","",11,null],[12,"a","","",11,null],[12,"h","","",11,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",null,null],[4,"wl_client","wayland_server::sys::server","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[3,"wl_listener","","",null,null],[12,"link","","",12,null],[12,"notify","","",12,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",13,null],[11,"get","wayland_server","Returns the `Resource` corresponding to a given id",14,[[["self"],["u32"]],[["option",["resource"]],["resource"]]]],[11,"get_new","","Creates a `NewResource` for a given id",14,[[["self"],["u32"]],[["option",["main"]],["main"]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",15,null],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",16,null],[7,"wl_callback_events","wayland_server::protocol::wl_callback","C-representation of the messages of this interface, for…",null,null],[7,"wl_callback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[11,"done","","done event",17,[[["u32"],["self"]]]],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",18,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",19,null],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",18,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",20,null],[4,"Event","wayland_server::protocol::wl_compositor","",null,null],[7,"wl_compositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_compositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",21,null],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",22,null],[12,"offset","","",22,null],[12,"width","","",22,null],[12,"height","","",22,null],[12,"stride","","",22,null],[12,"format","","",22,null],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",21,null],[13,"Resize","","change the size of the pool mapping",21,null],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",23,null],[4,"Event","wayland_server::protocol::wl_shm_pool","",null,null],[7,"wl_shm_pool_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_pool_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",24,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",24,null],[13,"InvalidFd","","mmapping the file descriptor failed",24,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",25,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",25,null],[13,"C8","","8-bit color index format, [7:0] C",25,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",25,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",25,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",25,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",25,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",25,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",25,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",25,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",25,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",25,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",25,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",25,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",25,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",25,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",25,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",25,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",25,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",25,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",25,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",25,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",25,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",25,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",25,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",25,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",25,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",25,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",25,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",25,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",25,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",25,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",25,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",25,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",25,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",25,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",25,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",25,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",25,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",25,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",25,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",25,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",25,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",25,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",25,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",25,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",25,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",25,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",25,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",25,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",25,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",25,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",25,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",25,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",25,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",25,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",25,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",25,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",26,null],[12,"id","wayland_server::protocol::wl_shm::Request","",27,null],[12,"fd","","",27,null],[12,"size","","",27,null],[4,"Event","wayland_server::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",28,null],[12,"format","wayland_server::protocol::wl_shm::Event","",29,null],[7,"wl_shm_requests","wayland_server::protocol::wl_shm","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_POOL_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",24,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",24,[[["self"]],["u32"]]],[11,"from_raw","","",25,[[["u32"]],[["option",["format"]],["format"]]]],[11,"to_raw","","",25,[[["self"]],["u32"]]],[11,"format","","pixel format description",30,[[["format"],["self"]]]],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",31,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",32,null],[7,"wl_buffer_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[11,"release","","compositor releases buffer",33,[[["self"]]]],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",34,null],[13,"InvalidActionMask","","action mask contains invalid values",34,null],[13,"InvalidAction","","action argument has an invalid value",34,null],[13,"InvalidOffer","","offer doesn't accept this request",34,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",35,null],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",36,null],[12,"mime_type","","",36,null],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",35,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",37,null],[12,"fd","","",37,null],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",35,null],[13,"Finish","","the offer will no longer be used",35,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",35,null],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",38,null],[12,"preferred_action","","",38,null],[4,"Event","wayland_server::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",39,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",40,null],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",39,null],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",41,null],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",39,null],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",42,null],[7,"wl_data_offer_requests","wayland_server::protocol::wl_data_offer","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_ACCEPT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",34,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"offer","","advertise offered mime type",43,[[["self"],["string"]]]],[11,"source_actions","","notify the source-side available actions",43,[[["u32"],["self"]]]],[11,"action","","notify the selected action",43,[[["u32"],["self"]]]],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",44,null],[13,"InvalidSource","","source doesn't accept this request",44,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",45,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",46,null],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",45,null],[13,"SetActions","","set the available drag-and-drop actions",45,null],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",47,null],[4,"Event","wayland_server::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",48,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",49,null],[13,"Send","wayland_server::protocol::wl_data_source","send the data",48,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",50,null],[12,"fd","","",50,null],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",48,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",48,null],[13,"DndFinished","","the drag-and-drop operation concluded",48,null],[13,"Action","","notify the selected action",48,null],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",51,null],[7,"wl_data_source_requests","wayland_server::protocol::wl_data_source","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",44,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",44,[[["self"]],["u32"]]],[11,"target","","a target accepts an offered mime type",52,[[["string"],["self"],["option",["string"]]]]],[11,"send","","send the data",52,[[["rawfd"],["self"],["string"]]]],[11,"cancelled","","selection was cancelled",52,[[["self"]]]],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",52,[[["self"]]]],[11,"dnd_finished","","the drag-and-drop operation concluded",52,[[["self"]]]],[11,"action","","notify the selected action",52,[[["u32"],["self"]]]],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",53,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",54,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",55,null],[12,"origin","","",55,null],[12,"icon","","",55,null],[12,"serial","","",55,null],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",54,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",56,null],[12,"serial","","",56,null],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",54,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",57,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",58,null],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",57,null],[12,"serial","wayland_server::protocol::wl_data_device::Event","",59,null],[12,"surface","","",59,null],[12,"x","","",59,null],[12,"y","","",59,null],[12,"id","","",59,null],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",57,null],[13,"Motion","","drag-and-drop session motion",57,null],[12,"time","wayland_server::protocol::wl_data_device::Event","",60,null],[12,"x","","",60,null],[12,"y","","",60,null],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",57,null],[13,"Selection","","advertise new selection",57,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",61,null],[7,"wl_data_device_requests","wayland_server::protocol::wl_data_device","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_START_DRAG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",53,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",53,[[["self"]],["u32"]]],[11,"data_offer","","introduce a new wl_data_offer",62,[[["self"],["wldataoffer"]]]],[11,"enter","","initiate drag-and-drop session",62,[[["option",["wldataoffer"]],["u32"],["wldataoffer"],["f64"],["self"],["wlsurface"]]]],[11,"leave","","end drag-and-drop session",62,[[["self"]]]],[11,"motion","","drag-and-drop session motion",62,[[["u32"],["f64"],["self"]]]],[11,"drop","","end drag-and-drop session successfully",62,[[["self"]]]],[11,"selection","","advertise new selection",62,[[["option",["wldataoffer"]],["self"],["wldataoffer"]]]],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",63,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",64,null],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",63,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",65,null],[12,"seat","","",65,null],[4,"Event","wayland_server::protocol::wl_data_device_manager","",null,null],[7,"wl_data_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[18,"None","","no action",66,null],[18,"Copy","","copy action",66,null],[18,"Move","","move action",66,null],[18,"Ask","","ask action",66,null],[11,"empty","","Returns an empty set of flags",66,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",66,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",66,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",66,[[["u32"]],[["option",["dndaction"]],["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",66,[[["u32"]],["dndaction"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",66,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",66,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",66,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",66,[[["dndaction"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",66,[[["dndaction"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",66,[[["dndaction"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",66,[[["dndaction"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",66,[[["dndaction"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",66,[[["dndaction"],["self"],["bool"]]]],[11,"from_raw","","",66,[[["u32"]],[["dndaction"],["option",["dndaction"]]]]],[11,"to_raw","","",66,[[["self"]],["u32"]]],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",67,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",68,null],[12,"id","wayland_server::protocol::wl_shell::Request","",69,null],[12,"surface","","",69,null],[4,"Event","wayland_server::protocol::wl_shell","",null,null],[7,"wl_shell_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",67,[[["u32"]],[["error"],["option",["error"]]]]],[11,"to_raw","","",67,[[["self"]],["u32"]]],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",70,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on…",70,null],[13,"Driver","","switch output mode to the smallest mode that can fit the…",70,null],[13,"Fill","","no upscaling, center on output and add black borders to…",70,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",71,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",72,null],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",71,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",73,null],[12,"serial","","",73,null],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",71,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",74,null],[12,"serial","","",74,null],[12,"edges","","",74,null],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",71,null],[13,"SetTransient","","make the surface a transient surface",71,null],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",75,null],[12,"x","","",75,null],[12,"y","","",75,null],[12,"flags","","",75,null],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",71,null],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",76,null],[12,"framerate","","",76,null],[12,"output","","",76,null],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",71,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",77,null],[12,"serial","","",77,null],[12,"parent","","",77,null],[12,"x","","",77,null],[12,"y","","",77,null],[12,"flags","","",77,null],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",71,null],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",78,null],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",71,null],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",79,null],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",71,null],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",80,null],[4,"Event","wayland_server::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",81,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",82,null],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",81,null],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",83,null],[12,"width","","",83,null],[12,"height","","",83,null],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",81,null],[7,"wl_shell_surface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[18,"None","","no edge",84,null],[18,"Top","","top edge",84,null],[18,"Bottom","","bottom edge",84,null],[18,"Left","","left edge",84,null],[18,"TopLeft","","top and left edges",84,null],[18,"BottomLeft","","bottom and left edges",84,null],[18,"Right","","right edge",84,null],[18,"TopRight","","top and right edges",84,null],[18,"BottomRight","","bottom and right edges",84,null],[11,"empty","","Returns an empty set of flags",84,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",84,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",84,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",84,[[["u32"]],[["resize"],["option",["resize"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",84,[[["u32"]],["resize"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",84,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",84,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",84,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",84,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",84,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",84,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",84,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",84,[[["self"],["resize"],["bool"]]]],[11,"from_raw","","",84,[[["u32"]],[["resize"],["option",["resize"]]]]],[11,"to_raw","","",84,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",85,null],[11,"empty","","Returns an empty set of flags",85,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",85,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",85,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",85,[[["u32"]],[["option",["transient"]],["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",85,[[["u32"]],["transient"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",85,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",85,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",85,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",85,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",85,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",85,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",85,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",85,[[["bool"],["self"],["transient"]]]],[11,"from_raw","","",85,[[["u32"]],[["option",["transient"]],["transient"]]]],[11,"to_raw","","",85,[[["self"]],["u32"]]],[11,"from_raw","","",70,[[["u32"]],[["fullscreenmethod"],["option",["fullscreenmethod"]]]]],[11,"to_raw","","",70,[[["self"]],["u32"]]],[11,"ping","","ping client",86,[[["u32"],["self"]]]],[11,"configure","","suggest resize",86,[[["resize"],["i32"],["self"]]]],[11,"popup_done","","popup interaction is done",86,[[["self"]]]],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",87,null],[13,"InvalidTransform","","buffer transform value is invalid",87,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",88,null],[13,"Attach","","set the surface contents",88,null],[12,"buffer","wayland_server::protocol::wl_surface::Request","",89,null],[12,"x","","",89,null],[12,"y","","",89,null],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",88,null],[12,"x","wayland_server::protocol::wl_surface::Request","",90,null],[12,"y","","",90,null],[12,"width","","",90,null],[12,"height","","",90,null],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",88,null],[12,"callback","wayland_server::protocol::wl_surface::Request","",91,null],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",88,null],[12,"region","wayland_server::protocol::wl_surface::Request","",92,null],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",88,null],[12,"region","wayland_server::protocol::wl_surface::Request","",93,null],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",88,null],[13,"SetBufferTransform","","sets the buffer transformation",88,null],[12,"transform","wayland_server::protocol::wl_surface::Request","",94,null],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",88,null],[12,"scale","wayland_server::protocol::wl_surface::Request","",95,null],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",88,null],[12,"x","wayland_server::protocol::wl_surface::Request","",96,null],[12,"y","","",96,null],[12,"width","","",96,null],[12,"height","","",96,null],[4,"Event","wayland_server::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",97,null],[12,"output","wayland_server::protocol::wl_surface::Event","",98,null],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",97,null],[12,"output","wayland_server::protocol::wl_surface::Event","",99,null],[7,"wl_surface_requests","wayland_server::protocol::wl_surface","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",87,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",87,[[["self"]],["u32"]]],[11,"enter","","surface enters an output",100,[[["wloutput"],["self"]]]],[11,"leave","","surface leaves an output",100,[[["wloutput"],["self"]]]],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",101,null],[12,"id","wayland_server::protocol::wl_seat::Request","",102,null],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",101,null],[12,"id","wayland_server::protocol::wl_seat::Request","",103,null],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",101,null],[12,"id","wayland_server::protocol::wl_seat::Request","",104,null],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",101,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",105,null],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",106,null],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",105,null],[12,"name","wayland_server::protocol::wl_seat::Event","",107,null],[7,"wl_seat_requests","wayland_server::protocol::wl_seat","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_POINTER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[18,"Pointer","","the seat has pointer devices",108,null],[18,"Keyboard","","the seat has one or more keyboards",108,null],[18,"Touch","","the seat has touch devices",108,null],[11,"empty","","Returns an empty set of flags",108,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",108,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",108,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",108,[[["u32"]],[["capability"],["option",["capability"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",108,[[["u32"]],["capability"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",108,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",108,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",108,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",108,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",108,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",108,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",108,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",108,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",108,[[["self"],["capability"],["bool"]]]],[11,"from_raw","","",108,[[["u32"]],[["option",["capability"]],["capability"]]]],[11,"to_raw","","",108,[[["self"]],["u32"]]],[11,"capabilities","","seat capabilities changed",109,[[["self"],["capability"]]]],[11,"name","","unique identifier for this seat",109,[[["self"],["string"]]]],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",110,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",111,null],[13,"Pressed","","the button is pressed",111,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",112,null],[13,"HorizontalScroll","","horizontal axis",112,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel rotation",113,null],[13,"Finger","","finger on a touch surface",113,null],[13,"Continuous","","continuous coordinate space",113,null],[13,"WheelTilt","","a physical wheel tilt",113,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",114,null],[12,"serial","wayland_server::protocol::wl_pointer::Request","",115,null],[12,"surface","","",115,null],[12,"hotspot_x","","",115,null],[12,"hotspot_y","","",115,null],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",114,null],[4,"Event","","",null,null],[13,"Enter","","enter event",116,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",117,null],[12,"surface","","",117,null],[12,"surface_x","","",117,null],[12,"surface_y","","",117,null],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",116,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",118,null],[12,"surface","","",118,null],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",116,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",119,null],[12,"surface_x","","",119,null],[12,"surface_y","","",119,null],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",116,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",120,null],[12,"time","","",120,null],[12,"button","","",120,null],[12,"state","","",120,null],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",116,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",121,null],[12,"axis","","",121,null],[12,"value","","",121,null],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",116,null],[13,"AxisSource","","axis source event",116,null],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",122,null],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",116,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",123,null],[12,"axis","","",123,null],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",116,null],[12,"axis","wayland_server::protocol::wl_pointer::Event","",124,null],[12,"discrete","","",124,null],[7,"wl_pointer_requests","wayland_server::protocol::wl_pointer","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",110,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",110,[[["self"]],["u32"]]],[11,"from_raw","","",111,[[["u32"]],[["option",["buttonstate"]],["buttonstate"]]]],[11,"to_raw","","",111,[[["self"]],["u32"]]],[11,"from_raw","","",112,[[["u32"]],[["option",["axis"]],["axis"]]]],[11,"to_raw","","",112,[[["self"]],["u32"]]],[11,"from_raw","","",113,[[["u32"]],[["axissource"],["option",["axissource"]]]]],[11,"to_raw","","",113,[[["self"]],["u32"]]],[11,"enter","","enter event",125,[[["u32"],["f64"],["self"],["wlsurface"]]]],[11,"leave","","leave event",125,[[["u32"],["self"],["wlsurface"]]]],[11,"motion","","pointer motion event",125,[[["u32"],["f64"],["self"]]]],[11,"button","","pointer button event",125,[[["u32"],["self"],["buttonstate"]]]],[11,"axis","","axis event",125,[[["u32"],["f64"],["self"],["axis"]]]],[11,"frame","","end of a pointer event sequence",125,[[["self"]]]],[11,"axis_source","","axis source event",125,[[["self"],["axissource"]]]],[11,"axis_stop","","axis stop event",125,[[["u32"],["self"],["axis"]]]],[11,"axis_discrete","","axis click event",125,[[["i32"],["self"],["axis"]]]],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",126,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",126,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",127,null],[13,"Pressed","","key is pressed",127,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",128,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",129,null],[12,"format","wayland_server::protocol::wl_keyboard::Event","",130,null],[12,"fd","","",130,null],[12,"size","","",130,null],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",129,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",131,null],[12,"surface","","",131,null],[12,"keys","","",131,null],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",129,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",132,null],[12,"surface","","",132,null],[13,"Key","wayland_server::protocol::wl_keyboard","key event",129,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",133,null],[12,"time","","",133,null],[12,"key","","",133,null],[12,"state","","",133,null],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",129,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",134,null],[12,"mods_depressed","","",134,null],[12,"mods_latched","","",134,null],[12,"mods_locked","","",134,null],[12,"group","","",134,null],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",129,null],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",135,null],[12,"delay","","",135,null],[7,"wl_keyboard_requests","wayland_server::protocol::wl_keyboard","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",126,[[["u32"]],[["keymapformat"],["option",["keymapformat"]]]]],[11,"to_raw","","",126,[[["self"]],["u32"]]],[11,"from_raw","","",127,[[["u32"]],[["option",["keystate"]],["keystate"]]]],[11,"to_raw","","",127,[[["self"]],["u32"]]],[11,"keymap","","keyboard mapping",136,[[["rawfd"],["u32"],["self"],["keymapformat"]]]],[11,"enter","","enter event",136,[[["vec",["u8"]],["u32"],["u8"],["self"],["wlsurface"]]]],[11,"leave","","leave event",136,[[["u32"],["self"],["wlsurface"]]]],[11,"key","","key event",136,[[["keystate"],["u32"],["self"]]]],[11,"modifiers","","modifier and group state",136,[[["u32"],["self"]]]],[11,"repeat_info","","repeat rate and delay",136,[[["self"],["i32"]]]],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",137,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",138,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",139,null],[12,"time","","",139,null],[12,"surface","","",139,null],[12,"id","","",139,null],[12,"x","","",139,null],[12,"y","","",139,null],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",138,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",140,null],[12,"time","","",140,null],[12,"id","","",140,null],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",138,null],[12,"time","wayland_server::protocol::wl_touch::Event","",141,null],[12,"id","","",141,null],[12,"x","","",141,null],[12,"y","","",141,null],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",138,null],[13,"Cancel","","touch session cancelled",138,null],[13,"Shape","","update shape of touch point",138,null],[12,"id","wayland_server::protocol::wl_touch::Event","",142,null],[12,"major","","",142,null],[12,"minor","","",142,null],[13,"Orientation","wayland_server::protocol::wl_touch","update orientation of touch point",138,null],[12,"id","wayland_server::protocol::wl_touch::Event","",143,null],[12,"orientation","","",143,null],[7,"wl_touch_requests","wayland_server::protocol::wl_touch","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",null,null],[11,"down","","touch down event and beginning of a touch sequence",144,[[["u32"],["i32"],["f64"],["self"],["wlsurface"]]]],[11,"up","","end of a touch event sequence",144,[[["u32"],["self"],["i32"]]]],[11,"motion","","update of touch point coordinates",144,[[["u32"],["i32"],["f64"],["self"]]]],[11,"frame","","end of touch frame event",144,[[["self"]]]],[11,"cancel","","touch session cancelled",144,[[["self"]]]],[11,"shape","","update shape of touch point",144,[[["i32"],["f64"],["self"]]]],[11,"orientation","","update orientation of touch point",144,[[["f64"],["self"],["i32"]]]],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"Mode","wayland_server::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",145,null],[13,"None","","no geometry",145,null],[13,"HorizontalRgb","","horizontal RGB",145,null],[13,"HorizontalBgr","","horizontal BGR",145,null],[13,"VerticalRgb","","vertical RGB",145,null],[13,"VerticalBgr","","vertical BGR",145,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",146,null],[13,"_90","","90 degrees counter-clockwise",146,null],[13,"_180","","180 degrees counter-clockwise",146,null],[13,"_270","","270 degrees counter-clockwise",146,null],[13,"Flipped","","180 degree flip around a vertical axis",146,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",146,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",146,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",146,null],[4,"Request","","",null,null],[13,"Release","","release the output object",147,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",148,null],[12,"x","wayland_server::protocol::wl_output::Event","",149,null],[12,"y","","",149,null],[12,"physical_width","","",149,null],[12,"physical_height","","",149,null],[12,"subpixel","","",149,null],[12,"make","","",149,null],[12,"model","","",149,null],[12,"transform","","",149,null],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",148,null],[12,"flags","wayland_server::protocol::wl_output::Event","",150,null],[12,"width","","",150,null],[12,"height","","",150,null],[12,"refresh","","",150,null],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",148,null],[13,"Scale","","output scaling properties",148,null],[12,"factor","wayland_server::protocol::wl_output::Event","",151,null],[7,"wl_output_requests","wayland_server::protocol::wl_output","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",145,[[["u32"]],[["option",["subpixel"]],["subpixel"]]]],[11,"to_raw","","",145,[[["self"]],["u32"]]],[11,"from_raw","","",146,[[["u32"]],[["transform"],["option",["transform"]]]]],[11,"to_raw","","",146,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",152,null],[18,"Preferred","","indicates this is the preferred mode",152,null],[11,"empty","","Returns an empty set of flags",152,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",152,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",152,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",152,[[["u32"]],[["option",["mode"]],["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",152,[[["u32"]],["mode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",152,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",152,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",152,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",152,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",152,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",152,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",152,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",152,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",152,[[["bool"],["self"],["mode"]]]],[11,"from_raw","","",152,[[["u32"]],[["option",["mode"]],["mode"]]]],[11,"to_raw","","",152,[[["self"]],["u32"]]],[11,"geometry","","properties of the output",153,[[["subpixel"],["i32"],["transform"],["self"],["string"]]]],[11,"mode","","advertise available modes for the output",153,[[["i32"],["mode"],["self"]]]],[11,"done","","sent all information about output",153,[[["self"]]]],[11,"scale","","output scaling properties",153,[[["self"],["i32"]]]],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",154,null],[13,"Add","","add rectangle to region",154,null],[12,"x","wayland_server::protocol::wl_region::Request","",155,null],[12,"y","","",155,null],[12,"width","","",155,null],[12,"height","","",155,null],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",154,null],[12,"x","wayland_server::protocol::wl_region::Request","",156,null],[12,"y","","",156,null],[12,"width","","",156,null],[12,"height","","",156,null],[4,"Event","wayland_server::protocol::wl_region","",null,null],[7,"wl_region_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_region_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",157,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",158,null],[13,"GetSubsurface","","give a surface the role sub-surface",158,null],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",159,null],[12,"surface","","",159,null],[12,"parent","","",159,null],[4,"Event","wayland_server::protocol::wl_subcompositor","",null,null],[7,"wl_subcompositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subcompositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",157,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",157,[[["self"]],["u32"]]],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",160,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",161,null],[13,"SetPosition","","reposition the sub-surface",161,null],[12,"x","wayland_server::protocol::wl_subsurface::Request","",162,null],[12,"y","","",162,null],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",161,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",163,null],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",161,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",164,null],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",161,null],[13,"SetDesync","","set sub-surface to desynchronized mode",161,null],[4,"Event","","",null,null],[7,"wl_subsurface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subsurface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",160,[[["u32"]],[["option",["error"]],["error"]]]],[11,"to_raw","","",160,[[["self"]],["u32"]]],[14,"request_enum","wayland_server","Generate an enum joining several objects requests",null,null],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"into_any","","",165,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",165,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",165,[[["self"]],["any"]]],[11,"as_any_mut","","",165,[[["self"]],["any"]]],[11,"into_any_arc","","",165,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"into_any","","",166,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",166,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",166,[[["self"]],["any"]]],[11,"as_any_mut","","",166,[[["self"]],["any"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"into_any","","",167,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",167,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",167,[[["self"]],["any"]]],[11,"as_any_mut","","",167,[[["self"]],["any"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"into_any","","",168,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",168,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",168,[[["self"]],["any"]]],[11,"as_any_mut","","",168,[[["self"]],["any"]]],[11,"into_any_arc","","",168,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"into_any","","",2,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",2,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",2,[[["self"]],["any"]]],[11,"as_any_mut","","",2,[[["self"]],["any"]]],[11,"into_any_arc","","",2,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"into_any","","",3,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",3,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",3,[[["self"]],["any"]]],[11,"as_any_mut","","",3,[[["self"]],["any"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"into_any","","",4,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",4,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",4,[[["self"]],["any"]]],[11,"as_any_mut","","",4,[[["self"]],["any"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_any","","",6,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",6,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",6,[[["self"]],["any"]]],[11,"as_any_mut","","",6,[[["self"]],["any"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"into_any","","",5,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",5,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",5,[[["self"]],["any"]]],[11,"as_any_mut","","",5,[[["self"]],["any"]]],[11,"into_any_arc","","",5,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"into_any","","",169,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",169,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",169,[[["self"]],["any"]]],[11,"as_any_mut","","",169,[[["self"]],["any"]]],[11,"into_any_arc","","",169,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"into_any","","",14,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",14,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",14,[[["self"]],["any"]]],[11,"as_any_mut","","",14,[[["self"]],["any"]]],[11,"into_any_arc","","",14,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::sys::common","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"into_any","","",7,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",7,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",7,[[["self"]],["any"]]],[11,"as_any_mut","","",7,[[["self"]],["any"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_any","","",8,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",8,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",8,[[["self"]],["any"]]],[11,"as_any_mut","","",8,[[["self"]],["any"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"into_any","","",9,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",9,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",9,[[["self"]],["any"]]],[11,"as_any_mut","","",9,[[["self"]],["any"]]],[11,"into_any_arc","","",9,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"into_any","","",10,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",10,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",10,[[["self"]],["any"]]],[11,"as_any_mut","","",10,[[["self"]],["any"]]],[11,"into_any_arc","","",10,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"into_any","","",11,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",11,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",11,[[["self"]],["any"]]],[11,"as_any_mut","","",11,[[["self"]],["any"]]],[11,"from","wayland_server::sys::server","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"into_any","","",170,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",170,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",170,[[["self"]],["any"]]],[11,"as_any_mut","","",170,[[["self"]],["any"]]],[11,"into_any_arc","","",170,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"into_any","","",171,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",171,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",171,[[["self"]],["any"]]],[11,"as_any_mut","","",171,[[["self"]],["any"]]],[11,"into_any_arc","","",171,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"into_any","","",172,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",172,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",172,[[["self"]],["any"]]],[11,"as_any_mut","","",172,[[["self"]],["any"]]],[11,"into_any_arc","","",172,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"into_any","","",173,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",173,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",173,[[["self"]],["any"]]],[11,"as_any_mut","","",173,[[["self"]],["any"]]],[11,"into_any_arc","","",173,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"into_any","","",174,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",174,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",174,[[["self"]],["any"]]],[11,"as_any_mut","","",174,[[["self"]],["any"]]],[11,"into_any_arc","","",174,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"into_any","","",175,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",175,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",175,[[["self"]],["any"]]],[11,"as_any_mut","","",175,[[["self"]],["any"]]],[11,"into_any_arc","","",175,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"into_any","","",176,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",176,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",176,[[["self"]],["any"]]],[11,"as_any_mut","","",176,[[["self"]],["any"]]],[11,"into_any_arc","","",176,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"into_any","","",12,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",12,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",12,[[["self"]],["any"]]],[11,"as_any_mut","","",12,[[["self"]],["any"]]],[11,"into_any_arc","","",12,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"into_any","","",13,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",13,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",13,[[["self"]],["any"]]],[11,"as_any_mut","","",13,[[["self"]],["any"]]],[11,"into_any_arc","","",13,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_callback","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"into_any","","",17,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",17,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",17,[[["self"]],["any"]]],[11,"as_any_mut","","",17,[[["self"]],["any"]]],[11,"into_any_arc","","",17,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"into_any","","",177,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",177,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",177,[[["self"]],["any"]]],[11,"as_any_mut","","",177,[[["self"]],["any"]]],[11,"into_any_arc","","",177,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"into_any","","",15,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",15,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",15,[[["self"]],["any"]]],[11,"as_any_mut","","",15,[[["self"]],["any"]]],[11,"into_any_arc","","",15,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_compositor","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"into_any","","",178,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",178,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",178,[[["self"]],["any"]]],[11,"as_any_mut","","",178,[[["self"]],["any"]]],[11,"into_any_arc","","",178,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"into_any","","",18,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",18,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",18,[[["self"]],["any"]]],[11,"as_any_mut","","",18,[[["self"]],["any"]]],[11,"into_any_arc","","",18,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"into_any","","",179,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",179,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",179,[[["self"]],["any"]]],[11,"as_any_mut","","",179,[[["self"]],["any"]]],[11,"into_any_arc","","",179,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_shm_pool","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"into_any","","",180,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",180,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",180,[[["self"]],["any"]]],[11,"as_any_mut","","",180,[[["self"]],["any"]]],[11,"into_any_arc","","",180,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"into_any","","",21,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",21,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",21,[[["self"]],["any"]]],[11,"as_any_mut","","",21,[[["self"]],["any"]]],[11,"into_any_arc","","",21,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"into_any","","",181,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",181,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",181,[[["self"]],["any"]]],[11,"as_any_mut","","",181,[[["self"]],["any"]]],[11,"into_any_arc","","",181,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_shm","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_any","","",30,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",30,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",30,[[["self"]],["any"]]],[11,"as_any_mut","","",30,[[["self"]],["any"]]],[11,"into_any_arc","","",30,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"into_any","","",24,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",24,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",24,[[["self"]],["any"]]],[11,"as_any_mut","","",24,[[["self"]],["any"]]],[11,"into_any_arc","","",24,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"into_any","","",25,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",25,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",25,[[["self"]],["any"]]],[11,"as_any_mut","","",25,[[["self"]],["any"]]],[11,"into_any_arc","","",25,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_any","","",26,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",26,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",26,[[["self"]],["any"]]],[11,"as_any_mut","","",26,[[["self"]],["any"]]],[11,"into_any_arc","","",26,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_any","","",28,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",28,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",28,[[["self"]],["any"]]],[11,"as_any_mut","","",28,[[["self"]],["any"]]],[11,"into_any_arc","","",28,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_buffer","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_any","","",33,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",33,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",33,[[["self"]],["any"]]],[11,"as_any_mut","","",33,[[["self"]],["any"]]],[11,"into_any_arc","","",33,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_any","","",31,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",31,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",31,[[["self"]],["any"]]],[11,"as_any_mut","","",31,[[["self"]],["any"]]],[11,"into_any_arc","","",31,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_any","","",32,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",32,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",32,[[["self"]],["any"]]],[11,"as_any_mut","","",32,[[["self"]],["any"]]],[11,"into_any_arc","","",32,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_data_offer","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_any","","",43,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",43,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",43,[[["self"]],["any"]]],[11,"as_any_mut","","",43,[[["self"]],["any"]]],[11,"into_any_arc","","",43,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_any","","",34,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",34,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",34,[[["self"]],["any"]]],[11,"as_any_mut","","",34,[[["self"]],["any"]]],[11,"into_any_arc","","",34,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_any","","",35,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",35,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",35,[[["self"]],["any"]]],[11,"as_any_mut","","",35,[[["self"]],["any"]]],[11,"into_any_arc","","",35,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_any","","",39,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",39,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",39,[[["self"]],["any"]]],[11,"as_any_mut","","",39,[[["self"]],["any"]]],[11,"into_any_arc","","",39,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_data_source","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_any","","",52,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",52,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",52,[[["self"]],["any"]]],[11,"as_any_mut","","",52,[[["self"]],["any"]]],[11,"into_any_arc","","",52,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_any","","",44,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",44,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",44,[[["self"]],["any"]]],[11,"as_any_mut","","",44,[[["self"]],["any"]]],[11,"into_any_arc","","",44,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_any","","",45,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",45,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",45,[[["self"]],["any"]]],[11,"as_any_mut","","",45,[[["self"]],["any"]]],[11,"into_any_arc","","",45,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_any","","",48,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",48,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",48,[[["self"]],["any"]]],[11,"as_any_mut","","",48,[[["self"]],["any"]]],[11,"into_any_arc","","",48,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_data_device","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_any","","",62,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",62,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",62,[[["self"]],["any"]]],[11,"as_any_mut","","",62,[[["self"]],["any"]]],[11,"into_any_arc","","",62,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_any","","",53,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",53,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",53,[[["self"]],["any"]]],[11,"as_any_mut","","",53,[[["self"]],["any"]]],[11,"into_any_arc","","",53,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_any","","",54,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",54,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",54,[[["self"]],["any"]]],[11,"as_any_mut","","",54,[[["self"]],["any"]]],[11,"into_any_arc","","",54,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_any","","",57,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",57,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",57,[[["self"]],["any"]]],[11,"as_any_mut","","",57,[[["self"]],["any"]]],[11,"into_any_arc","","",57,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_any","","",66,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",66,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",66,[[["self"]],["any"]]],[11,"as_any_mut","","",66,[[["self"]],["any"]]],[11,"into_any_arc","","",66,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"into_any","","",182,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",182,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",182,[[["self"]],["any"]]],[11,"as_any_mut","","",182,[[["self"]],["any"]]],[11,"into_any_arc","","",182,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_any","","",63,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",63,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",63,[[["self"]],["any"]]],[11,"as_any_mut","","",63,[[["self"]],["any"]]],[11,"into_any_arc","","",63,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"into_any","","",183,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",183,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",183,[[["self"]],["any"]]],[11,"as_any_mut","","",183,[[["self"]],["any"]]],[11,"into_any_arc","","",183,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_shell","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"into_any","","",184,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",184,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",184,[[["self"]],["any"]]],[11,"as_any_mut","","",184,[[["self"]],["any"]]],[11,"into_any_arc","","",184,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_any","","",67,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",67,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",67,[[["self"]],["any"]]],[11,"as_any_mut","","",67,[[["self"]],["any"]]],[11,"into_any_arc","","",67,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_any","","",68,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",68,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",68,[[["self"]],["any"]]],[11,"as_any_mut","","",68,[[["self"]],["any"]]],[11,"into_any_arc","","",68,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"into_any","","",185,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",185,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",185,[[["self"]],["any"]]],[11,"as_any_mut","","",185,[[["self"]],["any"]]],[11,"into_any_arc","","",185,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_shell_surface","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_any","","",84,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",84,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",84,[[["self"]],["any"]]],[11,"as_any_mut","","",84,[[["self"]],["any"]]],[11,"into_any_arc","","",84,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_any","","",85,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",85,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",85,[[["self"]],["any"]]],[11,"as_any_mut","","",85,[[["self"]],["any"]]],[11,"into_any_arc","","",85,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_any","","",86,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",86,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",86,[[["self"]],["any"]]],[11,"as_any_mut","","",86,[[["self"]],["any"]]],[11,"into_any_arc","","",86,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_any","","",70,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",70,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",70,[[["self"]],["any"]]],[11,"as_any_mut","","",70,[[["self"]],["any"]]],[11,"into_any_arc","","",70,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_any","","",71,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",71,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",71,[[["self"]],["any"]]],[11,"as_any_mut","","",71,[[["self"]],["any"]]],[11,"into_any_arc","","",71,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_any","","",81,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",81,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",81,[[["self"]],["any"]]],[11,"as_any_mut","","",81,[[["self"]],["any"]]],[11,"into_any_arc","","",81,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_surface","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_any","","",100,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",100,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",100,[[["self"]],["any"]]],[11,"as_any_mut","","",100,[[["self"]],["any"]]],[11,"into_any_arc","","",100,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_any","","",87,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",87,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",87,[[["self"]],["any"]]],[11,"as_any_mut","","",87,[[["self"]],["any"]]],[11,"into_any_arc","","",87,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_any","","",88,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",88,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",88,[[["self"]],["any"]]],[11,"as_any_mut","","",88,[[["self"]],["any"]]],[11,"into_any_arc","","",88,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_any","","",97,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",97,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",97,[[["self"]],["any"]]],[11,"as_any_mut","","",97,[[["self"]],["any"]]],[11,"into_any_arc","","",97,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_seat","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"into_any","","",108,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",108,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",108,[[["self"]],["any"]]],[11,"as_any_mut","","",108,[[["self"]],["any"]]],[11,"into_any_arc","","",108,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"into_any","","",109,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",109,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",109,[[["self"]],["any"]]],[11,"as_any_mut","","",109,[[["self"]],["any"]]],[11,"into_any_arc","","",109,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_any","","",101,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",101,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",101,[[["self"]],["any"]]],[11,"as_any_mut","","",101,[[["self"]],["any"]]],[11,"into_any_arc","","",101,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_any","","",105,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",105,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",105,[[["self"]],["any"]]],[11,"as_any_mut","","",105,[[["self"]],["any"]]],[11,"into_any_arc","","",105,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_pointer","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"into_any","","",125,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",125,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",125,[[["self"]],["any"]]],[11,"as_any_mut","","",125,[[["self"]],["any"]]],[11,"into_any_arc","","",125,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"into_any","","",110,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",110,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",110,[[["self"]],["any"]]],[11,"as_any_mut","","",110,[[["self"]],["any"]]],[11,"into_any_arc","","",110,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"into_any","","",111,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",111,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",111,[[["self"]],["any"]]],[11,"as_any_mut","","",111,[[["self"]],["any"]]],[11,"into_any_arc","","",111,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"into_any","","",112,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",112,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",112,[[["self"]],["any"]]],[11,"as_any_mut","","",112,[[["self"]],["any"]]],[11,"into_any_arc","","",112,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"into_any","","",113,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",113,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",113,[[["self"]],["any"]]],[11,"as_any_mut","","",113,[[["self"]],["any"]]],[11,"into_any_arc","","",113,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"into_any","","",114,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",114,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",114,[[["self"]],["any"]]],[11,"as_any_mut","","",114,[[["self"]],["any"]]],[11,"into_any_arc","","",114,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"into_any","","",116,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",116,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",116,[[["self"]],["any"]]],[11,"as_any_mut","","",116,[[["self"]],["any"]]],[11,"into_any_arc","","",116,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_keyboard","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"into_any","","",136,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",136,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",136,[[["self"]],["any"]]],[11,"as_any_mut","","",136,[[["self"]],["any"]]],[11,"into_any_arc","","",136,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"into_any","","",126,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",126,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",126,[[["self"]],["any"]]],[11,"as_any_mut","","",126,[[["self"]],["any"]]],[11,"into_any_arc","","",126,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"into_any","","",127,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",127,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",127,[[["self"]],["any"]]],[11,"as_any_mut","","",127,[[["self"]],["any"]]],[11,"into_any_arc","","",127,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"into_any","","",128,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",128,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",128,[[["self"]],["any"]]],[11,"as_any_mut","","",128,[[["self"]],["any"]]],[11,"into_any_arc","","",128,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"into_any","","",129,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",129,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",129,[[["self"]],["any"]]],[11,"as_any_mut","","",129,[[["self"]],["any"]]],[11,"into_any_arc","","",129,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_touch","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"into_any","","",144,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",144,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",144,[[["self"]],["any"]]],[11,"as_any_mut","","",144,[[["self"]],["any"]]],[11,"into_any_arc","","",144,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"into_any","","",137,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",137,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",137,[[["self"]],["any"]]],[11,"as_any_mut","","",137,[[["self"]],["any"]]],[11,"into_any_arc","","",137,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"into_any","","",138,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",138,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",138,[[["self"]],["any"]]],[11,"as_any_mut","","",138,[[["self"]],["any"]]],[11,"into_any_arc","","",138,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_output","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"into_any","","",152,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",152,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",152,[[["self"]],["any"]]],[11,"as_any_mut","","",152,[[["self"]],["any"]]],[11,"into_any_arc","","",152,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"into_any","","",153,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",153,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",153,[[["self"]],["any"]]],[11,"as_any_mut","","",153,[[["self"]],["any"]]],[11,"into_any_arc","","",153,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"into_any","","",145,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",145,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",145,[[["self"]],["any"]]],[11,"as_any_mut","","",145,[[["self"]],["any"]]],[11,"into_any_arc","","",145,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"into_any","","",146,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",146,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",146,[[["self"]],["any"]]],[11,"as_any_mut","","",146,[[["self"]],["any"]]],[11,"into_any_arc","","",146,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"into_any","","",147,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",147,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",147,[[["self"]],["any"]]],[11,"as_any_mut","","",147,[[["self"]],["any"]]],[11,"into_any_arc","","",147,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"into_any","","",148,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",148,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",148,[[["self"]],["any"]]],[11,"as_any_mut","","",148,[[["self"]],["any"]]],[11,"into_any_arc","","",148,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_region","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"into_any","","",186,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",186,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",186,[[["self"]],["any"]]],[11,"as_any_mut","","",186,[[["self"]],["any"]]],[11,"into_any_arc","","",186,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"into_any","","",154,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",154,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",154,[[["self"]],["any"]]],[11,"as_any_mut","","",154,[[["self"]],["any"]]],[11,"into_any_arc","","",154,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"into_any","","",187,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",187,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",187,[[["self"]],["any"]]],[11,"as_any_mut","","",187,[[["self"]],["any"]]],[11,"into_any_arc","","",187,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_subcompositor","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"into_any","","",188,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",188,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",188,[[["self"]],["any"]]],[11,"as_any_mut","","",188,[[["self"]],["any"]]],[11,"into_any_arc","","",188,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"into_any","","",157,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",157,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",157,[[["self"]],["any"]]],[11,"as_any_mut","","",157,[[["self"]],["any"]]],[11,"into_any_arc","","",157,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"into_any","","",158,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",158,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",158,[[["self"]],["any"]]],[11,"as_any_mut","","",158,[[["self"]],["any"]]],[11,"into_any_arc","","",158,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"into_any","","",189,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",189,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",189,[[["self"]],["any"]]],[11,"as_any_mut","","",189,[[["self"]],["any"]]],[11,"into_any_arc","","",189,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","wayland_server::protocol::wl_subsurface","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"into_any","","",190,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",190,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",190,[[["self"]],["any"]]],[11,"as_any_mut","","",190,[[["self"]],["any"]]],[11,"into_any_arc","","",190,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"into_any","","",160,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",160,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",160,[[["self"]],["any"]]],[11,"as_any_mut","","",160,[[["self"]],["any"]]],[11,"into_any_arc","","",160,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"into_any","","",161,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",161,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",161,[[["self"]],["any"]]],[11,"as_any_mut","","",161,[[["self"]],["any"]]],[11,"into_any_arc","","",161,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"into_any","","",191,[[["box"]],[["box",["any"]],["any"]]]],[11,"into_any_rc","","",191,[[["rc"]],[["any"],["rc",["any"]]]]],[11,"as_any","","",191,[[["self"]],["any"]]],[11,"as_any_mut","","",191,[[["self"]],["any"]]],[11,"into_any_arc","","",191,[[["arc"]],[["any"],["arc",["any"]]]]],[11,"is_destructor","wayland_server","",168,[[["self"]],["bool"]]],[11,"opcode","","",168,[[["self"]],["u16"]]],[11,"since","","",168,[[["self"]],["u32"]]],[11,"child","","",168,[[["u16"],["u32"],["m"]],[["option",["object"]],["object"]]]],[11,"from_raw","","",168,[[["message"]],[["result",["nomessage"]],["nomessage"]]]],[11,"into_raw","","",168,[[["u32"]],["message"]]],[11,"from_raw_c","","",168,[[["u32"]],[["result",["nomessage"]],["nomessage"]]]],[11,"as_raw_c_in","","",168,[[["f"]],["t"]]],[11,"clone","","",167,[[["self"]],["filter"]]],[11,"default","","",165,[[],["userdatamap"]]],[11,"as_ref","wayland_server::protocol::wl_callback","",17,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_compositor","",178,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shm_pool","",180,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shm","",30,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_buffer","",33,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_offer","",43,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_source","",52,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_device","",62,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_data_device_manager","",182,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shell","",184,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_shell_surface","",86,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_surface","",100,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_seat","",109,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_pointer","",125,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_keyboard","",136,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_touch","",144,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_output","",153,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_region","",186,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_subcompositor","",188,[[["self"]],["resource"]]],[11,"as_ref","wayland_server::protocol::wl_subsurface","",190,[[["self"]],["resource"]]],[11,"as_ref","wayland_server","",169,[[["self"]],["resource"]]],[11,"from","wayland_server::protocol::wl_callback","",17,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlcallback"]],["self"]]],[11,"from","wayland_server::protocol::wl_compositor","",178,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlcompositor"]],["self"]]],[11,"from","wayland_server::protocol::wl_shm_pool","",180,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshmpool"]],["self"]]],[11,"from","wayland_server::protocol::wl_shm","",30,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshm"]],["self"]]],[11,"from","wayland_server::protocol::wl_buffer","",33,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlbuffer"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_offer","",43,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldataoffer"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_source","",52,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatasource"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_device","",62,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatadevice"]],["self"]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",182,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wldatadevicemanager"]],["self"]]],[11,"from","wayland_server::protocol::wl_shell","",184,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshell"]],["self"]]],[11,"from","wayland_server::protocol::wl_shell_surface","",86,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlshellsurface"]],["self"]]],[11,"from","wayland_server::protocol::wl_surface","",100,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsurface"]],["self"]]],[11,"from","wayland_server::protocol::wl_seat","",109,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlseat"]],["self"]]],[11,"from","wayland_server::protocol::wl_pointer","",125,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlpointer"]],["self"]]],[11,"from","wayland_server::protocol::wl_keyboard","",136,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlkeyboard"]],["self"]]],[11,"from","wayland_server::protocol::wl_touch","",144,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wltouch"]],["self"]]],[11,"from","wayland_server::protocol::wl_output","",153,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wloutput"]],["self"]]],[11,"from","wayland_server::protocol::wl_region","",186,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlregion"]],["self"]]],[11,"from","wayland_server::protocol::wl_subcompositor","",188,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsubcompositor"]],["self"]]],[11,"from","wayland_server::protocol::wl_subsurface","",190,[[["resource"]],["self"]]],[11,"from","wayland_server","",5,[[["wlsubsurface"]],["self"]]],[11,"from","","",169,[[["resource"]],["self"]]],[11,"from","","",5,[[["anonymousobject"]],["self"]]],[11,"extend","wayland_server::protocol::wl_data_device_manager","",66,[[["intoiterator"],["self"]]]],[11,"extend","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["intoiterator"]]]],[11,"extend","","",85,[[["intoiterator"],["self"]]]],[11,"extend","wayland_server::protocol::wl_seat","",108,[[["intoiterator"],["self"]]]],[11,"extend","wayland_server::protocol::wl_output","",152,[[["self"],["intoiterator"]]]],[11,"clone","wayland_server","",2,[[["self"]],["client"]]],[11,"clone","","",5,[[["self"]],["resource"]]],[11,"clone","","",6,[[["self"]],["main"]]],[11,"clone","wayland_server::protocol::wl_callback","",17,[[["self"]],["wlcallback"]]],[11,"clone","wayland_server::protocol::wl_compositor","",178,[[["self"]],["wlcompositor"]]],[11,"clone","wayland_server::protocol::wl_shm_pool","",180,[[["self"]],["wlshmpool"]]],[11,"clone","wayland_server::protocol::wl_shm","",24,[[["self"]],["error"]]],[11,"clone","","",25,[[["self"]],["format"]]],[11,"clone","","",30,[[["self"]],["wlshm"]]],[11,"clone","wayland_server::protocol::wl_buffer","",33,[[["self"]],["wlbuffer"]]],[11,"clone","wayland_server::protocol::wl_data_offer","",34,[[["self"]],["error"]]],[11,"clone","","",43,[[["self"]],["wldataoffer"]]],[11,"clone","wayland_server::protocol::wl_data_source","",44,[[["self"]],["error"]]],[11,"clone","","",52,[[["self"]],["wldatasource"]]],[11,"clone","wayland_server::protocol::wl_data_device","",53,[[["self"]],["error"]]],[11,"clone","","",62,[[["self"]],["wldatadevice"]]],[11,"clone","wayland_server::protocol::wl_data_device_manager","",66,[[["self"]],["dndaction"]]],[11,"clone","","",182,[[["self"]],["wldatadevicemanager"]]],[11,"clone","wayland_server::protocol::wl_shell","",67,[[["self"]],["error"]]],[11,"clone","","",184,[[["self"]],["wlshell"]]],[11,"clone","wayland_server::protocol::wl_shell_surface","",84,[[["self"]],["resize"]]],[11,"clone","","",85,[[["self"]],["transient"]]],[11,"clone","","",70,[[["self"]],["fullscreenmethod"]]],[11,"clone","","",86,[[["self"]],["wlshellsurface"]]],[11,"clone","wayland_server::protocol::wl_surface","",87,[[["self"]],["error"]]],[11,"clone","","",100,[[["self"]],["wlsurface"]]],[11,"clone","wayland_server::protocol::wl_seat","",108,[[["self"]],["capability"]]],[11,"clone","","",109,[[["self"]],["wlseat"]]],[11,"clone","wayland_server::protocol::wl_pointer","",110,[[["self"]],["error"]]],[11,"clone","","",111,[[["self"]],["buttonstate"]]],[11,"clone","","",112,[[["self"]],["axis"]]],[11,"clone","","",113,[[["self"]],["axissource"]]],[11,"clone","","",125,[[["self"]],["wlpointer"]]],[11,"clone","wayland_server::protocol::wl_keyboard","",126,[[["self"]],["keymapformat"]]],[11,"clone","","",127,[[["self"]],["keystate"]]],[11,"clone","","",136,[[["self"]],["wlkeyboard"]]],[11,"clone","wayland_server::protocol::wl_touch","",144,[[["self"]],["wltouch"]]],[11,"clone","wayland_server::protocol::wl_output","",145,[[["self"]],["subpixel"]]],[11,"clone","","",146,[[["self"]],["transform"]]],[11,"clone","","",152,[[["self"]],["mode"]]],[11,"clone","","",153,[[["self"]],["wloutput"]]],[11,"clone","wayland_server::protocol::wl_region","",186,[[["self"]],["wlregion"]]],[11,"clone","wayland_server::protocol::wl_subcompositor","",157,[[["self"]],["error"]]],[11,"clone","","",188,[[["self"]],["wlsubcompositor"]]],[11,"clone","wayland_server::protocol::wl_subsurface","",160,[[["self"]],["error"]]],[11,"clone","","",190,[[["self"]],["wlsubsurface"]]],[11,"clone","wayland_server","",169,[[["self"]],["anonymousobject"]]],[11,"cmp","wayland_server::protocol::wl_data_device_manager","",66,[[["dndaction"],["self"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_shell_surface","",84,[[["resize"],["self"]],["ordering"]]],[11,"cmp","","",85,[[["self"],["transient"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_seat","",108,[[["capability"],["self"]],["ordering"]]],[11,"cmp","wayland_server::protocol::wl_output","",152,[[["self"],["mode"]],["ordering"]]],[11,"eq","wayland_server","",5,[[["self"],["resource"]],["bool"]]],[11,"eq","","",6,[[["main"],["self"]],["bool"]]],[11,"ne","","",6,[[["main"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_callback","",17,[[["self"],["wlcallback"]],["bool"]]],[11,"ne","","",17,[[["self"],["wlcallback"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_compositor","",178,[[["wlcompositor"],["self"]],["bool"]]],[11,"ne","","",178,[[["wlcompositor"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm_pool","",180,[[["self"],["wlshmpool"]],["bool"]]],[11,"ne","","",180,[[["self"],["wlshmpool"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shm","",24,[[["error"],["self"]],["bool"]]],[11,"eq","","",25,[[["format"],["self"]],["bool"]]],[11,"eq","","",30,[[["wlshm"],["self"]],["bool"]]],[11,"ne","","",30,[[["wlshm"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_buffer","",33,[[["wlbuffer"],["self"]],["bool"]]],[11,"ne","","",33,[[["wlbuffer"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_offer","",34,[[["self"],["error"]],["bool"]]],[11,"eq","","",43,[[["wldataoffer"],["self"]],["bool"]]],[11,"ne","","",43,[[["wldataoffer"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_source","",44,[[["error"],["self"]],["bool"]]],[11,"eq","","",52,[[["wldatasource"],["self"]],["bool"]]],[11,"ne","","",52,[[["wldatasource"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device","",53,[[["error"],["self"]],["bool"]]],[11,"eq","","",62,[[["wldatadevice"],["self"]],["bool"]]],[11,"ne","","",62,[[["wldatadevice"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_data_device_manager","",66,[[["dndaction"],["self"]],["bool"]]],[11,"ne","","",66,[[["dndaction"],["self"]],["bool"]]],[11,"eq","","",182,[[["wldatadevicemanager"],["self"]],["bool"]]],[11,"ne","","",182,[[["wldatadevicemanager"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell","",67,[[["self"],["error"]],["bool"]]],[11,"eq","","",184,[[["wlshell"],["self"]],["bool"]]],[11,"ne","","",184,[[["wlshell"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_shell_surface","",84,[[["resize"],["self"]],["bool"]]],[11,"ne","","",84,[[["resize"],["self"]],["bool"]]],[11,"eq","","",85,[[["self"],["transient"]],["bool"]]],[11,"ne","","",85,[[["self"],["transient"]],["bool"]]],[11,"eq","","",70,[[["fullscreenmethod"],["self"]],["bool"]]],[11,"eq","","",86,[[["wlshellsurface"],["self"]],["bool"]]],[11,"ne","","",86,[[["wlshellsurface"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_surface","",87,[[["error"],["self"]],["bool"]]],[11,"eq","","",100,[[["wlsurface"],["self"]],["bool"]]],[11,"ne","","",100,[[["wlsurface"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_seat","",108,[[["capability"],["self"]],["bool"]]],[11,"ne","","",108,[[["capability"],["self"]],["bool"]]],[11,"eq","","",109,[[["wlseat"],["self"]],["bool"]]],[11,"ne","","",109,[[["wlseat"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_pointer","",110,[[["self"],["error"]],["bool"]]],[11,"eq","","",111,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","","",112,[[["axis"],["self"]],["bool"]]],[11,"eq","","",113,[[["axissource"],["self"]],["bool"]]],[11,"eq","","",125,[[["self"],["wlpointer"]],["bool"]]],[11,"ne","","",125,[[["self"],["wlpointer"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_keyboard","",126,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","","",127,[[["keystate"],["self"]],["bool"]]],[11,"eq","","",136,[[["wlkeyboard"],["self"]],["bool"]]],[11,"ne","","",136,[[["wlkeyboard"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_touch","",144,[[["wltouch"],["self"]],["bool"]]],[11,"ne","","",144,[[["wltouch"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_output","",145,[[["self"],["subpixel"]],["bool"]]],[11,"eq","","",146,[[["transform"],["self"]],["bool"]]],[11,"eq","","",152,[[["self"],["mode"]],["bool"]]],[11,"ne","","",152,[[["self"],["mode"]],["bool"]]],[11,"eq","","",153,[[["wloutput"],["self"]],["bool"]]],[11,"ne","","",153,[[["wloutput"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_region","",186,[[["wlregion"],["self"]],["bool"]]],[11,"ne","","",186,[[["wlregion"],["self"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subcompositor","",157,[[["error"],["self"]],["bool"]]],[11,"eq","","",188,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"ne","","",188,[[["self"],["wlsubcompositor"]],["bool"]]],[11,"eq","wayland_server::protocol::wl_subsurface","",160,[[["self"],["error"]],["bool"]]],[11,"eq","","",190,[[["wlsubsurface"],["self"]],["bool"]]],[11,"ne","","",190,[[["wlsubsurface"],["self"]],["bool"]]],[11,"eq","wayland_server","",169,[[["self"],["anonymousobject"]],["bool"]]],[11,"ne","","",169,[[["self"],["anonymousobject"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_data_device_manager","",66,[[["dndaction"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",66,[[["dndaction"],["self"]],["bool"]]],[11,"le","","",66,[[["dndaction"],["self"]],["bool"]]],[11,"gt","","",66,[[["dndaction"],["self"]],["bool"]]],[11,"ge","","",66,[[["dndaction"],["self"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_shell_surface","",84,[[["resize"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",84,[[["resize"],["self"]],["bool"]]],[11,"le","","",84,[[["resize"],["self"]],["bool"]]],[11,"gt","","",84,[[["resize"],["self"]],["bool"]]],[11,"ge","","",84,[[["resize"],["self"]],["bool"]]],[11,"partial_cmp","","",85,[[["self"],["transient"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",85,[[["self"],["transient"]],["bool"]]],[11,"le","","",85,[[["self"],["transient"]],["bool"]]],[11,"gt","","",85,[[["self"],["transient"]],["bool"]]],[11,"ge","","",85,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_seat","",108,[[["capability"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",108,[[["capability"],["self"]],["bool"]]],[11,"le","","",108,[[["capability"],["self"]],["bool"]]],[11,"gt","","",108,[[["capability"],["self"]],["bool"]]],[11,"ge","","",108,[[["capability"],["self"]],["bool"]]],[11,"partial_cmp","wayland_server::protocol::wl_output","",152,[[["self"],["mode"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",152,[[["self"],["mode"]],["bool"]]],[11,"le","","",152,[[["self"],["mode"]],["bool"]]],[11,"gt","","",152,[[["self"],["mode"]],["bool"]]],[11,"ge","","",152,[[["self"],["mode"]],["bool"]]],[11,"deref","wayland_server","",6,[[["self"]],["i"]]],[11,"fmt","wayland_server::protocol::wl_shm","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_offer","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_source","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_surface","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_pointer","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_keyboard","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",127,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",145,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",146,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subcompositor","",157,[[["formatter"],["self"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_subsurface","",160,[[["formatter"],["self"]],["result"]]],[11,"sub","wayland_server::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",66,[[["dndaction"]],["dndaction"]]],[11,"sub","wayland_server::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",84,[[["resize"]],["resize"]]],[11,"sub","","Returns the set difference of the two sets of flags.",85,[[["transient"]],["transient"]]],[11,"sub","wayland_server::protocol::wl_seat","Returns the set difference of the two sets of flags.",108,[[["capability"]],["capability"]]],[11,"sub","wayland_server::protocol::wl_output","Returns the set difference of the two sets of flags.",152,[[["mode"]],["mode"]]],[11,"sub_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags enabled in the set.",66,[[["dndaction"],["self"]]]],[11,"sub_assign","wayland_server::protocol::wl_shell_surface","Disables all flags enabled in the set.",84,[[["self"],["resize"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",85,[[["self"],["transient"]]]],[11,"sub_assign","wayland_server::protocol::wl_seat","Disables all flags enabled in the set.",108,[[["self"],["capability"]]]],[11,"sub_assign","wayland_server::protocol::wl_output","Disables all flags enabled in the set.",152,[[["self"],["mode"]]]],[11,"not","wayland_server::protocol::wl_data_device_manager","Returns the complement of this set of flags.",66,[[],["dndaction"]]],[11,"not","wayland_server::protocol::wl_shell_surface","Returns the complement of this set of flags.",84,[[],["resize"]]],[11,"not","","Returns the complement of this set of flags.",85,[[],["transient"]]],[11,"not","wayland_server::protocol::wl_seat","Returns the complement of this set of flags.",108,[[],["capability"]]],[11,"not","wayland_server::protocol::wl_output","Returns the complement of this set of flags.",152,[[],["mode"]]],[11,"bitand","wayland_server::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",66,[[["dndaction"]],["dndaction"]]],[11,"bitand","wayland_server::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",84,[[["resize"]],["resize"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",85,[[["transient"]],["transient"]]],[11,"bitand","wayland_server::protocol::wl_seat","Returns the intersection between the two sets of flags.",108,[[["capability"]],["capability"]]],[11,"bitand","wayland_server::protocol::wl_output","Returns the intersection between the two sets of flags.",152,[[["mode"]],["mode"]]],[11,"bitor","wayland_server::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",66,[[["dndaction"]],["dndaction"]]],[11,"bitor","wayland_server::protocol::wl_shell_surface","Returns the union of the two sets of flags.",84,[[["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",85,[[["transient"]],["transient"]]],[11,"bitor","wayland_server::protocol::wl_seat","Returns the union of the two sets of flags.",108,[[["capability"]],["capability"]]],[11,"bitor","wayland_server::protocol::wl_output","Returns the union of the two sets of flags.",152,[[["mode"]],["mode"]]],[11,"bitxor","wayland_server::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",66,[[["dndaction"]],["dndaction"]]],[11,"bitxor","wayland_server::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",84,[[["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",85,[[["transient"]],["transient"]]],[11,"bitxor","wayland_server::protocol::wl_seat","Returns the left flags, but with all the right flags…",108,[[["capability"]],["capability"]]],[11,"bitxor","wayland_server::protocol::wl_output","Returns the left flags, but with all the right flags…",152,[[["mode"]],["mode"]]],[11,"bitand_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags disabled in the set.",66,[[["dndaction"],["self"]]]],[11,"bitand_assign","wayland_server::protocol::wl_shell_surface","Disables all flags disabled in the set.",84,[[["self"],["resize"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",85,[[["self"],["transient"]]]],[11,"bitand_assign","wayland_server::protocol::wl_seat","Disables all flags disabled in the set.",108,[[["self"],["capability"]]]],[11,"bitand_assign","wayland_server::protocol::wl_output","Disables all flags disabled in the set.",152,[[["self"],["mode"]]]],[11,"bitor_assign","wayland_server::protocol::wl_data_device_manager","Adds the set of flags.",66,[[["dndaction"],["self"]]]],[11,"bitor_assign","wayland_server::protocol::wl_shell_surface","Adds the set of flags.",84,[[["self"],["resize"]]]],[11,"bitor_assign","","Adds the set of flags.",85,[[["self"],["transient"]]]],[11,"bitor_assign","wayland_server::protocol::wl_seat","Adds the set of flags.",108,[[["self"],["capability"]]]],[11,"bitor_assign","wayland_server::protocol::wl_output","Adds the set of flags.",152,[[["self"],["mode"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_data_device_manager","Toggles the set of flags.",66,[[["dndaction"],["self"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_shell_surface","Toggles the set of flags.",84,[[["self"],["resize"]]]],[11,"bitxor_assign","","Toggles the set of flags.",85,[[["self"],["transient"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_seat","Toggles the set of flags.",108,[[["self"],["capability"]]]],[11,"bitxor_assign","wayland_server::protocol::wl_output","Toggles the set of flags.",152,[[["self"],["mode"]]]],[11,"hash","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["__h"]]]],[11,"hash","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","wayland_server::protocol::wl_seat","",108,[[["self"],["__h"]]]],[11,"hash","wayland_server::protocol::wl_output","",152,[[["self"],["__h"]]]],[11,"from_iter","wayland_server::protocol::wl_data_device_manager","",66,[[["intoiterator"]],["dndaction"]]],[11,"from_iter","wayland_server::protocol::wl_shell_surface","",84,[[["intoiterator"]],["resize"]]],[11,"from_iter","","",85,[[["intoiterator"]],["transient"]]],[11,"from_iter","wayland_server::protocol::wl_seat","",108,[[["intoiterator"]],["capability"]]],[11,"from_iter","wayland_server::protocol::wl_output","",152,[[["intoiterator"]],["mode"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",152,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_seat","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","wayland_server::protocol::wl_output","",152,[[["self"],["formatter"]],["result"]]],[11,"c_interface","wayland_server::protocol::wl_callback","",17,[[]]],[11,"c_interface","wayland_server::protocol::wl_compositor","",178,[[]]],[11,"c_interface","wayland_server::protocol::wl_shm_pool","",180,[[]]],[11,"c_interface","wayland_server::protocol::wl_shm","",30,[[]]],[11,"c_interface","wayland_server::protocol::wl_buffer","",33,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_offer","",43,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_source","",52,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_device","",62,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_device_manager","",182,[[]]],[11,"c_interface","wayland_server::protocol::wl_shell","",184,[[]]],[11,"c_interface","wayland_server::protocol::wl_shell_surface","",86,[[]]],[11,"c_interface","wayland_server::protocol::wl_surface","",100,[[]]],[11,"c_interface","wayland_server::protocol::wl_seat","",109,[[]]],[11,"c_interface","wayland_server::protocol::wl_pointer","",125,[[]]],[11,"c_interface","wayland_server::protocol::wl_keyboard","",136,[[]]],[11,"c_interface","wayland_server::protocol::wl_touch","",144,[[]]],[11,"c_interface","wayland_server::protocol::wl_output","",153,[[]]],[11,"c_interface","wayland_server::protocol::wl_region","",186,[[]]],[11,"c_interface","wayland_server::protocol::wl_subcompositor","",188,[[]]],[11,"c_interface","wayland_server::protocol::wl_subsurface","",190,[[]]],[11,"c_interface","wayland_server","",169,[[]]],[11,"is_destructor","wayland_server::protocol::wl_callback","",177,[[["self"]],["bool"]]],[11,"opcode","","",177,[[["self"]],["u16"]]],[11,"since","","",177,[[["self"]],["u32"]]],[11,"child","","",177,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",177,[[["message"]],["result"]]],[11,"into_raw","","",177,[[["u32"]],["message"]]],[11,"from_raw_c","","",177,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",177,[[["f"]],["t"]]],[11,"is_destructor","","",15,[[["self"]],["bool"]]],[11,"opcode","","",15,[[["self"]],["u16"]]],[11,"since","","",15,[[["self"]],["u32"]]],[11,"child","","",15,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",15,[[["message"]],["result"]]],[11,"into_raw","","",15,[[["u32"]],["message"]]],[11,"from_raw_c","","",15,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",15,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_compositor","",18,[[["self"]],["bool"]]],[11,"opcode","","",18,[[["self"]],["u16"]]],[11,"since","","",18,[[["self"]],["u32"]]],[11,"child","","",18,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",18,[[["message"]],["result"]]],[11,"into_raw","","",18,[[["u32"]],["message"]]],[11,"from_raw_c","","",18,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",18,[[["f"]],["t"]]],[11,"is_destructor","","",179,[[["self"]],["bool"]]],[11,"opcode","","",179,[[["self"]],["u16"]]],[11,"since","","",179,[[["self"]],["u32"]]],[11,"child","","",179,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",179,[[["message"]],["result"]]],[11,"into_raw","","",179,[[["u32"]],["message"]]],[11,"from_raw_c","","",179,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",179,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",21,[[["self"]],["bool"]]],[11,"opcode","","",21,[[["self"]],["u16"]]],[11,"since","","",21,[[["self"]],["u32"]]],[11,"child","","",21,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",21,[[["message"]],["result"]]],[11,"into_raw","","",21,[[["u32"]],["message"]]],[11,"from_raw_c","","",21,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",21,[[["f"]],["t"]]],[11,"is_destructor","","",181,[[["self"]],["bool"]]],[11,"opcode","","",181,[[["self"]],["u16"]]],[11,"since","","",181,[[["self"]],["u32"]]],[11,"child","","",181,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",181,[[["message"]],["result"]]],[11,"into_raw","","",181,[[["u32"]],["message"]]],[11,"from_raw_c","","",181,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",181,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shm","",26,[[["self"]],["bool"]]],[11,"opcode","","",26,[[["self"]],["u16"]]],[11,"since","","",26,[[["self"]],["u32"]]],[11,"child","","",26,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",26,[[["message"]],["result"]]],[11,"into_raw","","",26,[[["u32"]],["message"]]],[11,"from_raw_c","","",26,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",26,[[["f"]],["t"]]],[11,"is_destructor","","",28,[[["self"]],["bool"]]],[11,"opcode","","",28,[[["self"]],["u16"]]],[11,"since","","",28,[[["self"]],["u32"]]],[11,"child","","",28,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",28,[[["message"]],["result"]]],[11,"into_raw","","",28,[[["u32"]],["message"]]],[11,"from_raw_c","","",28,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",28,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_buffer","",31,[[["self"]],["bool"]]],[11,"opcode","","",31,[[["self"]],["u16"]]],[11,"since","","",31,[[["self"]],["u32"]]],[11,"child","","",31,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",31,[[["message"]],["result"]]],[11,"into_raw","","",31,[[["u32"]],["message"]]],[11,"from_raw_c","","",31,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",31,[[["f"]],["t"]]],[11,"is_destructor","","",32,[[["self"]],["bool"]]],[11,"opcode","","",32,[[["self"]],["u16"]]],[11,"since","","",32,[[["self"]],["u32"]]],[11,"child","","",32,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",32,[[["message"]],["result"]]],[11,"into_raw","","",32,[[["u32"]],["message"]]],[11,"from_raw_c","","",32,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",32,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_offer","",35,[[["self"]],["bool"]]],[11,"opcode","","",35,[[["self"]],["u16"]]],[11,"since","","",35,[[["self"]],["u32"]]],[11,"child","","",35,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",35,[[["message"]],["result"]]],[11,"into_raw","","",35,[[["u32"]],["message"]]],[11,"from_raw_c","","",35,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",35,[[["f"]],["t"]]],[11,"is_destructor","","",39,[[["self"]],["bool"]]],[11,"opcode","","",39,[[["self"]],["u16"]]],[11,"since","","",39,[[["self"]],["u32"]]],[11,"child","","",39,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",39,[[["message"]],["result"]]],[11,"into_raw","","",39,[[["u32"]],["message"]]],[11,"from_raw_c","","",39,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",39,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_source","",45,[[["self"]],["bool"]]],[11,"opcode","","",45,[[["self"]],["u16"]]],[11,"since","","",45,[[["self"]],["u32"]]],[11,"child","","",45,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",45,[[["message"]],["result"]]],[11,"into_raw","","",45,[[["u32"]],["message"]]],[11,"from_raw_c","","",45,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",45,[[["f"]],["t"]]],[11,"is_destructor","","",48,[[["self"]],["bool"]]],[11,"opcode","","",48,[[["self"]],["u16"]]],[11,"since","","",48,[[["self"]],["u32"]]],[11,"child","","",48,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",48,[[["message"]],["result"]]],[11,"into_raw","","",48,[[["u32"]],["message"]]],[11,"from_raw_c","","",48,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",48,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device","",54,[[["self"]],["bool"]]],[11,"opcode","","",54,[[["self"]],["u16"]]],[11,"since","","",54,[[["self"]],["u32"]]],[11,"child","","",54,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",54,[[["message"]],["result"]]],[11,"into_raw","","",54,[[["u32"]],["message"]]],[11,"from_raw_c","","",54,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",54,[[["f"]],["t"]]],[11,"is_destructor","","",57,[[["self"]],["bool"]]],[11,"opcode","","",57,[[["self"]],["u16"]]],[11,"since","","",57,[[["self"]],["u32"]]],[11,"child","","",57,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",57,[[["message"]],["result"]]],[11,"into_raw","","",57,[[["u32"]],["message"]]],[11,"from_raw_c","","",57,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",57,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_data_device_manager","",63,[[["self"]],["bool"]]],[11,"opcode","","",63,[[["self"]],["u16"]]],[11,"since","","",63,[[["self"]],["u32"]]],[11,"child","","",63,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",63,[[["message"]],["result"]]],[11,"into_raw","","",63,[[["u32"]],["message"]]],[11,"from_raw_c","","",63,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",63,[[["f"]],["t"]]],[11,"is_destructor","","",183,[[["self"]],["bool"]]],[11,"opcode","","",183,[[["self"]],["u16"]]],[11,"since","","",183,[[["self"]],["u32"]]],[11,"child","","",183,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",183,[[["message"]],["result"]]],[11,"into_raw","","",183,[[["u32"]],["message"]]],[11,"from_raw_c","","",183,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",183,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shell","",68,[[["self"]],["bool"]]],[11,"opcode","","",68,[[["self"]],["u16"]]],[11,"since","","",68,[[["self"]],["u32"]]],[11,"child","","",68,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",68,[[["message"]],["result"]]],[11,"into_raw","","",68,[[["u32"]],["message"]]],[11,"from_raw_c","","",68,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",68,[[["f"]],["t"]]],[11,"is_destructor","","",185,[[["self"]],["bool"]]],[11,"opcode","","",185,[[["self"]],["u16"]]],[11,"since","","",185,[[["self"]],["u32"]]],[11,"child","","",185,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",185,[[["message"]],["result"]]],[11,"into_raw","","",185,[[["u32"]],["message"]]],[11,"from_raw_c","","",185,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",185,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_shell_surface","",71,[[["self"]],["bool"]]],[11,"opcode","","",71,[[["self"]],["u16"]]],[11,"since","","",71,[[["self"]],["u32"]]],[11,"child","","",71,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",71,[[["message"]],["result"]]],[11,"into_raw","","",71,[[["u32"]],["message"]]],[11,"from_raw_c","","",71,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",71,[[["f"]],["t"]]],[11,"is_destructor","","",81,[[["self"]],["bool"]]],[11,"opcode","","",81,[[["self"]],["u16"]]],[11,"since","","",81,[[["self"]],["u32"]]],[11,"child","","",81,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",81,[[["message"]],["result"]]],[11,"into_raw","","",81,[[["u32"]],["message"]]],[11,"from_raw_c","","",81,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",81,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_surface","",88,[[["self"]],["bool"]]],[11,"opcode","","",88,[[["self"]],["u16"]]],[11,"since","","",88,[[["self"]],["u32"]]],[11,"child","","",88,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",88,[[["message"]],["result"]]],[11,"into_raw","","",88,[[["u32"]],["message"]]],[11,"from_raw_c","","",88,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",88,[[["f"]],["t"]]],[11,"is_destructor","","",97,[[["self"]],["bool"]]],[11,"opcode","","",97,[[["self"]],["u16"]]],[11,"since","","",97,[[["self"]],["u32"]]],[11,"child","","",97,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",97,[[["message"]],["result"]]],[11,"into_raw","","",97,[[["u32"]],["message"]]],[11,"from_raw_c","","",97,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",97,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_seat","",101,[[["self"]],["bool"]]],[11,"opcode","","",101,[[["self"]],["u16"]]],[11,"since","","",101,[[["self"]],["u32"]]],[11,"child","","",101,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",101,[[["message"]],["result"]]],[11,"into_raw","","",101,[[["u32"]],["message"]]],[11,"from_raw_c","","",101,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",101,[[["f"]],["t"]]],[11,"is_destructor","","",105,[[["self"]],["bool"]]],[11,"opcode","","",105,[[["self"]],["u16"]]],[11,"since","","",105,[[["self"]],["u32"]]],[11,"child","","",105,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",105,[[["message"]],["result"]]],[11,"into_raw","","",105,[[["u32"]],["message"]]],[11,"from_raw_c","","",105,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",105,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_pointer","",114,[[["self"]],["bool"]]],[11,"opcode","","",114,[[["self"]],["u16"]]],[11,"since","","",114,[[["self"]],["u32"]]],[11,"child","","",114,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",114,[[["message"]],["result"]]],[11,"into_raw","","",114,[[["u32"]],["message"]]],[11,"from_raw_c","","",114,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",114,[[["f"]],["t"]]],[11,"is_destructor","","",116,[[["self"]],["bool"]]],[11,"opcode","","",116,[[["self"]],["u16"]]],[11,"since","","",116,[[["self"]],["u32"]]],[11,"child","","",116,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",116,[[["message"]],["result"]]],[11,"into_raw","","",116,[[["u32"]],["message"]]],[11,"from_raw_c","","",116,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",116,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_keyboard","",128,[[["self"]],["bool"]]],[11,"opcode","","",128,[[["self"]],["u16"]]],[11,"since","","",128,[[["self"]],["u32"]]],[11,"child","","",128,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",128,[[["message"]],["result"]]],[11,"into_raw","","",128,[[["u32"]],["message"]]],[11,"from_raw_c","","",128,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",128,[[["f"]],["t"]]],[11,"is_destructor","","",129,[[["self"]],["bool"]]],[11,"opcode","","",129,[[["self"]],["u16"]]],[11,"since","","",129,[[["self"]],["u32"]]],[11,"child","","",129,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",129,[[["message"]],["result"]]],[11,"into_raw","","",129,[[["u32"]],["message"]]],[11,"from_raw_c","","",129,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",129,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_touch","",137,[[["self"]],["bool"]]],[11,"opcode","","",137,[[["self"]],["u16"]]],[11,"since","","",137,[[["self"]],["u32"]]],[11,"child","","",137,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",137,[[["message"]],["result"]]],[11,"into_raw","","",137,[[["u32"]],["message"]]],[11,"from_raw_c","","",137,[[["u32"]],[["result",["request"]],["request"]]]],[11,"as_raw_c_in","","",137,[[["f"]],["t"]]],[11,"is_destructor","","",138,[[["self"]],["bool"]]],[11,"opcode","","",138,[[["self"]],["u16"]]],[11,"since","","",138,[[["self"]],["u32"]]],[11,"child","","",138,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",138,[[["message"]],["result"]]],[11,"into_raw","","",138,[[["u32"]],["message"]]],[11,"from_raw_c","","",138,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",138,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_output","",147,[[["self"]],["bool"]]],[11,"opcode","","",147,[[["self"]],["u16"]]],[11,"since","","",147,[[["self"]],["u32"]]],[11,"child","","",147,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",147,[[["message"]],["result"]]],[11,"into_raw","","",147,[[["u32"]],["message"]]],[11,"from_raw_c","","",147,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",147,[[["f"]],["t"]]],[11,"is_destructor","","",148,[[["self"]],["bool"]]],[11,"opcode","","",148,[[["self"]],["u16"]]],[11,"since","","",148,[[["self"]],["u32"]]],[11,"child","","",148,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",148,[[["message"]],["result"]]],[11,"into_raw","","",148,[[["u32"]],["message"]]],[11,"from_raw_c","","",148,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",148,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_region","",154,[[["self"]],["bool"]]],[11,"opcode","","",154,[[["self"]],["u16"]]],[11,"since","","",154,[[["self"]],["u32"]]],[11,"child","","",154,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",154,[[["message"]],["result"]]],[11,"into_raw","","",154,[[["u32"]],["message"]]],[11,"from_raw_c","","",154,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",154,[[["f"]],["t"]]],[11,"is_destructor","","",187,[[["self"]],["bool"]]],[11,"opcode","","",187,[[["self"]],["u16"]]],[11,"since","","",187,[[["self"]],["u32"]]],[11,"child","","",187,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",187,[[["message"]],["result"]]],[11,"into_raw","","",187,[[["u32"]],["message"]]],[11,"from_raw_c","","",187,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",187,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_subcompositor","",158,[[["self"]],["bool"]]],[11,"opcode","","",158,[[["self"]],["u16"]]],[11,"since","","",158,[[["self"]],["u32"]]],[11,"child","","",158,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",158,[[["message"]],["result"]]],[11,"into_raw","","",158,[[["u32"]],["message"]]],[11,"from_raw_c","","",158,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",158,[[["f"]],["t"]]],[11,"is_destructor","","",189,[[["self"]],["bool"]]],[11,"opcode","","",189,[[["self"]],["u16"]]],[11,"since","","",189,[[["self"]],["u32"]]],[11,"child","","",189,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",189,[[["message"]],["result"]]],[11,"into_raw","","",189,[[["u32"]],["message"]]],[11,"from_raw_c","","",189,[[["u32"]],[["event"],["result",["event"]]]]],[11,"as_raw_c_in","","",189,[[["f"]],["t"]]],[11,"is_destructor","wayland_server::protocol::wl_subsurface","",161,[[["self"]],["bool"]]],[11,"opcode","","",161,[[["self"]],["u16"]]],[11,"since","","",161,[[["self"]],["u32"]]],[11,"child","","",161,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",161,[[["message"]],["result"]]],[11,"into_raw","","",161,[[["u32"]],["message"]]],[11,"from_raw_c","","",161,[[["u32"]],[["request"],["result",["request"]]]]],[11,"as_raw_c_in","","",161,[[["f"]],["t"]]],[11,"is_destructor","","",191,[[["self"]],["bool"]]],[11,"opcode","","",191,[[["self"]],["u16"]]],[11,"since","","",191,[[["self"]],["u32"]]],[11,"child","","",191,[[["u16"],["u32"],["meta"]],[["object"],["option",["object"]]]]],[11,"from_raw","","",191,[[["message"]],["result"]]],[11,"into_raw","","",191,[[["u32"]],["message"]]],[11,"from_raw_c","","",191,[[["u32"]],[["result",["event"]],["event"]]]],[11,"as_raw_c_in","","",191,[[["f"]],["t"]]],[11,"new","wayland_server","Create a new map",165,[[],["userdatamap"]]],[11,"get","","Attempt to access the wrapped user data of a given type",165,[[["self"]],[["option"],["t"]]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",165,[[["self"],["f"]],["bool"]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",165,[[["self"],["f"]],["bool"]]],[11,"get","","Access the dispatch data knowing its type",166,[[["self"]],[["option"],["t"]]]],[11,"wrap","","Wrap a mutable reference",166,[[["t"]],["dispatchdata"]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",166,[[["self"]],["dispatchdata"]]],[11,"new","","Create a new filter from given closure",167,[[["f"]],["filter"]]],[11,"send","","Send a message to this filter",167,[[["dispatchdata"],["self"],["e"]]]]],"p":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"Main"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"ResourceMap"],[4,"Event"],[13,"Done"],[3,"WlCallback"],[4,"Request"],[13,"CreateSurface"],[13,"CreateRegion"],[4,"Request"],[13,"CreateBuffer"],[13,"Resize"],[4,"Error"],[4,"Format"],[4,"Request"],[13,"CreatePool"],[4,"Event"],[13,"Format"],[3,"WlShm"],[4,"Request"],[4,"Event"],[3,"WlBuffer"],[4,"Error"],[4,"Request"],[13,"Accept"],[13,"Receive"],[13,"SetActions"],[4,"Event"],[13,"Offer"],[13,"SourceActions"],[13,"Action"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[13,"Offer"],[13,"SetActions"],[4,"Event"],[13,"Target"],[13,"Send"],[13,"Action"],[3,"WlDataSource"],[4,"Error"],[4,"Request"],[13,"StartDrag"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Enter"],[13,"Motion"],[13,"Selection"],[3,"WlDataDevice"],[4,"Request"],[13,"CreateDataSource"],[13,"GetDataDevice"],[3,"DndAction"],[4,"Error"],[4,"Request"],[13,"GetShellSurface"],[4,"FullscreenMethod"],[4,"Request"],[13,"Pong"],[13,"Move"],[13,"Resize"],[13,"SetTransient"],[13,"SetFullscreen"],[13,"SetPopup"],[13,"SetMaximized"],[13,"SetTitle"],[13,"SetClass"],[4,"Event"],[13,"Ping"],[13,"Configure"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[4,"Error"],[4,"Request"],[13,"Attach"],[13,"Damage"],[13,"Frame"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferTransform"],[13,"SetBufferScale"],[13,"DamageBuffer"],[4,"Event"],[13,"Enter"],[13,"Leave"],[3,"WlSurface"],[4,"Request"],[13,"GetPointer"],[13,"GetKeyboard"],[13,"GetTouch"],[4,"Event"],[13,"Capabilities"],[13,"Name"],[3,"Capability"],[3,"WlSeat"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[13,"SetCursor"],[4,"Event"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"Button"],[13,"Axis"],[13,"AxisSource"],[13,"AxisStop"],[13,"AxisDiscrete"],[3,"WlPointer"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[13,"Keymap"],[13,"Enter"],[13,"Leave"],[13,"Key"],[13,"Modifiers"],[13,"RepeatInfo"],[3,"WlKeyboard"],[4,"Request"],[4,"Event"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"],[3,"WlTouch"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[13,"Geometry"],[13,"Mode"],[13,"Scale"],[3,"Mode"],[3,"WlOutput"],[4,"Request"],[13,"Add"],[13,"Subtract"],[4,"Error"],[4,"Request"],[13,"GetSubsurface"],[4,"Error"],[4,"Request"],[13,"SetPosition"],[13,"PlaceAbove"],[13,"PlaceBelow"],[3,"UserDataMap"],[3,"DispatchData"],[3,"Filter"],[4,"NoMessage"],[3,"AnonymousObject"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[4,"Request"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"Event"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","i":[[0,"common","wayland_sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[19,"wl_argument","","",null,null],[12,"i","","",4,null],[12,"u","","",4,null],[12,"f","","",4,null],[12,"s","","",4,null],[12,"o","","",4,null],[12,"n","","",4,null],[12,"a","","",4,null],[12,"h","","",4,null],[5,"wl_fixed_to_double","","",null,[[["wl_fixed_t"]],["f64"]]],[5,"wl_fixed_from_double","","",null,[[["f64"]],["wl_fixed_t"]]],[5,"wl_fixed_to_int","","",null,[[["wl_fixed_t"]],["i32"]]],[5,"wl_fixed_from_int","","",null,[[["i32"]],["wl_fixed_t"]]],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[4,"wl_proxy","wayland_sys::client","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,[[],["bool"]]],[5,"wl_display_connect_to_fd","","",null,null],[5,"wl_display_connect","","",null,null],[5,"wl_display_disconnect","","",null,null],[5,"wl_display_get_fd","","",null,null],[5,"wl_display_roundtrip","","",null,null],[5,"wl_display_read_events","","",null,null],[5,"wl_display_prepare_read","","",null,null],[5,"wl_display_cancel_read","","",null,null],[5,"wl_display_dispatch","","",null,null],[5,"wl_display_dispatch_pending","","",null,null],[5,"wl_display_get_error","","",null,null],[5,"wl_display_get_protocol_error","","",null,null],[5,"wl_display_flush","","",null,null],[5,"wl_event_queue_destroy","","",null,null],[5,"wl_display_create_queue","","",null,null],[5,"wl_display_roundtrip_queue","","",null,null],[5,"wl_display_prepare_read_queue","","",null,null],[5,"wl_display_dispatch_queue","","",null,null],[5,"wl_display_dispatch_queue_pending","","",null,null],[5,"wl_proxy_create","","",null,null],[5,"wl_proxy_destroy","","",null,null],[5,"wl_proxy_add_listener","","",null,null],[5,"wl_proxy_get_listener","","",null,null],[5,"wl_proxy_add_dispatcher","","",null,null],[5,"wl_proxy_marshal_array_constructor","","",null,null],[5,"wl_proxy_marshal_array_constructor_versioned","","",null,null],[5,"wl_proxy_marshal_array","","",null,null],[5,"wl_proxy_set_user_data","","",null,null],[5,"wl_proxy_get_user_data","","",null,null],[5,"wl_proxy_get_id","","",null,null],[5,"wl_proxy_get_class","","",null,null],[5,"wl_proxy_set_queue","","",null,null],[5,"wl_proxy_get_version","","",null,null],[5,"wl_proxy_create_wrapper","","",null,null],[5,"wl_proxy_wrapper_destroy","","",null,null],[5,"wl_log_set_handler_client","","",null,null],[5,"wl_list_init","","",null,null],[5,"wl_list_insert","","",null,null],[5,"wl_list_remove","","",null,null],[5,"wl_list_length","","",null,null],[5,"wl_list_empty","","",null,null],[5,"wl_list_insert_list","","",null,null],[5,"wl_array_init","","",null,null],[5,"wl_array_release","","",null,null],[5,"wl_array_add","","",null,null],[5,"wl_array_copy","","",null,null],[5,"wl_proxy_marshal_constructor","","",null,null],[5,"wl_proxy_marshal_constructor_versioned","","",null,null],[5,"wl_proxy_marshal","","",null,null],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",null,null],[3,"wl_listener","wayland_sys::server","",null,null],[12,"link","","",5,null],[12,"notify","","",5,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",6,null],[4,"wl_client","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[4,"wl_egl_window","wayland_sys::egl","",null,null],[5,"is_lib_available","","",null,[[],["bool"]]],[5,"wl_egl_window_create","","",null,null],[5,"wl_egl_window_destroy","","",null,null],[5,"wl_egl_window_resize","","",null,null],[5,"wl_egl_window_get_attached_size","","",null,null],[7,"RUST_MANAGED","wayland_sys","Magic static for wayland objects managed by wayland-client…",null,null],[14,"ffi_dispatch","","",null,null],[11,"from","wayland_sys::common","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","wayland_sys::client","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","wayland_sys::server","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","wayland_sys::egl","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]]],"p":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[4,"wl_proxy"],[4,"wl_display"],[4,"wl_event_queue"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[4,"wl_egl_window"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);